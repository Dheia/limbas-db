<?php
/*
 * Copyright notice
 * (c) 1998-2016 Limbas GmbH - Axel westhagen (support@limbas.org)
 * All rights reserved
 * This script is part of the LIMBAS project. The LIMBAS project is free software; you can redistribute it and/or modify it on 2 Ways:
 * Under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * Or
 * In a Propritary Software Licence http://limbas.org
 * The GNU General Public License can be found at http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 * Version 3.0
 */

/*
 * ID: 139
 */


function get_fieldname($atid,$ftid){
	global $db;
	
	$sqlquery = "SELECT FIELD_NAME,FIELD_TYPE FROM LMB_CONF_FIELDS WHERE TAB_ID = $atid AND FIELD_ID = $ftid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	return array(odbc_result($rs,"FIELD_NAME"),odbc_result($rs,"FIELD_TYPE"));
}


/* --- Feldtypen --------------------------------------------- */
$sqlquery = "SELECT * FROM LMB_FIELD_TYPES ORDER BY SORT";
$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
$bzm = 1;
while(odbc_fetch_row($rs, $bzm)) {
	$rid = odbc_result($rs, "ID");
	$result_type["id"][$rid] = $rid;
	$result_type["field_type"][$rid] = odbc_result($rs, "FIELD_TYPE");
	$result_type["data_type"][$rid] = odbc_result($rs, "DATA_TYPE");
	$result_type["parse_type"][$rid] = odbc_result($rs, "PARSE_TYPE");
	$result_type["datentyp"][$rid] = odbc_result($rs, "DATENTYP");
	$result_type["funcid"][$rid] = odbc_result($rs, "FUNCID");
	$result_type["size"][$rid] = odbc_result($rs, "SIZE");
	$result_type["hassize"][$rid] = odbc_result($rs, "HASSIZE");
	$result_type["beschreibung"][$rid] = $lang[odbc_result($rs, "DATA_TYPE_EXP")];
	$result_type["arg_result_datatype"][odbc_result($rs, "DATA_TYPE")] = $rid;
	$bzm++;
}


$ext_fk = getTypeExensions("lmbd");

/* --- Transaktion START ------------------------------------------------ */
lmb_StartTransaction();

/* --- Tabellen-Array --------------------------------- */
unset($table_gtab);
unset($conf_gtab);
unset($beziehung_gtab);
unset($ebene_gtab);
unset($beschreibung_gtab);
if(!$tab_group){$tab_group = $gtab["tab_group"][$atid];}
if($tab_group){$gb = "WHERE TAB_GROUP = $tab_group";}
$sqlquery = "SELECT * FROM LMB_CONF_TABLES $gb ORDER BY ID";
$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(!$rs) {$commit = 1;}
$bzm = 1;
while(odbc_fetch_row($rs,$bzm)) {
	$table_id = odbc_result($rs,"TAB_ID");
	$table_gtab[$table_id] = strtolower(odbc_result($rs,"TABELLE"));
	$beschreibung_gtab[$table_id] = $lang[odbc_result($rs,"BESCHREIBUNG")];
	$KEYID_gtab[$table_id] = odbc_result($rs,"TAB_ID");
	$tabgroup_gtab[$table_id] = odbc_result($rs,"TAB_GROUP");
	$tab_versioning[$table_id] = odbc_result($rs,"VERSIONING");
	$table_typ[$table_id] = odbc_result($rs,"TYP");
	${"tabid_".odbc_result($rs,"TABELLE")} = odbc_result($rs,"TAB_ID");
	$bzm++;
}


if(!$new_gtab){
	$new_gtab = $table_gtab[$atid];
}

if(!$column AND $ftid AND $atid){
	$field_ = get_fieldname($atid,$ftid);
	$column = $field_[0];
}

// --- Positionsänderung -------------------------------
if($move_to AND $fieldid) {
	if(preg_match("/[1-9]{1,}/",$move_to)){

		$sqlquery =  "SELECT SORT FROM LMB_CONF_FIELDS WHERE FIELD_ID = $move_to AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		$move_to = odbc_result($rs,"SORT");

		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SORT = (SORT + 1) WHERE SORT >= $move_to AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SORT = $move_to WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);


		$sqlquery =  "SELECT SORT,FIELD_ID FROM LMB_CONF_FIELDS WHERE TAB_GROUP = $tab_group AND TAB_ID = $atid ORDER BY SORT";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$bzm = 1;
		while(odbc_fetch_row($rs,$bzm)) {
			$sqlquery2 =  "UPDATE LMB_CONF_FIELDS SET SORT = $bzm WHERE FIELD_ID = ".odbc_result($rs,"FIELD_ID")." AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
			$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
			$bzm++;
		}

	}
}



/* --- Feld löschen --------------------------------------------- */
if($del){
	$GLOBALS["filestruct"][admin] = 1;
	if(!delete_field_table($atid,$column_id,$drop_physical)){
	 	$commit = 1;
	}
}



/* --- Defaultwert setzen --------------------------------------------- */
if($def){

	$sqlquery =  "SELECT LMB_FIELD_TYPES.PARSE_TYPE FROM LMB_CONF_FIELDS,LMB_FIELD_TYPES WHERE LMB_CONF_FIELDS.DATA_TYPE = LMB_FIELD_TYPES.DATA_TYPE AND LMB_CONF_FIELDS.FIELD_ID = $fieldid AND LMB_CONF_FIELDS.TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$parsetype = odbc_result($rs,"PARSE_TYPE");
	
	
	if($def == "0 "){
		$def0 = 1;
	}
	
	
	$def = trim($def);
	
	if($parsetype == 1){
		$def = parse_db_int($def);
	}elseif($parsetype == 6){
		$def = parse_db_float($def);
	}elseif($parsetype == 2){
		$def = "'".parse_db_string($def)."'";
	}elseif($parsetype == 4){
		if(!$def){
			$def = LMB_DBDEF_NULL;
		}
	}elseif($parsetype == 3){
		$def = parse_db_bool($def);
	}

	if(!$def AND !$def0){
		$def = LMB_DBDEF_NULL;
	}

	if($sqlquery = dbq_9(array($DBA["DBSCHEMA"],$new_gtab,$column,$def))){
		$rs1 = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}
	}
	
	if(!$commit){
		if(strtoupper($def) == "'NULL'"){$def = "";}
		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET DEFAULTVALUE = $def WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
		$rs2 = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs2) {$commit = 1;}
	}
		
	
}
/* --- Defaultwert setzen BOOLEAN --------------------------------------------- */
if($def_bool){
	if(${$column} == 1){ $bool = LMB_DBDEF_TRUE; $bool_txt = "TRUE";} else { $bool = LMB_DBDEF_FALSE;$bool_txt = "";}
	if($sqlquery = dbq_9(array($DBA["DBSCHEMA"],$new_gtab,$column,$bool))){
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}
	
	if(!$commit) {
		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET DEFAULTVALUE = '".$bool_txt."' WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}
}


/* --- Feldname ändern --------------------------------------------- */
if($fieldname){
	lmb_renameField($atid,$fieldid,$fieldname);
}

/* --- Spelling Feld ändern --------------------------------------------- */
if($spelling){
	$sqlquery =  "SELECT TAB_ID,FIELD_NAME,SPELLING FROM LMB_CONF_FIELDS WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$spelling_id = odbc_result($rs,"SPELLING");
	$filedesc = $gtab["table"][odbc_result($rs,"TAB_ID")].":".odbc_result($rs,"FIELD_NAME");

	lang_change(null,$spelling_id,$spelling,$session["language"],"_DEPEND",4,$filedesc);

	$sqlquery =  "UPDATE LDMS_STRUCTURE SET NAME = '".str_replace("'","''",substr($spelling,0,50))."' WHERE FIELD_ID = $fieldid AND TABGROUP_ID = $tab_group AND TAB_ID = $atid AND FIX = ".LMB_DBDEF_TRUE." AND TYP = 3";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Beschreibung Feld ändern --------------------------------------------- */
if($desc){
	$sqlquery =  "SELECT TAB_ID,FIELD_NAME,BESCHREIBUNG FROM LMB_CONF_FIELDS WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$beschreibung_id = odbc_result($rs,"BESCHREIBUNG");
	$filedesc = $gtab["table"][odbc_result($rs,"TAB_ID")].":".odbc_result($rs,"FIELD_NAME");

	lang_change(null,$beschreibung_id,$desc,$session["language"],"_DEPEND",4,$filedesc);
}

/* --- Keyfield Feld ändern --------------------------------------------- */
if($keyfield){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET FIELDKEY = ".LMB_DBDEF_FALSE." WHERE TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET FIELDKEY = ".LMB_DBDEF_TRUE." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid AND TAB_GROUP = $tab_group";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Bezeichner Feld ändern --------------------------------------------- */
if($mainfield){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET MAINFIELD = ".LMB_DBDEF_FALSE." WHERE TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET MAINFIELD = ".LMB_DBDEF_TRUE." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- UNIQUE ändern --------------------------------------------- */
if($uniquefield){
	if($uniquefield == "uniquefield_CHECKED" OR $uniquefield == "false"){$uniquefield = LMB_DBDEF_FALSE;}else{$uniquefield = LMB_DBDEF_TRUE;}
	
	$field_ = get_fieldname($atid,$fieldid);
	$field_name = $field_[0];
	$field_type = $field_[1];
	
	if($field_type != 11 AND $field_type != 4){
		if($uniquefield == LMB_DBDEF_TRUE){
			# add constraint
			$sqlquery =  dbq_24(array($table_gtab[$atid],$field_name,'lmbconst_'.$atid.'_'.$fieldid));
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		}else{
			# drop constraint
			$sqlquery =  dbq_25(array($table_gtab[$atid],$field_name,'lmbconst_'.$atid.'_'.$fieldid));
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		}
	}
	
	if(!$commit){
		$sqlquery =  "UPDATE LMB_CONF_FIELDS SET ISUNIQUE = $uniquefield WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}
}

/* --- view-rule ändern --------------------------------------------- */
if($view_rule){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET VIEWRULE = '".parse_db_string(trim($view_rule),250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- view-rule ändern --------------------------------------------- */
if($edit_rule){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET EDITRULE = '".parse_db_string(trim($edit_rule),250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- INDEX ändern --------------------------------------------- */
if($fieldindex){
	$sqlquery = dbq_2(array($DBA["DBSCHEMA"],$new_gtab,null,0,$column));
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	# drop index
	while(odbc_fetch_row($rs)){
		$sqlquery1 = dbq_5(array($DBA["DBSCHEMA"],odbc_result($rs, "INDEXNAME"),odbc_result($rs, "TABLENAME")));
		$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;$findex = LMB_DBDEF_TRUE;}else{$findex = LMB_DBDEF_FALSE;}
		$dropindex = 1;
	}
		
	# add index
	if(!$dropindex){
		$indname = "LMBIND_".$atid."_".$fieldid;
		$sqlquery1 = dbq_4(array($DBA["DBSCHEMA"],$indname,$new_gtab,$column));
		$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;$findex = LMB_DBDEF_FALSE;}else{$findex = LMB_DBDEF_TRUE;}
	}

	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET INDEXED = ".$findex." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- ARTLEISTE ändern ---------------------------------------------*/
if($artleiste){
	if($artleiste == "artleiste_CHECKED" OR $artleiste == "false"){$artleiste = LMB_DBDEF_FALSE;}else{$artleiste = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET ARTLEISTE = $artleiste WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- quicksearch ändern ---------------------------------------------*/
if($quicksearch){
	if($quicksearch == "quicksearch_CHECKED" OR $quicksearch == "false"){$quicksearch = LMB_DBDEF_FALSE;}else{$quicksearch = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET QUICKSEARCH = $quicksearch WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Grupierbar ändern ---------------------------------------------*/
if($groupable){
	if($groupable == "groupable_CHECKED" OR $groupable == "false"){$groupable = LMB_DBDEF_FALSE;}else{$groupable = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET GROUPABLE = $groupable WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Stapeländerung ---------------------------------------------*/
if($collreplace){
	if($collreplace == "collreplace_CHECKED" OR $collreplace == "false"){$collreplace = LMB_DBDEF_FALSE;}else{$collreplace = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET COLLREPLACE = $collreplace WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Multilanguage ---------------------------------------------*/
if($multilang){
    // set CONF_FIELDS
    if($multilang == "false"){$multilang = LMB_DBDEF_FALSE;$m = 0;}else{$multilang = LMB_DBDEF_TRUE;$m = 1;}
    $sqlquery =  "UPDATE LMB_CONF_FIELDS SET MULTILANG = $multilang WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
    $rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}elseif($table_typ[$atid] != 5){
        lmb_set_multi_language($atid,$fieldid,$m);
    }
}

/* --- Nummer-Format ändern --------------------------------------------- */
if($nformat){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET NFORMAT = '".parse_db_string(trim($nformat),30)."' WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Potenzschwelle ändern --------------------------------------------- */
if($potency){
	$potency = parse_db_int(trim($potency),10);
	if(!$potency){$potency = "NULL";}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET POTENCY = $potency WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Währung ändern --------------------------------------------- */
if($ncurrency){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET CURRENCY = '".parse_db_string(trim($ncurrency))."' WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Select Cut ändern --------------------------------------------- */
if($select_cut){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET SELECT_CUT = '".parse_db_string(trim($select_cut),8)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- dynamic search ---------------------------------------------------
if($dynsearch AND $fieldid){
	if($dynsearch == "dynsearch_CHECKED" OR $dynsearch == "false"){$dynsearch = LMB_DBDEF_FALSE;}else{$dynsearch = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET DYNSEARCH = $dynsearch WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- dynamic save ---------------------------------------------------
if($ajaxsave AND $fieldid){
	if($ajaxsave == "ajaxsave_CHECKED" OR $ajaxsave == "false"){$ajaxsave = LMB_DBDEF_FALSE;}else{$ajaxsave = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET AJAXPOST = $ajaxsave WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}


# --- inherit eval ---------------------------------------------------
if($inherit_eval){
	if($inherit_eval == "false"){$inherit_eval = LMB_DBDEF_FALSE;}else{$inherit_eval = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_EVAL = $inherit_eval WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit search ---------------------------------------------------
if($inherit_search){
	if($inherit_search == "false"){$inherit_search = LMB_DBDEF_FALSE;}else{$inherit_search = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_SEARCH = $inherit_search WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit group ---------------------------------------------------
if($inherit_group){
	if($inherit_group == 'null'){$inherit_group = "NULL";}else{$inherit_group = parse_db_int($inherit_group);}
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_GROUP = ".$inherit_group." WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- inherit filter ---------------------------------------------------
if($inherit_filter){
	$inherit_filter = trim($inherit_filter);
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET INHERIT_FILTER = '".parse_db_string($inherit_filter,250)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- options ---------------------------------------------------
if($options){
	$options = trim($options);
	$prepare_string = "UPDATE LMB_CONF_FIELDS SET RELEXT = ? WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	if(!lmb_PrepareSQL($prepare_string,array(parse_db_blob($options)),__FILE__,__LINE__)){$commit = 1;}
}

# --- trigger ------ ---------------------------------------------
if(is_array(${"field_trigger_".$trigger}) AND $trigger){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LMTRIGGER = '".implode(",",${"field_trigger_".$trigger})."' WHERE FIELD_ID = $trigger AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- relation viewmode ---------------------------------------------------
if($relviewmode){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LISTING_VIEWMODE = '".parse_db_int(trim($relviewmode))."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- relation cut ---------------------------------------------------
if($relviewcut){
	$relviewcut = substr($relviewcut,0,strlen($relviewcut)-1);
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET LISTING_CUT = '".parse_db_string($relviewcut,8)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

# --- textblocksize ---------------------------------------------------
if($textblocksize){
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET SELECT_POOL = '".parse_db_int(trim($textblocksize),5)."' WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}




/* --- Agregatfunktion --------------------------------------------- */
if($aggregate){
	$aggregate = explode("_",$aggregate);
	
	$sqlquery =  "SELECT AGGREGATE FROM LMB_CONF_FIELDS WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$aggregate_val_ = explode(",",odbc_result($rs, "AGGREGATE"));
	$aggregate_val = array();
	foreach($aggregate_val_ as $key => $value){
		if($value){
			$aggregate_val[$value] = $value;
		}
	}
	if($aggregate[0] == 'true'){
		$aggregate_val[$aggregate[1]] = $aggregate[1];
	}else{
		unset($aggregate_val[$aggregate[1]]);
	}
	$aggregate_val = implode(",",$aggregate_val);
	
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET AGGREGATE = '".parse_db_string($aggregate_val)."' WHERE TAB_ID = $atid AND FIELD_ID = $fieldid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Argument Editierbar ändern ---------------------------------------------*/
if($argument_edit){
	if($argument_edit == "CHECKED"){$argument_edit = LMB_DBDEF_FALSE;}else{$argument_edit = LMB_DBDEF_TRUE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET ARGUMENT_EDIT = $argument_edit WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery =  "SELECT LMB_CONF_FIELDS.ARGUMENT_TYP,LMB_CONF_FIELDS.FIELD_NAME,LMB_FIELD_TYPES.DATENTYP,LMB_FIELD_TYPES.FIELD_TYPE,LMB_FIELD_TYPES.DATA_TYPE FROM LMB_CONF_FIELDS,LMB_FIELD_TYPES WHERE LMB_CONF_FIELDS.FIELD_ID = $fieldid AND LMB_CONF_FIELDS.TAB_ID = $atid AND LMB_CONF_FIELDS.DATA_TYPE = LMB_FIELD_TYPES.DATA_TYPE";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$arg_typ = odbc_result($rs,"ARGUMENT_TYP");
	$arg_field = odbc_result($rs,"FIELD_NAME");
	$arg_datentyp = odbc_result($rs, "DATENTYP");
	
	# SQL Argument
	/*
	if($arg_typ == 47){
		if($argument_edit == "TRUE"){
			$sqlquery =  "ALTER TABLE ".$new_gtab." ".LMB_DBFUNC_ADD_COLUMN_FIRST." $arg_field $arg_datentyp";
		}else{
			$sqlquery = dbq_22(array($new_gtab,$arg_field));
		}
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}
	*/
}

/* --- wysiwyg ändern ---------------------------------------------*/
if($wysiwyg){
	if(${"WYSIWYG_".$fieldid} OR $wysiwyg == "true"){$wysiwyg = LMB_DBDEF_TRUE;}else{$wysiwyg = LMB_DBDEF_FALSE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET WYSIWYG = $wysiwyg WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Memo Index ändern ---------------------------------------------*/
if($memoindex){
	if(${"MEMOINDEX_".$fieldid} OR $memoindex == "true"){$memoindex = LMB_DBDEF_TRUE;}else{$memoindex = LMB_DBDEF_FALSE;}
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET INDIZE = $memoindex WHERE FIELD_ID = $fieldid AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}

	$odbc_column = dbf_5(array($DBA["DBSCHEMA"],$new_gtab,"IND_".$fieldid));
	if($odbc_column["columnname"][0]){
		$present = $odbc_column["columnname"][0];
	}
	
	if($memoindex == LMB_DBDEF_TRUE AND !$present){
		$sqlquery =  "ALTER TABLE $new_gtab ".LMB_DBFUNC_ADD_COLUMN_FIRST." IND_$fieldid ".LMB_DBTYPE_BOOLEAN." DEFAULT ".LMB_DBDEF_FALSE.", ".LMB_DBFUNC_ADD_COLUMN_NEXT." INDD_$fieldid ".LMB_DBTYPE_TIMESTAMP;
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}elseif($present){
		$sqlquery = dbq_22(array($new_gtab,"IND_".$fieldid));
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$sqlquery = dbq_22(array($new_gtab,"INDD_".$fieldid));
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		
		$sqlquery =  "DELETE FROM LMB_INDIZE_D WHERE TABID = $atid AND FIELDID = $fieldid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$sqlquery =  "DELETE FROM LMB_INDIZE_DS WHERE TABID = $atid AND FIELDID = $fieldid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}
}

/* --- Tempdaten erneuern -------------------------------------- */
if($tablesync) {
	require_once("admin/tools/multiselect_refresh.lib");
	multiselectRefreshCount($atid,$fieldid);
	relationRefreshCount($atid,$fieldid);
	echo 'sync complete!';
}

/* --- incl DATETIME  --------------------------------------------- */
if(isset($datetime)){
	$sqlquery =  "UPDATE LMB_CONF_FIELDS SET DATETIME = $datetime WHERE FIELD_ID = $fieldid AND TAB_GROUP = $tab_group AND TAB_ID = $atid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

/* --- Neue Schlüssel-ID ---------------------------------------------*/
if($new_keyid){
	$sqlquery =  "SELECT ID FROM ".$table_gtab[$table_id];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$bzm = 1;
	while(odbc_fetch_row($rs, $bzm)) {
		$sqlquery1 =  "UPDATE ".$table_gtab[$table_id]." SET ID = $bzm WHERE ID = ".odbc_result($rs, "ID");
		$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
	$bzm++;
	}
}


function convert_field($convert,$convert_size,$fieldid,$tabid,$table){
	global $db;
	global $result_type;
	global $action;
	global $gtab;
	
	if($convert_size == 'undefined'){$convert_size = 0;}
	
	$sqlquery =  "SELECT DISTINCT LMB_FIELD_TYPES.SIZE,LMB_CONF_FIELDS.FIELD_SIZE,LMB_FIELD_TYPES.DATA_TYPE,LMB_FIELD_TYPES.FIELD_TYPE,LMB_FIELD_TYPES.PARSE_TYPE,LMB_CONF_FIELDS.FIELD_NAME FROM LMB_CONF_FIELDS,LMB_FIELD_TYPES WHERE LMB_CONF_FIELDS.FIELD_ID = $fieldid AND LMB_CONF_FIELDS.TAB_ID = $tabid AND LMB_FIELD_TYPES.DATA_TYPE = LMB_CONF_FIELDS.DATA_TYPE";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}

	if(odbc_fetch_row($rs,1)){
		$origin["field_name"] = odbc_result($rs, "FIELD_NAME");
		$origin["data_type"] = odbc_result($rs, "DATA_TYPE");
		$origin["field_type"] = odbc_result($rs, "FIELD_TYPE");
		$origin["parse_type"] = odbc_result($rs, "PARSE_TYPE");
		if(odbc_result($rs, "FIELD_SIZE")){
			$origin["field_size"] = odbc_result($rs, "FIELD_SIZE");
		}else{
			$origin["field_size"] = odbc_result($rs, "SIZE");
		}
	}else{return false;}
	

	# type conversion / size
	function convert_type($convert,$convert_type,$fieldid,$tabid,$table,$origin,$raw=null){
		global $db;
		global $result_type;
		global $action;
		global $lang;

		# try db-based modify
		$sqlquery = dbq_15(array($DBA["DBSCHEMA"],$table,$origin["field_name"],$convert_type));
		$rs = @odbc_exec($db,$sqlquery);
		# manual modify
		if(!$rs) {
			if($result_type["parse_type"][$convert] == 1 OR $result_type["parse_type"][$convert] == 6){
				$conversion = "NUM";
			}else{
				$conversion = "CHAR";
			}

			# copy
			$sqlquery = "ALTER TABLE $table ".LMB_DBFUNC_ADD_COLUMN_FIRST." LMB_TEMP_CONVERT ".$convert_type;
			$rs = @odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs){lmb_alert("unable to add temporay field!");return false;}
			# db-based update
			$sqlquery =  "UPDATE $table SET LMB_TEMP_CONVERT = $conversion(".$origin["field_name"].")";
			$rs = @odbc_exec($db,$sqlquery);
			
			# Einträge in neues Tabellenfeld
			if(!$rs AND ($result_type["data_type"][$convert] != 18 AND $result_type["data_type"][$convert] != 31 AND $result_type["data_type"][$convert] != 32 OR $raw)) {
				$sqlquery =  "SELECT ID,".$origin["field_name"]." FROM $table";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				$bzm = 1;
				while(odbc_fetch_row($rs,$bzm)){
					# numeric
					if($result_type["parse_type"][$convert] == 1 OR $result_type["parse_type"][$convert] == 6){
						$value = parse_db_int(odbc_result($rs,$origin["field_name"]),$result_type["size"][$convert]);
					# string
					}else{
						$value = parse_db_string(odbc_result($rs,$origin["field_name"]),$result_type["size"][$convert]);
					}
					$prepare_string = "UPDATE $table SET LMB_TEMP_CONVERT = ? WHERE ID = ".odbc_result($rs,"ID");
					lmb_PrepareSQL($prepare_string,array(parse_db_blob($value)),__FILE__,__LINE__);
	
					$bzm++;
				}
				$GLOBALS["alert"] = $lang[2022];
			}
	
			if(!$commit){
				# drop origin
				$sqlquery = dbq_22(array($table,$origin["field_name"]));
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
				# rename copy
				$sqlquery = dbq_7(array($DBA["DBSCHEMA"],$table,"LMB_TEMP_CONVERT",$origin["field_name"]));
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}
			
		}

		if($commit){return false;}else{return true;}
	}

	# --- convert to Select -----
	function convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,$withpool){
		global $db;
		global $session;
		global $result_type;

		$cut = ";";

		# zuerst Pool anlegen
		if($withpool){

			# neuen Pool anlegen
			$POOLID = next_db_id("LMB_SELECT_P");
			$sqlquery = "INSERT INTO LMB_SELECT_P (ID,ERSTUSER,NAME) VALUES($POOLID,".$session['user_id'].",'auto_pool_$POOLID')";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# Pool füllen
			$NEXTWID = next_db_id("LMB_SELECT_W");
			$NEXTPID = next_db_id("LMB_SELECT_D");
			$NEXTSORT = 1;
			
			$sqlquery =  "SELECT DISTINCT ".$origin["field_name"]." FROM $table";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			# --- Mehrfach-Auswahlfeld -----
			if($result_type['data_type'][$convert] == 18 OR $result_type['data_type'][$convert] == 31 OR $result_type['data_type'][$convert] == 32){
				$svalues = array();
				while(odbc_fetch_row($rs)){
					if($v = explode($cut,odbc_result($rs, $origin["field_name"]))){
						foreach ($v as $vc => $vv){
							$svalues[] = trim($vv);
						}
					}
				}
				$svalues = array_unique($svalues);
			# --- Einzel-Auswahlfeld -----	
			}else{
				while(odbc_fetch_row($rs)){
					$svalues[] = odbc_result($rs, $origin["field_name"]);
				}
			}

			if($svalues){
				foreach ($svalues as $vkey => $value){
					# Mehrfachauswahl
					#if($result_type['data_type'][$convert] == 18 OR $result_type['data_type'][$convert] == 31 OR $result_type['data_type'][$convert] == 32){
						$sqlquery0 = "SELECT ID FROM LMB_SELECT_W WHERE POOL = $POOLID AND WERT = '".parse_db_string($value,255)."'";
						$rs0 = odbc_exec($db,$sqlquery0) or errorhandle(odbc_errormsg($db),$sqlquery0,$action,__FILE__,__LINE__);
						if(!$rs0) {$commit = 1;}
						if(!odbc_result($rs0, 'ID')){
							$sqlquery0 = "INSERT INTO LMB_SELECT_W (ID,SORT,POOL,WERT,ERSTUSER) VALUES($NEXTWID,$NEXTSORT,$POOLID,'".parse_db_string($value,255)."',".$session['user_id'].")";
							$rs0 = odbc_exec($db,$sqlquery0) or errorhandle(odbc_errormsg($db),$sqlquery0,$action,__FILE__,__LINE__);
							if(!$rs0) {$commit = 1;}
							$NEXTWID++;
							$NEXTSORT++;
						}
					#}

				}
			}

			if(!$commit){
				$sqlquery = "UPDATE LMB_CONF_FIELDS SET SELECT_POOL = $POOLID,SELECT_SORT = 'SORT' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}

		}else{
			$sqlquery = "SELECT SELECT_POOL FROM LMB_CONF_FIELDS WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$POOLID = odbc_result($rs, "SELECT_POOL");
		}

		# --- Eintrag Mehrfach-Auswahlfeld -----
		if($result_type['data_type'][$convert] == 18 OR $result_type['data_type'][$convert] == 31 OR $result_type['data_type'][$convert] == 32 AND $POOLID){
			$NID = next_db_id("LMB_SELECT_D");
			$sqlquery = "SELECT ID,".$origin["field_name"]." FROM $table";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$bzm = 1;
			while(odbc_fetch_row($rs, $bzm)){
				$datid = odbc_result($rs, "ID");
				$count = 0;
				if($ovalue = odbc_result($rs, $origin["field_name"])){
					$val = explode($cut,$ovalue);
					foreach ($val as $key => $value) {
						$value = trim($value);
						$sqlquery1 = "SELECT ID FROM LMB_SELECT_W WHERE WERT = '".parse_db_string($value,255)."' AND POOL = $POOLID";
						$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
						if(!$rs1) {$commit = 1;}
						$wid = odbc_result($rs1, "ID");
						if($wid){
							$sqlquery1 = "INSERT INTO LMB_SELECT_D (ID,ERSTUSER,TAB_ID,FIELD_ID,DAT_ID,W_ID) VALUES($NID,".$session['user_id'].",$tabid,$fieldid,".$datid.",$wid)";
							$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
							if(!$rs1) {$commit = 1;}
							$NID++;
							$count++;
						}
					}
				}

				# Anzahl anpassen
				$sqlquery2 = "UPDATE $table SET ".$origin["field_name"]." = '".$count."' WHERE ID = $datid";
				$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
				if(!$rs2) {$commit = 1;}
				$bzm++;
			}
		}
		
		convert_type($convert,$convert_type,$fieldid,$tabid,$table,$origin,1);
		
		if($commit){return false;}else{return true;}
	}

	# --- convert from Select -----
	function convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,$toselect){
		global $db;
		global $session;
		global $result_type;

		if(!convert_type($convert,$convert_type,$fieldid,$tabid,$table,$origin)){return false;}

		# abbrechen bei single select
		if($result_type[data_type][$convert] == 9 OR $result_type[data_type][$convert] == 15){return true;}

		$cut = ";";

		$sqlquery = "SELECT ID,".$origin["field_name"]." FROM $table";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$bzm = 1;
		while(odbc_fetch_row($rs, $bzm)){
			$datid = odbc_result($rs, "ID");
			unset($new_val);
			#if(odbc_result($rs, $origin["field_name"])){
				$sqlquery1 = "SELECT LMB_SELECT_W.WERT FROM LMB_SELECT_D,LMB_SELECT_W WHERE LMB_SELECT_D.TAB_ID = $tabid AND LMB_SELECT_D.FIELD_ID = $fieldid AND LMB_SELECT_D.DAT_ID = ".$datid." AND LMB_SELECT_D.W_ID = LMB_SELECT_W.ID";
				$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
				if(!$rs1) {$commit = 1;}
				$bzm1 = 1;
				while(odbc_fetch_row($rs1, $bzm1)){
					$new_val[] = odbc_result($rs1, "WERT");
					$bzm1++;
				}
				if(is_array($new_val)){
					if($toselect){
						$new_val = $new_val[0];
					}else{
						$new_val = implode($cut,$new_val);
					}
				}
				$sqlquery1 = "UPDATE $table SET ".$origin["field_name"]." = '".parse_db_string($new_val,$result_type["size"][$convert])."' WHERE ID = ".$datid;
				$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
				if(!$rs1) {$commit = 1;}
			#}
			$bzm++;
		}

		# löschen der Multiselect-Einträge
		if($toselect){
			$sqlquery = "DELETE FROM LMB_SELECT_D WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}

		if($commit){return false;}else{return true;}
	}
	
	
	# --- convert relation -----
	function convert_relation($convert,$convert_type,$fieldid,$tabid,$table,$origin,$toselect){
		global $db;
		global $session;
		global $result_type;


		$sqlquery = "UPDATE LMB_CONF_FIELDS SET FIELD_TYPE = ".$result_type["field_type"][$convert].", DATA_TYPE = ".$result_type["data_type"][$convert]." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		
        lmb_rebuildForeignKey(0,array($tabid));

		if($commit){return false;}else{return true;}
	}
	

	# no view
	if($gtab["typ"][$tabid] != 5){
		
		$ct = parse_db_type($result_type["datentyp"][$convert],$convert_size,$origin["field_size"]);
		$convert_type = $ct[0];
		$convert_size = $ct[1];
		if(!$convert_type){return false;}
		
		# --- NOSELECT to SELECT -----
		if($result_type["field_type"][$convert] == 4 AND $origin["field_type"] != 4){
			if(!convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,1)){$commit = 1;}
		# --- SINGLESELECT to NOSELECT -----
		}elseif($result_type["field_type"][$convert] != 4 AND ($origin["data_type"] == 12 OR $origin["data_type"] == 14)){
			if(!convert_type($convert,$convert_type,$fieldid,$tabid,$table,$origin)){$commit = 1;}
		# --- MULTIELECT to NOSELECT -----
		}elseif($result_type["field_type"][$convert] != 4 AND ($origin["data_type"] == 31 OR $origin["data_type"] == 32 OR $origin["data_type"] == 18)){
			if(!convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,0)){$commit = 1;}
		# --- SELECT to MULTISELECT -----
		}elseif(($result_type["data_type"][$convert] == 31 OR $result_type["data_type"][$convert] == 32 OR $result_type["data_type"][$convert] == 18) AND ($origin["data_type"] == 12 OR $origin["data_type"] == 14)){
			if(!convert_to_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,0)){$commit = 1;}
		# --- MULTISELECT to SELECT -----
		}elseif(($result_type["data_type"][$convert] == 12 OR $result_type["data_type"][$convert] == 14) AND ($origin["data_type"] == 31 OR $origin["data_type"] == 32 OR $origin["data_type"] == 18)){
			if(!convert_from_select($convert,$convert_type,$fieldid,$tabid,$table,$origin,1)){$commit = 1;}
		# --- Text to Number OR Number to Text or only only size changed ---
		}else{
			if(!convert_type($convert,$convert_type,$fieldid,$tabid,$table,$origin)){$commit = 1;}
		}

		# ------------- Sonderfälle --------------
		# Währung
		if($origin["data_type"] == 30 AND $result_type["data_type"][$convert] != 30){
			$sqlquery = dbq_22(array($table,$origin["field_name"]."_C"));
			$rs = @odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}elseif($origin["data_type"] != 30 AND $result_type["data_type"][$convert] == 30){
			$sqlquery =  "ALTER TABLE $table ".LMB_DBFUNC_ADD_COLUMN_FIRST." ".$origin["field_name"]."_C ".LMB_DBTYPE_VARCHAR."(5)";
			$rs = @odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
		}
	}
	
	if(!$commit){
		$convert_size = str_replace(",",".",$convert_size);
		$csize = explode(".",$convert_size);
		$sqlquery = "UPDATE LMB_CONF_FIELDS SET FIELD_TYPE = ".$result_type["field_type"][$convert].", DATA_TYPE = ".$result_type["data_type"][$convert].", FIELD_SIZE = ".parse_db_int($csize[0]).", SCALE = ".parse_db_int($csize[1])." WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}

	# --- Multi-Auswahlfeld Pool löschen -----
	if($origin["field_type"] == 4 AND $result_type["field_type"][$convert] != 4 AND !$commit){
		$sqlquery = "DELETE FROM LMB_SELECT_D WHERE FIELD_ID = $fieldid AND TAB_ID = $tabid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
	}

	if($commit){return false;}else{return true;}
}

function extend_field($extend_func,$fieldid,$tabid){
	global $db;
	$sqlquery = "UPDATE LMB_CONF_FIELDS SET EXT_TYPE = '".trim(parse_db_string($extend_func,50))."' WHERE TAB_ID = $tabid AND FIELD_ID = $fieldid";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}


/* --- Feld Konvertieren ---------------------------------------------*/
if($convert_value AND $fieldid){
	if(!convert_field($convert_value,$convert_size,$fieldid,$atid,strtoupper($new_gtab))){$commit = 1;}
}

/* --- Extension ---------------------------------------------*/
if($extend_value AND $fieldid){
	if(!extend_field($extend_value,$fieldid,$atid)){$commit = 1;}
}

/* --- Feld hinzufügen --------------------------------------------- */
if($add) {
	if(!add_field($field_name,$atid,$typ,$typ2,$typ_size,$ifield_id,$beschreibung,$spellingf,null,0,$add_permission,$inherit_tab,$inherit_field)){$commit = 1;}
}

# --- Transaktion ENDE --------
lmb_EndTransaction(!$commit);



/* --- Tabellen-Liste --------------------------------------------- */
$bzm = $atid;
if($table_gtab[$bzm]) {

	
	/* --- Datenbank Infos --------------------------------------------- */
	$rs = dbf_5(array($DBA["DBSCHEMA"],$table_gtab[$atid],null,1),1);
	while(odbc_fetch_row($rs)) {
		$fieldsp_name = trim(strtoupper(odbc_result($rs, "COLUMN_NAME")));
		$result_fieldspecs[$fieldsp_name]["precision"] = odbc_result($rs, "PRECISION");
		$result_fieldspecs[$fieldsp_name]["scale"] = odbc_result($rs, "SCALE");
		$result_fieldspecs[$fieldsp_name]["type_name"] = odbc_result($rs, "TYPE_NAME");
	}
	
	
	if($ftid AND is_numeric($ftid)){$sql = "AND LMB_CONF_FIELDS.FIELD_ID = $ftid";}
	
	/* --- Tabellen-Abfrage --------------------------------------------- */
	$sqlquery = "SELECT LMB_CONF_FIELDS.MULTILANG,LMB_CONF_FIELDS.VERKNTREE,LMB_CONF_FIELDS.LISTING_VIEWMODE,LMB_CONF_FIELDS.LISTING_CUT,LMB_CONF_FIELDS.AGGREGATE,LMB_CONF_FIELDS.COLLREPLACE,LMB_CONF_FIELDS.FIELD_SIZE,LMB_CONF_FIELDS.RELEXT,LMB_CONF_FIELDS.AJAXPOST,LMB_CONF_FIELDS.POTENCY,LMB_CONF_FIELDS.EDITRULE,LMB_CONF_FIELDS.VIEWRULE,LMB_CONF_FIELDS.QUICKSEARCH,LMB_CONF_FIELDS.LMTRIGGER,LMB_CONF_FIELDS.DEFAULTVALUE,LMB_CONF_FIELDS.MAINFIELD,LMB_CONF_FIELDS.VERKNTABLETYPE,LMB_CONF_FIELDS.EXT_TYPE,LMB_CONF_FIELDS.INHERIT_TAB,LMB_CONF_FIELDS.INHERIT_EVAL,LMB_CONF_FIELDS.INHERIT_GROUP,LMB_CONF_FIELDS.INHERIT_SEARCH,LMB_CONF_FIELDS.INHERIT_FILTER,LMB_CONF_FIELDS.INHERIT_FIELD,LMB_CONF_FIELDS.INDEXED,LMB_CONF_FIELDS.SELECT_CUT,LMB_CONF_FIELDS.SELECT_POOL,LMB_CONF_FIELDS.VERKNSEARCH,LMB_CONF_FIELDS.WYSIWYG,LMB_CONF_FIELDS.DATETIME,LMB_CONF_FIELDS.MD5TAB,LMB_CONF_FIELDS.FIELD_ID,LMB_CONF_FIELDS.CURRENCY,LMB_CONF_FIELDS.NFORMAT,LMB_CONF_FIELDS.INDIZE,LMB_CONF_FIELDS.GROUPABLE,LMB_CONF_FIELDS.ARGUMENT_EDIT,LMB_CONF_FIELDS.VERKNTABID,LMB_CONF_FIELDS.ARGUMENT,LMB_CONF_FIELDS.DYNSEARCH,LMB_CONF_FIELDS.ISUNIQUE,LMB_CONF_FIELDS.FIELDKEY,LMB_CONF_FIELDS.GENLINK,LMB_CONF_FIELDS.FIELD_NAME,LMB_CONF_FIELDS.ARTLEISTE,LMB_CONF_FIELDS.VERKNFIELDID,LMB_CONF_FIELDS.BESCHREIBUNG,LMB_CONF_FIELDS.SPELLING,LMB_CONF_FIELDS.ARGUMENT_TYP,LMB_FIELD_TYPES.DATA_TYPE_EXP,LMB_FIELD_TYPES.FORMAT,LMB_FIELD_TYPES.FIELD_TYPE,LMB_FIELD_TYPES.DATA_TYPE,LMB_FIELD_TYPES.ID AS DATA_TYPE_ID
                    FROM LMB_CONF_FIELDS,LMB_FIELD_TYPES
					WHERE LMB_CONF_FIELDS.DATA_TYPE = LMB_FIELD_TYPES.DATA_TYPE AND LMB_CONF_FIELDS.TAB_GROUP = $tab_group AND LMB_CONF_FIELDS.TAB_ID = $atid $sql
					ORDER BY LMB_CONF_FIELDS.SORT";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$bzm1 = 1;
	while(odbc_fetch_row($rs, $bzm1)) {
		$fieldsp_name = strtoupper(odbc_result($rs, "FIELD_NAME"));
		$result_fieldtype[$table_gtab[$bzm]]["field_id"][$bzm1] = odbc_result($rs, "FIELD_ID");
		$result_fieldtype[$table_gtab[$bzm]]["field"][$bzm1] = $fieldsp_name;
		$result_fieldtype[$table_gtab[$bzm]]["beschreibung_feld"][$bzm1] = odbc_result($rs, "BESCHREIBUNG");
		$result_fieldtype[$table_gtab[$bzm]]["beschreibung_typ"][$bzm1] = $lang[odbc_result($rs, "DATA_TYPE_EXP")];
		$result_fieldtype[$table_gtab[$bzm]]["format_typ"][$bzm1] = $lang[odbc_result($rs, "FORMAT")];
		$result_fieldtype[$table_gtab[$bzm]]["fieldtype"][$bzm1] = odbc_result($rs, "FIELD_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["datatype"][$bzm1] = odbc_result($rs, "DATA_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["datatype_id"][$bzm1] = odbc_result($rs, "DATA_TYPE_ID");
		$result_fieldtype[$table_gtab[$bzm]]["spelling"][$bzm1] = odbc_result($rs, "SPELLING");
		$result_fieldtype[$table_gtab[$bzm]]["argument"][$bzm1] = trim(odbc_result($rs, "ARGUMENT")); # longtext handle
		$result_fieldtype[$table_gtab[$bzm]]["argument_typ"][$bzm1] = odbc_result($rs, "ARGUMENT_TYP");
		$result_fieldtype[$table_gtab[$bzm]]["argument_edit"][$bzm1] = odbc_result($rs, "ARGUMENT_EDIT");
		$result_fieldtype[$table_gtab[$bzm]]["genlink"][$bzm1] = odbc_result($rs, "GENLINK");
		$result_fieldtype[$table_gtab[$bzm]]["verkntab"][$bzm1] = odbc_result($rs, "MD5TAB");
		$result_fieldtype[$table_gtab[$bzm]]["verkntabid"][$bzm1] = odbc_result($rs, "VERKNTABID");
		$result_fieldtype[$table_gtab[$bzm]]["verknfieldid"][$bzm1] = odbc_result($rs, "VERKNFIELDID");
		$result_fieldtype[$table_gtab[$bzm]]["fieldkey"][$bzm1] = odbc_result($rs, "FIELDKEY");
		$result_fieldtype[$table_gtab[$bzm]]["mainfield"][$bzm1] = odbc_result($rs, "MAINFIELD");
		$result_fieldtype[$table_gtab[$bzm]]["unique"][$bzm1] = odbc_result($rs, "ISUNIQUE");
		$result_fieldtype[$table_gtab[$bzm]]["artleiste"][$bzm1] = odbc_result($rs, "ARTLEISTE");
		$result_fieldtype[$table_gtab[$bzm]]["dynsearch"][$bzm1] = odbc_result($rs, "DYNSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["ajaxsave"][$bzm1] = odbc_result($rs, "AJAXPOST");
		$result_fieldtype[$table_gtab[$bzm]]["groupable"][$bzm1] = odbc_result($rs, "GROUPABLE");
		$result_fieldtype[$table_gtab[$bzm]]["memoindex"][$bzm1] = odbc_result($rs, "INDIZE");
		$result_fieldtype[$table_gtab[$bzm]]["format"][$bzm1] = odbc_result($rs, "NFORMAT");
		$result_fieldtype[$table_gtab[$bzm]]["currency"][$bzm1] = odbc_result($rs, "CURRENCY");
		$result_fieldtype[$table_gtab[$bzm]]["datetime"][$bzm1] = odbc_result($rs, "DATETIME");
		$result_fieldtype[$table_gtab[$bzm]]["wysiwyg"][$bzm1] = odbc_result($rs, "WYSIWYG");
		$result_fieldtype[$table_gtab[$bzm]]["select_pool"][$bzm1] = odbc_result($rs, "SELECT_POOL");
		$result_fieldtype[$table_gtab[$bzm]]["select_cut"][$bzm1] = odbc_result($rs, "SELECT_CUT");
		$result_fieldtype[$table_gtab[$bzm]]["indexed"][$bzm1] = odbc_result($rs, "INDEXED");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_tab"][$bzm1] = odbc_result($rs, "INHERIT_TAB");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_field"][$bzm1] = odbc_result($rs, "INHERIT_FIELD");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_group"][$bzm1] = odbc_result($rs, "INHERIT_GROUP");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_search"][$bzm1] = odbc_result($rs, "INHERIT_SEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_eval"][$bzm1] = odbc_result($rs, "INHERIT_EVAL");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_filter"][$bzm1] = odbc_result($rs, "INHERIT_FILTER");
		$result_fieldtype[$table_gtab[$bzm]]["inherit_tab"][$bzm1] = odbc_result($rs, "INHERIT_TAB");
		$result_fieldtype[$table_gtab[$bzm]]["ext_type"][$bzm1] = odbc_result($rs, "EXT_TYPE");
		$result_fieldtype[$table_gtab[$bzm]]["verkntabletype"][$bzm1] = odbc_result($rs, "VERKNTABLETYPE");
		$result_fieldtype[$table_gtab[$bzm]]["trigger"][$bzm1] = explode(",",odbc_result($rs, "LMTRIGGER"));
		$result_fieldtype[$table_gtab[$bzm]]["domain_default"][$bzm1] = odbc_result($rs, "DEFAULTVALUE");
		$result_fieldtype[$table_gtab[$bzm]]["quicksearch"][$bzm1] = odbc_result($rs, "QUICKSEARCH");
		$result_fieldtype[$table_gtab[$bzm]]["view_rule"][$bzm1] = odbc_result($rs, "VIEWRULE");
		$result_fieldtype[$table_gtab[$bzm]]["edit_rule"][$bzm1] = odbc_result($rs, "EDITRULE");
		$result_fieldtype[$table_gtab[$bzm]]["potency"][$bzm1] = odbc_result($rs, "POTENCY");
		$result_fieldtype[$table_gtab[$bzm]]["options"][$bzm1] = trim(odbc_result($rs, "RELEXT")); # longtext handle
		$result_fieldtype[$table_gtab[$bzm]]["field_size"][$bzm1] = odbc_result($rs, "FIELD_SIZE");
		$result_fieldtype[$table_gtab[$bzm]]["collreplace"][$bzm1] = odbc_result($rs, "COLLREPLACE");
		$result_fieldtype[$table_gtab[$bzm]]["multilang"][$bzm1] = odbc_result($rs, "MULTILANG");
		$result_fieldtype[$table_gtab[$bzm]]["aggregate"][$bzm1] = explode(",",odbc_result($rs, "AGGREGATE"));
		$result_fieldtype[$table_gtab[$bzm]]["listing_viewmode"][$bzm1] = odbc_result($rs, "LISTING_VIEWMODE");
		$result_fieldtype[$table_gtab[$bzm]]["listing_cut"][$bzm1] = odbc_result($rs, "LISTING_CUT");
		$result_fieldtype[$table_gtab[$bzm]]["verkntree"][$bzm1] = odbc_result($rs, "VERKNTREE");
		$result_fieldtype[$table_gtab[$bzm]]["scale"][$bzm1] = $result_fieldspecs[$fieldsp_name]["scale"];
		$result_fieldtype[$table_gtab[$bzm]]["precision"][$bzm1] = $result_fieldspecs[$fieldsp_name]["precision"];
		$result_fieldtype[$table_gtab[$bzm]]["type_name"][$bzm1] = $result_fieldspecs[$fieldsp_name]["type_name"];

		if(odbc_result($rs, "VERKNSEARCH")){$result_fieldtype[$table_gtab[$bzm]]["verknsearch"][$bzm1] = odbc_result($rs, "VERKNSEARCH");}else{$result_fieldtype[$table_gtab[$bzm]]["verknsearch"][$bzm1] = array();}

		if(odbc_result($rs, "VERKNTABID")){
			$sqlquery1 = "	SELECT TABELLE,BESCHREIBUNG FROM LMB_CONF_TABLES WHERE TAB_ID = ".odbc_result($rs, "VERKNTABID");
			$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			$result_fieldtype[$table_gtab[$bzm]]["verkn"][$bzm1] = odbc_result($rs1, "TABELLE");
		}
		if(odbc_result($rs, "VERKNFIELDID")){
			$sqlquery1 = "	SELECT FIELD_NAME,SPELLING FROM LMB_CONF_FIELDS WHERE FIELD_ID = ".odbc_result($rs, "VERKNFIELDID");
			$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			$result_fieldtype[$table_gtab[$bzm]]["verknfield"][$bzm1] = odbc_result($rs1, "FIELD_NAME");
		}

		if(odbc_result($rs, "ARGUMENT_TYP")){$gfield[$atid]["argument_typ"][odbc_result($rs, "FIELD_ID")] = odbc_result($rs, "ARGUMENT_TYP");}

		$bzm1++;
	}
}

?>