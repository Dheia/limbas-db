<?php
/*
 * Copyright notice
 * (c) 1998-2019 Limbas GmbH(support@limbas.org)
 * All rights reserved
 * This script is part of the LIMBAS project. The LIMBAS project is free software; you can redistribute it and/or modify it on 2 Ways:
 * Under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * Or
 * In a Propritary Software Licence http://limbas.org
 * The GNU General Public License can be found at http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 * Version 3.6
 */

/*
 * ID: 209
 */





function add_workflow($name){
	global $db;
	global $session;
	
	$NEXT_ID = next_db_id("LMB_WFL_TASK");
	$sqlquery = "INSERT INTO LMB_WFL (ID,NAME) VALUES($NEXT_ID,'".parse_db_string($name,50)."')";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

function add_workflowTask($wflid,$name){
	global $db;
	global $session;
	
	$NEXT_ID = next_db_id("LMB_WFL_TASK");
	$sqlquery = "INSERT INTO LMB_WFL_TASK (ID,WFL_ID,NAME,SORT) VALUES($NEXT_ID,".parse_db_int($wflid).",'".parse_db_string($name,50)."',$NEXT_ID)";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

function delete_workflow($delid){
	global $db;

	$sqlquery = "DELETE FROM LMB_WFL_INST WHERE TASK_ID IN (SELECT ID FROM LMB_WFL_TASK WHERE WFL_ID = ".parse_db_int($delid).")";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$sqlquery = "DELETE FROM LMB_WFL_TASK WHERE WFL_ID = ".parse_db_int($delid);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$sqlquery = "DELETE FROM LMB_WFL WHERE ID = ".parse_db_int($delid);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

function delete_workflowTask($delid){
	global $db;

	$sqlquery = "DELETE FROM LMB_WFL_INST WHERE TASK_ID = ".parse_db_int($delid);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$sqlquery = "DELETE FROM LMB_WFL_TASK WHERE ID = ".parse_db_int($delid);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

function edit_workflow($id){
	global $db;
	global $workflowname;
	global $workflowdescr;
	global $workflowparams;
	
	$sqlquery = "UPDATE LMB_WFL SET 
	NAME='".parse_db_string($workflowname[$id],50)."', 
	DESCR = '".parse_db_blob($workflowdescr[$id])."'
	WHERE ID = $id";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	
	$prepare_string = "UPDATE LMB_WFL SET PARAMS = ? WHERE ID = $id";
	lmb_PrepareSQL($prepare_string,array(parse_db_blob($workflowparams[$id])),__FILE__,__LINE__);
}

function edit_workflowTask($id){
	global $db;
	global $taskname;
	global $taskdescr;
	global $taskparams;
	global $tasktabid;
	
	$sqlquery = "UPDATE LMB_WFL_TASK SET 
	NAME='".parse_db_string($taskname[$id],50)."',
	DESCR = '".parse_db_string($taskdescr[$id],250)."',
	TAB_ID = ".parse_db_int($tasktabid[$id])."
	WHERE ID = $id";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	
	$prepare_string = "UPDATE LMB_WFL_TASK SET PARAMS = ? WHERE ID = $id";
	lmb_PrepareSQL($prepare_string,array(parse_db_blob($taskparams[$id])),__FILE__,__LINE__);
}

function get_workflow(){
	global $db;

	$sqlquery = "SELECT * FROM LMB_WFL ORDER BY ID";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(odbc_fetch_row($rs)){
		$key = odbc_result($rs, "ID");
		$workflow["name"][$key] = odbc_result($rs, "NAME");
		$workflow["descr"][$key] = odbc_result($rs, "DESCR");
		$workflow["params"][$key] = odbc_result($rs, "PARAMS");
	}
	return $workflow;
}

function get_workflowTask($wflid){
	global $db;

	$sqlquery = "SELECT * FROM LMB_WFL_TASK WHERE WFL_ID = $wflid ORDER BY SORT";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(odbc_fetch_row($rs)){
		$key = odbc_result($rs, "ID");
		$task["name"][$key] = odbc_result($rs, "NAME");
		$task["descr"][$key] = odbc_result($rs, "DESCR");
		$task["sort"][$key] = odbc_result($rs, "SORT");
		$task["uparams"][$key] = odbc_result($rs, "PARAMS");
		$task["tab_id"][$key] = odbc_result($rs, "TAB_ID");
		$task["tasks_usable"][$key] = odbc_result($rs, "TASKS_USABLE");	
	}
	
	$sqlquery = "SELECT NAME FROM LMB_WFL WHERE ID = $wflid ORDER BY ID";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$task["wfl_name"] = odbc_result($rs, "NAME");
	
	
	return $task;
}



if($wflid){
	if(is_numeric($editid)){
		edit_workflowTask($editid);
	}
	if(is_numeric($delid)){
		delete_workflowTask($delid);
	}
	if($new_task AND $new_taskname){
		add_workflowTask($wflid,$new_taskname);
	}
	$wfltask = get_workflowTask($wflid);
}else{
	if(is_numeric($editid)){
		edit_workflow($editid);
	}
	if(is_numeric($delid)){
		delete_workflow($delid);
	}
	if($new_workflow AND $new_workflowname){
		add_workflow($new_workflowname);
	}
	$workflow = get_workflow();
}





?>