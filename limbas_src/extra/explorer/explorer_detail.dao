<?php
/*
 * Copyright notice
 * (c) 1998-2019 Limbas GmbH(support@limbas.org)
 * All rights reserved
 * This script is part of the LIMBAS project. The LIMBAS project is free software; you can redistribute it and/or modify it on 2 Ways:
 * Under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * Or
 * In a Propritary Software Licence http://limbas.org
 * The GNU General Public License can be found at http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 * Version 3.6
 */

/*
 * ID: 53
 */


function arrayToTable($elem,$max_level=10,$print_nice_stack=array()){
    static $out;
    

    if(is_array($elem) || is_object($elem)){
        if(in_array($elem,$print_nice_stack,true)){
            $out .= "<span style=\"color:red;\">RECURSION</span>";
            return $out;
        }
        $print_nice_stack[]=&$elem;
        if($max_level<1){
            $out .= "<span style=\"color:red;\">MAX</span>";
            return $out;
        }
        $max_level--;
        $out .= "<table cellspacing=0 cellpadding=3 width=100%>";
        if(is_array($elem)){
            #$out .= '<tr><td colspan=2 style="background-color:#333333;"><strong><font color=white> </font></strong></td></tr>';
        }else{
            $out .= '<tr><td colspan=2 class="EXIF_Main_Heading"><strong>';
            $out .= '<span style="color:white;">OBJECT Type: '.get_class($elem).'</span></strong></td></tr>';
        }
        $color=0;
        foreach($elem as $k => $v){
            if($max_level%2){
                $cl=($color++%2)?"EXIF_Level1A":"EXIF_Level1B";
            }else{
                $cl=($color++%2)?"EXIF_Level2A":"EXIF_Level2B";
            }
            $out .= '<tr><td valign="top" style="width:40px;" class="'.$cl.'">';
            $out .= '<strong>'.$k."</strong></td><td>";
            arrayToTable($v,$max_level,$print_nice_stack);
            $out .= "</td></tr>";
        }
        $out .= "</table>";
        return $out;
    }
    if($elem === null){
        $out .= "<span style=\"color:green;\">NULL</span>";
    }elseif($elem === 0){
        $out .= "0";
    }elseif($elem === true){
        $out .= "<span style=\"color:green;\">TRUE</span>";
    }elseif($elem === false){
        $out .= "<span style=\"color:green;\">FALSE</span>";
    #}elseif($elem === ""){
    #    $out .= "<font color=green>EMPTY STRING</font>";
    }else{
        $out .= str_replace("\n","<strong><span style=\"color:red;\">*</span></strong><br>\n",$elem);
    }
    
    
    return $out;

} 


# --- Datenatz-Update -----------------------------------
if($change_ok AND $history_fields AND $LINK[3]){
	if($old_action == "gtab_erg"){$chtyp = 2;}else{$chtyp = 1;}
	lmb_StartTransaction();
	if($cid = update_data($history_fields,$chtyp,0)){
		if(is_numeric($cid)){$ID = $cid;}
		lmb_EndTransaction(1);
	}else{
		lmb_EndTransaction(0);
	}
}


if(!$filestructure){get_filestructure();}


$sqlquery = "SELECT DISTINCT LDMS_FILES.LEVEL,LDMS_FILES.TABID,LDMS_FILES.FIELDID,LDMS_FILES.DATID,LDMS_FILES.NAME,LDMS_FILES.SECNAME,LDMS_FILES.LMLOCK,LDMS_FILES.LOCKUSER,LDMS_FILES.MIMETYPE
FROM LDMS_FILES
WHERE LDMS_FILES.ID = $ID";

$rs2 = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(!$rs2) {$commit = 1;}
$level = odbc_result($rs2, "LEVEL");
$tabid = odbc_result($rs2, "TABID");
$fieldid = odbc_result($rs2, "FIELDID");
$datid = odbc_result($rs2, "DATID");
$filename = odbc_result($rs2, "NAME");
$ext = $gmimetypes["ext"][odbc_result($rs2, "MIMETYPE")];
$absfile = $umgvar['uploadpfad'].$filestruct['path'][$level].odbc_result($rs2, "SECNAME").".".$ext;

# Rechte
if(!$filestruct["view"][$level]){
	echo "<BR><BR>".$lang[114];
	die();
}

if($edit_fields AND ($filestruct['edit'][odbc_result($rs2, "LEVEL")] AND (!odbc_result($rs2, "LMLOCK") OR odbc_result($rs2, "LOCKUSER") == $session['user_id']) OR $session['group_id'] == 1)){
	# --- LDMS_FILES ---
	$sqlquery = "UPDATE LDMS_FILES SET ";
	if($checked == 'true'){$sqlquery .= "CHECKED = ".LMB_DBDEF_TRUE.",CHECKUSER = ".$session['user_id'].",CHECKDATE = ".LMB_DBDEF_TIMESTAMP.",";}elseif($checked == 'false'){$sqlquery .= "CHECKED = ".LMB_DBDEF_FALSE.",";}
	if($perm == 'true'){$sqlquery .= "PERM = ".LMB_DBDEF_TRUE.",PERMUSER = ".$session['user_id'].",PERMDATE = ".LMB_DBDEF_TIMESTAMP.",";}elseif($perm == 'false'){$sqlquery .= "PERM = ".LMB_DBDEF_FALSE.",";}
	if($lock == 'true'){
		$sqlquery .= "LMLOCK = ".LMB_DBDEF_TRUE.",LOCKUSER = ".$session['user_id'].",LOCKDATE = ".LMB_DBDEF_TIMESTAMP.",";
		#lock_data_set($gtab["argresult_id"]["LDMS_FILES"],$ID,$session["user_id"]);
	}elseif($lock == 'false' AND odbc_result($rs2, "LOCKUSER") == $session['user_id'] OR $session['group_id'] == 1){
		$sqlquery .= "LMLOCK = ".LMB_DBDEF_FALSE.",";
	}
	$sqlquery .= "EDITDATUM = ".LMB_DBDEF_TIMESTAMP." WHERE ID = $ID";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
}

if($favorite == 1){
	favorite_file($ID,$session["user_id"],1);
}elseif($favorite == 2){
	favorite_file($ID,$session["user_id"],2);
}

$query_value = array("LDMS_META.NAME2","LDMS_META.TYPE","LDMS_META.COLORS","LDMS_META.DEPTH","LDMS_META.RESOLUTION","LDMS_META.GEOMETRY","LDMS_META.FORMAT","LDMS_FILES.ERSTUSER","LDMS_FILES.SIZE","LDMS_FILES.LMLOCK","LDMS_FILES.PERM","LDMS_FILES.CHECKED","LDMS_FILES.ERSTUSER","LDMS_FILES.ERSTDATUM","LDMS_FILES.MIMETYPE","LDMS_FILES.ID","LDMS_FILES.LEVEL","LDMS_FILES.SECNAME","LDMS_FILES.NAME","LDMS_FILES.THUMB_OK","LDMS_FILES.ERSTGROUP","LDMS_FILES.TABID","LDMS_FILES.DATID","LDMS_FILES.FIELDID","LDMS_FILES.INDD","LDMS_FILES.INDT","LDMS_FILES.IND","LDMS_FILES.LOCKUSER","LDMS_FILES.CHECKUSER","LDMS_FILES.PERMUSER","LDMS_FILES.PERMDATE","LDMS_FILES.CHECKDATE","LDMS_FILES.LOCKDATE","LDMS_FILES.VPID","LDMS_FILES.VID","LDMS_FILES.MD5","LDMS_FILES.VACT");
$query_value = implode(",",$query_value);

$sqlquery = "SELECT $query_value
FROM LDMS_FILES,LDMS_META
WHERE LDMS_FILES.ID = LDMS_META.ID AND LDMS_FILES.ID = $ID";
$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
if(!$rs) {$commit = 1;}

if(odbc_fetch_row($rs)){

	# --- Allgemein ---
	$ffile["id"] = odbc_result($rs, "ID");
	$ffile["vparentid"] = odbc_result($rs, "VPID");
	$ffile["level"] = odbc_result($rs, "LEVEL");
	$ffile["name"] = odbc_result($rs, "NAME");
	$ffile["name2"] = odbc_result($rs, "NAME2");
	$ffile["pathname"] = str_replace($file_url."/","",$ffile['url'].$ffile['name']);
	$ffile["secname"] = odbc_result($rs, "SECNAME");
	$ffile["size"] = file_size(odbc_result($rs, "SIZE"));
	$ffile["datum"] = get_date(odbc_result($rs, "ERSTDATUM"),2);
	$ffile["erstuserid"] = odbc_result($rs, "ERSTUSER");
	$ffile["erstuser"] = $userdat['vorname'][odbc_result($rs, "ERSTUSER")]." ".$userdat["name"][odbc_result($rs, "ERSTUSER")];
	$ffile["erstgroup"] = $groupdat['name'][odbc_result($rs, "ERSTGROUP")];
	$ffile["checked"] = odbc_result($rs, "CHECKED");
	$ffile["perm"] = odbc_result($rs, "PERM");
	$ffile["lock"] = odbc_result($rs, "LMLOCK");
	$ffile["lockuser"] = $userdat['vorname'][odbc_result($rs, "LOCKUSER")]." ".$userdat["name"][odbc_result($rs, "LOCKUSER")];
	$ffile["lockuserid"] = odbc_result($rs, "LOCKUSER");
	$ffile["checkuser"] = $userdat['vorname'][odbc_result($rs, "CHECKUSER")]." ".$userdat["name"][odbc_result($rs, "CHECKUSER")];
	$ffile["permuser"] = $userdat['vorname'][odbc_result($rs, "PERMUSER")]." ".$userdat["name"][odbc_result($rs, "PERMUSER")];
	$ffile["permdate"] = get_date(odbc_result($rs, "PERMDATE"),2);
	$ffile["checkdate"] = get_date(odbc_result($rs, "CHECKDATE"),2);
	$ffile["lockdate"] = get_date(odbc_result($rs, "LOCKDATE"),2);
	$ffile["vid"] = odbc_result($rs, "VID");
	$ffile["vact"] = odbc_result($rs, "VACT");
	$ffile["md5"] = odbc_result($rs, "MD5");

	$ffile["mimeid"] = odbc_result($rs, "MIMETYPE");
	$ffile["mimetype"] = $gmimetypes["mimetype"][odbc_result($rs, "MIMETYPE")];
	$ffile["ext"] = $gmimetypes["ext"][odbc_result($rs, "MIMETYPE")];
	$ffile["pic"] = $gmimetypes["pic"][odbc_result($rs, "MIMETYPE")];

	$ffile["downloadtime"] = "Modem: ".dltime(odbc_result($rs, "SIZE"), 56)." ".$lang[1668]."
		ISDN: ".dltime(odbc_result($rs, "SIZE"), 64)." ".$lang[1668]."
		DSL: ".dltime(odbc_result($rs, "SIZE"), 700)." ".$lang[1668];

	# --- Infos ---
	$ffile["format"] = odbc_result($rs, "FORMAT");
	$ffile["geometry"] = odbc_result($rs, "GEOMETRY");
	$ffile["resolution"] = odbc_result($rs, "RESOLUTION");
	$ffile["depth"] = odbc_result($rs, "DEPTH");
	$ffile["colors"] = odbc_result($rs, "COLORS");
	$ffile["type"] = odbc_result($rs, "TYPE");

	# --- Inizes ---
	$ffile["indize"] = odbc_result($rs, "IND");
	$ffile["indize_time"] = odbc_result($rs, "INDD");
	$ffile["indize_needtime"] = odbc_result($rs, "INDT");
	$ffile["thumb_ok"] = odbc_result($rs, "THUMB_OK");

	# --- Tabellen ---
	$ffile["d_tabid"] = odbc_result($rs, "TABID");
	$ffile["d_tab"] = $gtab['desc'][odbc_result($rs, "TABID")];
	$ffile["d_field"] = $gfield[odbc_result($rs, "TABID")]['spelling'][odbc_result($rs, "FIELDID")];
	$ffile["d_id"] = odbc_result($rs, "DATID");

	$file_url = " /".set_url($ffile['level'],0).$ffile['name'];

	# Favorite
	$sqlquery = "SELECT ID FROM LDMS_FAVORITES WHERE FILE_ID = ".parse_db_int($ID,16)." AND USER_ID = ".parse_db_int($session["user_id"],3);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if(odbc_result($rs,"ID")){
		$ffile["favorite"] = 1;
	}

	# ---------------- Versionen -----------------
	$sqlquery = "SELECT ID,NAME,VDESC,ERSTUSER,ERSTDATUM FROM LDMS_FILES WHERE VPID = ".$ffile['vparentid']." ORDER BY ERSTDATUM DESC";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$bzm = 1;
	while(odbc_fetch_row($rs)){
	    $vid = odbc_result($rs, "ID");
		$vfile["id"][] = $vid;
		$vfile["name"][] = odbc_result($rs, "NAME");
		$vfile["erstuser"][] = $userdat['vorname'][odbc_result($rs, "ERSTUSER")]." ".$userdat['name'][odbc_result($rs, "ERSTUSER")];
		$vfile["erstdatum"][] = get_date(odbc_result($rs, "ERSTDATUM"),2);
		$vfile["vnote"][] = odbc_result($rs, "VDESC");
		$vfile["nr"][] = $bzm;
		$prev = $vid;
		$bzm++;
	}
	if($bzm <= 2){$vfile["count"] = 0;}
	else{$vfile["count"] = $bzm - 1;}
	rsort($vfile["nr"]);
	
	# ---------------- Dublicates -----------------
	$sqlquery = "SELECT ID,LEVEL,NAME,SIZE,ERSTUSER,ERSTDATUM FROM LDMS_FILES WHERE MD5 = '".parse_db_string($ffile["md5"],50)."' AND ID != ".parse_db_int($ffile["id"],18);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(odbc_fetch_row($rs)) {
		if($filestruct["id"][odbc_result($rs,"LEVEL")]){
			$dfile["id"][] = odbc_result($rs,"ID");
			$dfile["name"][] = odbc_result($rs,"NAME");
			$dfile["level"][] = odbc_result($rs,"LEVEL");
			$dfile["size"][] = odbc_result($rs,"SIZE");
			$dfile["erstuser"][] = odbc_result($rs,"ERSTUSER");
			$dfile["erstdatum"][] = odbc_result($rs,"ERSTDATUM");
		}
	}
	
	# ---------------- Metadaten aus Datei auslesen -----------------
	$filename = $umgvar['uploadpfad'].$filestruct['path'][$level].$ffile['secname'].".".$ffile['ext'];
	# Sonderfall JPEG wegen EXIF Zusatzdaten
	if(in_array($ffile["ext"],$umgvar["read_metadata"])){
    	if($exifdata = getmeta_struct($filename)){
    	   $exifdata = arrayToTable($exifdata);
    	}
	}

	# delete relation
	if($drop_relation){
		$droprelation = explode("_",$drop_relation);
	}

	# Herkunft
	foreach($gtab["table"] as $key0 => $value0){
		if($gverkn[$key0]["id"]){
			foreach($gverkn[$key0]["id"] as $key => $value){
				if($gtab["typ"][$value] == 3 AND $gfield[$key0]["verkntabletype"][$key] == 1){
					if($gfield[$key0]["field_name"][$gfield[$key0]["mainfield"]]){
						$mainfield = $gfield[$key0]["field_name"][$gfield[$key0]["mainfield"]];
					}else{
						$mainfield = $gfield[$key0]["field_name"][$key];
					}
					if($gtab["table"][$key0] AND $gfield[$key0]["md5tab"][$key] AND $gtab["table"][$key0] AND $mainfield){
						$sqlquery = "SELECT DISTINCT ".$gtab["table"][$key0].".ID,".$gtab["table"][$key0].".".$mainfield.",".$gfield[$key0]["md5tab"][$key].".LID FROM ".$gtab["table"][$key0].",".$gfield[$key0]["md5tab"][$key].",".$gtab["table"][$value]." WHERE ".$gtab["table"][$key0].".ID = ".$gfield[$key0]["md5tab"][$key].".ID AND ".$gfield[$key0]["md5tab"][$key].".VERKN_ID = ".$gtab["table"][$value].".ID AND ".$gtab["table"][$value].".ID = $ID";
						$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
						if(!$rs) {$commit = 1;}
						while(odbc_fetch_row($rs)){
							# delete relation
							if($droprelation[0] == $key0 AND $droprelation[1] == $key AND $droprelation[2] == odbc_result($rs, "ID")){
								require_once("gtab/gtab.lib");
								$verkn = set_verknpf($droprelation[0],$droprelation[1],$droprelation[2],0,$ID,0,0);
								if($verkn AND $verkn["typ"] AND $verkn["id"] AND $verkn["del_id"]){
									set_joins($value,$verkn);
								}
							}else{
								$forigin[$key0][$key]["value"][] = odbc_result($rs, $mainfield);
								$forigin[$key0][$key]["id"][] = odbc_result($rs, "ID");
								$forigin[$key0][$key]["field"] = $gfield[$key0]["beschreibung"][$key];
								$forigin[$key0][$key]["folder"][] = $filestruct["name"][odbc_result($rs, "LID")];
							}
						}
					}
				}
			}
		}
	}


}else{
	die('<br><br><div style="text-align:center;"><h3>'.$lang[1726].'</h3></div>');
}
?>