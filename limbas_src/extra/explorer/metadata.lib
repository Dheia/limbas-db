<?php
/*
 * Copyright notice
 * (c) 1998-2016 Limbas GmbH - Axel westhagen (support@limbas.org)
 * All rights reserved
 * This script is part of the LIMBAS project. The LIMBAS project is free software; you can redistribute it and/or modify it on 2 Ways:
 * Under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * Or
 * In a Propritary Software Licence http://limbas.org
 * The GNU General Public License can be found at http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 * Version 3.0
 */

/*
 * ID:
 */


/*
 * Create exiftool specific config file
 */
function create_exif_conf() {
	global $umgvar;
    global $DBA;
	
	$config_file = $umgvar["pfad"]."/TEMP/conf/exiftool.conf";
	$handler = fopen($config_file,"w");
	
	$val = "# This file contains metadata definition for limbas ldms_meta table
	    
	    
%Image::ExifTool::UserDefined = (	    
    'Image::ExifTool::XMP::xmp' => {
";

	$sysfields = array('id','del');
	
	#$gtabid = $gtab['argresult_id']['LDMS_META'];
	if($fields = dbf_5(array($DBA['DBSCHEMA'],'LDMS_META'))){
	    foreach($fields['columnname'] as $key => $value){
	        
	        if(in_array(strtolower($value),$sysfields)){continue;}
	        
	        $val .= "           ".$value."=> {},\n";
	    }
	}

$val .="
    }

);
";
	
	fputs($handler,$val);
	fclose($handler);
}

function put_meta($ID,$mimetype,$absfile) {
	global $umgvar;

	if(!$umgvar[use_exif] OR (!in_array($mimetype,$umgvar["update_metadata"]) AND $umgvar["update_metadata"][0] != 1)){return;}

	# use IPTC
	if(($umgvar[use_exif] == 2 AND $mimetype == "jpeg" OR $mimetype == "jpg" OR $mimetype == "tiff")){
		$meta = getmeta_from_db($ID,0);
		putmeta_iptc($absfile,$meta);
	# use XMP
	}else{
		$meta = getmeta_from_db($ID,0);
		putmeta_exif($absfile,$meta);
	}
}

function putmeta_exif($absfile,$meta){
	global $umgvar;
	global $session;

	if(!$meta){return false;}
	
	if(!file_exists($umgvar["pfad"]."/TEMP/conf/exiftool.conf")){
	   create_exif_conf();
	}

	foreach ($meta as $key => $value){
	    $value = str_replace('"','\"',$value);
	    $val .= "-".strtolower($key)."=\"$value\" ";
	}

	$cmd = "exiftool -config ".$umgvar["pfad"]."/TEMP/conf/exiftool.conf -P -overwrite_original $val $absfile";
	$result = exec($cmd, $retval);

	if($retval){return false;}
    return true;
}


function putmeta_iptc($absfile,$meta){
	global $umgvar;

	#$meta["LANGUAGE"] = $language;
	#$meta["FTYPE"] = $ftype;
	#$meta["CONTRIBUTORS"] = $contributors;
	#$meta["IDENTIFIER"] = $identifier;
	#$meta["CLASSIFICATION"] = $classification;
	#$meta["CREATEDATE"] = $createdate;

	# ---- IPTC ----------------
	$new_iptc_data[0]["IPTC_Type"] = "2:00";
	$new_iptc_data[0]["RecName"] = "Record Version";
	$new_iptc_data[0]["RecDesc"] = "Record Version - 2 byte binary number";
	$new_iptc_data[0]["RecData"] = "";

	$bzm = 1;
	if($meta["DESCRIPTION"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:120";
		$new_iptc_data[$bzm]["RecName"] = "Caption/Abstract";
		$new_iptc_data[$bzm]["RecDesc"] = "Caption/Abstract - Max 2000 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["DESCRIPTION"],0,2000);
		$present_iptc_data[] = "2:120";
		$bzm++;
	}
	if($meta["CREATOR"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:122";
		$new_iptc_data[$bzm]["RecName"] = "Caption Writer/Editor";
		$new_iptc_data[$bzm]["RecDesc"] = "Caption Writer/Editor - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["CREATOR"],0,32);
		$present_iptc_data[] = "2:122";
		$bzm++;
	}
	if($meta["NAME2"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:105";
		$new_iptc_data[$bzm]["RecName"] = "Headline";
		$new_iptc_data[$bzm]["RecDesc"] = "Headline - Max 256 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["NAME2"],0,256);
		$present_iptc_data[] = "2:105";
		$bzm++;
	}
	if($meta["INSTRUCTIONS"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:40";
		$new_iptc_data[$bzm]["RecName"] = "Special Instructions";
		$new_iptc_data[$bzm]["RecDesc"] = "Special Instructions - Max 256 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["INSTRUCTIONS"],0,256);
		$present_iptc_data[] = "2:40";
		$bzm++;
	}
	if($meta["PUBLISHER"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:80";
		$new_iptc_data[$bzm]["RecName"] = "By-Line (Author)";
		$new_iptc_data[$bzm]["RecDesc"] = "By-Line (Author) - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["PUBLISHER"],0,32);
		$present_iptc_data[] = "2:80";
		$bzm++;
	}
	if($meta["TITLE"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:85";
		$new_iptc_data[$bzm]["RecName"] = "By-Line Title (Author Position) [Not used in Photoshop 7]";
		$new_iptc_data[$bzm]["RecDesc"] = "By-Line Title (Author Position) - Max 32 characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["TITLE"],0,32);
		$present_iptc_data[] = "2:85";
		$bzm++;
	}
	if($meta["CREDIT"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:110";
		$new_iptc_data[$bzm]["RecName"] = "Credit";
		$new_iptc_data[$bzm]["RecDesc"] = "Credit - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["CREDIT"],0,32);
		$present_iptc_data[] = "2:110";
		$bzm++;
	}
	if($meta["SOURCE"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:115";
		$new_iptc_data[$bzm]["RecName"] = "Source";
		$new_iptc_data[$bzm]["RecDesc"] = "Source - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["SOURCE"],0,32);
		$present_iptc_data[] = "2:115";
		$bzm++;
	}
	if($meta["ORIGINNAME"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:05";
		$new_iptc_data[$bzm]["RecName"] = "Object Name (Title)";
		$new_iptc_data[$bzm]["RecDesc"] = "Object Name (Title) - Max 64 characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["ORIGINNAME"],64);
		$present_iptc_data[] = "2:05";
		$bzm++;
	}
	if($meta["CREATEDATE"]){
		$createdate = preg_replace("/[^0-9]/","",substr(convert_date($meta["CREATEDATE"]),0,10));
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:55";
		$new_iptc_data[$bzm]["RecName"] = "Date Created";
		$new_iptc_data[$bzm]["RecDesc"] = "Date Created - 8 numeric characters CCYYMMDD";
		$new_iptc_data[$bzm]["RecData"] = $createdate;
		$present_iptc_data[] = "2:55";
		$bzm++;
	}
	if($meta["CITY"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:90";
		$new_iptc_data[$bzm]["RecName"] = "City";
		$new_iptc_data[$bzm]["RecDesc"] = "City - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["CITY"],0,32);
		$present_iptc_data[] = "2:90";
		$bzm++;
	}
	if($meta["STATE"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:95";
		$new_iptc_data[$bzm]["RecName"] = "Province/State";
		$new_iptc_data[$bzm]["RecDesc"] = "Province/State - Max 32 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["STATE"],0,32);
		$present_iptc_data[] = "2:95";
		$bzm++;
	}
	if($meta["COUNTRY"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:101";
		$new_iptc_data[$bzm]["RecName"] = "Country/Primary Location Name";
		$new_iptc_data[$bzm]["RecDesc"] = "Country/Primary Location Name - Max 64 characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["COUNTRY"],0,64);
		$present_iptc_data[] = "2:101";
		$bzm++;
	}
	if($meta["TRANSMISSION"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:103";
		$new_iptc_data[$bzm]["RecName"] = "Original Transmission Reference";
		$new_iptc_data[$bzm]["RecDesc"] = "Original Transmission Reference - Max 32 characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["TRANSMISSION"],0,32);
		$present_iptc_data[] = "2:103";
		$bzm++;
	}
	if($meta["CATEGORY"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:15";
		$new_iptc_data[$bzm]["RecName"] = "Category";
		$new_iptc_data[$bzm]["RecDesc"] = "Category - Max 3 characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["CATEGORY"],0,3);
		$present_iptc_data[] = "2:15";
		$bzm++;
	}
	if($meta["SUBCATEGORY"]){
		$subcategory = explode(";",$meta["SUBCATEGORY"]);
		foreach($subcategory as $key => $value){
	 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:20";
			$new_iptc_data[$bzm]["RecName"] = "Supplemental Category";
			$new_iptc_data[$bzm]["RecDesc"] = "Supplemental Category - Max 32 characters";
			$new_iptc_data[$bzm]["RecData"] = substr($value,0,32);
			$present_iptc_data[] = "2:20";
			$bzm++;
		}
	}
	if($meta["URGENCY"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:10";
		$new_iptc_data[$bzm]["RecName"] = "Urgency";
		$new_iptc_data[$bzm]["RecDesc"] = "Urgency - 1 numeric character";
		$new_iptc_data[$bzm]["RecData"] = parse_db_int($meta["URGENCY"],2);
		$present_iptc_data[] = "2:10";
		$bzm++;
	}
	if($meta["SUBJECT"]){
		$subject = explode(";",$meta["SUBJECT"]);
		foreach($subject as $key => $value){
	 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:25";
			$new_iptc_data[$bzm]["RecName"] = "Keywords";
			$new_iptc_data[$bzm]["RecDesc"] = "Keywords - Max 64 characters";
			$new_iptc_data[$bzm]["RecData"] = substr($value,0,64);
			$present_iptc_data[] = "2:25";
			$bzm++;
		}
	}
	if($meta["COPYRIGHT"]){
 		$new_iptc_data[$bzm]["IPTC_Type"] = "2:116";
		$new_iptc_data[$bzm]["RecName"] = "Copyright Notice";
		$new_iptc_data[$bzm]["RecDesc"] = "Copyright Notice - Max 128 Characters";
		$new_iptc_data[$bzm]["RecData"] = substr($meta["COPYRIGHT"],128);
		$present_iptc_data[] = "2:116";
		$bzm++;
	}


		// Hide any unknown EXIF tags
		$GLOBALS['HIDE_UNKNOWN_TAGS'] = TRUE;


		$req = "extern/exif/JPEG.php"; require_once($req);
		$req = "extern/exif/JFIF.php"; require_once($req);
		$req = "extern/exif/PictureInfo.php"; require_once($req);
		$req = "extern/exif/XMP.php"; require_once($req);
		$req = "extern/exif/Photoshop_IRB.php"; require_once($req);
		$req = "extern/exif/EXIF.php"; require_once($req);



		$jpeg_header_data = get_jpeg_header_data($absfile);

		# --- update image ------
		if($new_iptc_data){
			$irb_data = get_Photoshop_IRB($jpeg_header_data);
			$iptc_data = get_Photoshop_IPTC($irb_data);

			if($nirb_data = put_Photoshop_IPTC($irb_data,$new_iptc_data)){
				if($njpeg_header_data = put_Photoshop_IRB($jpeg_header_data,$nirb_data)){
                    if (! put_jpeg_header_data($absfile, $absfile, $njpeg_header_data)) {
                        $GLOBALS["alert"] = "writing exifdata failed!";
                        return false;
                    }
				}
			}
		}

		return true;

}


/**
* Mata-Daten auslesen
* @global db database handler
* @return meta
*/
function getmeta_from_db($ID,$index){
	global $db;
	global $gfile;
	global $gtab;

	$mark = "<font color=\"green\">meta:</font> ";


	# all Metadata Tables
	if($allmeta = array_keys($gtab["verkn"],$gtab["argresult_id"]["LDMS_FILES"])){
		foreach ($allmeta as $key0 => $metatabid){
			$from[] = $gtab["table"][$metatabid];
			if($gtab["table"][$metatabid] != "LDMS_FILES"){
				$where[] = "LDMS_FILES.ID = ".$gtab["table"][$metatabid].".ID";
			}
		}
	}

	if($from AND $where){
	$sqlquery = "SELECT * FROM ".implode(",",$from)." WHERE LDMS_FILES.ID = $ID AND ".implode(" AND ",$where);
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}
	if(odbc_fetch_row($rs, 1)){
		foreach ($gfile['name'] as $key => $value){
			if($gfile['field_type'][$key] != 100 AND !$gfile["virt"][$key] AND $gfile["tab"][$key] != "LDMS_FILES" AND $gfile["name"][$key] != "ID" AND $gfile["name"][$key] != "MIMETYPE"){
				$result = odbc_result($rs, $value);

				# date
				if($gfile['typ'][$key] == 4){
					$result = get_date($result,2);
				}

				if($index){
					if($result){$meta[] = $mark.str_replace("\n"," ",$result);}
				}else{
					if($result){$meta[$value] = $result;}
				}
			}
		}
		return $meta;
	}}
	return false;
}

/**
 * get Metadata
 *
 * @param string $absfile
 * @param string $mimetype
 * @param num $detaillevel
 * @return array of metadata
 */
function getmeta_from_file($absfile,$mimetype,$detaillevel=1){
	global $umgvar;

	$mime = explode("/",$mimetype);

	# IMAGE-MAGICK
	if($mime[0] == "image" OR ($mime[1] == "pdf" AND ($umgvar["imagemagickpdf"] OR $detaillevel == 3))){
		if($mime[1] == "pdf"){$page = "'[0]'";}else{$page = "";}
		if($umgvar["ext_im_analyse"]){$ex = ",%k";}
		$cmd = $umgvar["imagemagick"]."/identify -format %C,%g,%xx%y,%z-bit,%r,%Q\%,%b,$ex ".$umgvar["imagemagicklimit"]." ".$absfile.$page;
		$picinf = explode(",",`$cmd`);
		if($picinf){
			$meta["FORMAT"] = $picinf[0]." ".$picinf[5];
			$meta["GEOMETRY"] = explode("+",$picinf[1]);
			$meta["GEOMETRY"] = $meta["GEOMETRY"][0];
			$meta["RESOLUTION"] = str_replace(" undefined","",$picinf[2]);
			$meta["DEPTH"] = $picinf[3];
			$meta["TYPE"] = $picinf[4];
			$meta["SIZE"] = filesize($absfile);
			if($umgvar["ext_im_analyse"]){
				$meta["COLORS"] = trim($picinf[7]);
			}
		}
	}

	if($detaillevel >= 2){
		# EXIF
        if(in_array($mime[1],$umgvar["read_metadata"] OR $umgvar["read_metadata"][0] == 1)){
			if($meta_ = getmeta_raw($absfile)){
				if(is_array($meta)){
					$meta = array_merge($meta,$meta_);
				}else{
					$meta = $meta_;
				}
			}
		}
	}

	if(is_array($meta)){
		return $meta;
	}else{
		return false;
	}
}

# update Metadata to db
function putmeta_to_db($ID,$meta){
	global $gfile;
	global $db;
	global $gtab;
	global $gfield;
	
	require_once("gtab/gtab.lib");
	$sysfields = array('id','del','mimetype');

	# Suche ob Metafeld in DB vorhanden
	foreach($meta as $key => $value){
	    $field = strtoupper($key);
		if($k = array_search($field,$gfile["name"]) AND trim($value)){
			# ignore systemfields from ldms_files
		    if($gfile["tabid"][$k] == $gtab["argresult_id"]["LDMS_FILES"] AND $gfield[$gtab["argresult_id"]["LDMS_FILES"]][$gfile["fid"][$k]] <= 32){continue;}
		    # LDMS_META / LDMS_FILES  $history_fields
			$fk = $gfile["tabid"][$k].",".$gfile["fid"][$k].",".$ID;
			$history_fields[$fk] = $value;
		}
	}

	# LDMS_META Tabelle updaten
	if($history_fields){
		$sqlquery = "UPDATE LDMS_FILES SET INDM = ".LMB_DBDEF_FALSE.", META = ".LMB_DBDEF_TRUE." WHERE ID = $ID";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!$rs) {return false;}
		update_data($history_fields,3,0,1);
	}

	return true;
}

# refresh Metadata to db
function refreshmeta_to_db($ID){
	global $db;
	global $umgvar;
	global $filestruct;
	
	if($GLOBALS["create_new_file"]){return true;}
    if(!$filestruct){get_filestructure();}
	# get Details
	$sqlquery = "SELECT DISTINCT LDMS_FILES.SECNAME,LDMS_FILES.LEVEL,LMB_MIMETYPES.MIMETYPE,LMB_MIMETYPES.EXT FROM LDMS_FILES,LMB_MIMETYPES WHERE LDMS_FILES.ID = $ID AND LDMS_FILES.MIMETYPE = LMB_MIMETYPES.ID";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}
	$level = odbc_result($rs,'LEVEL');
	$absfile = $umgvar["uploadpfad"].$filestruct['path'][$level].odbc_result($rs,"SECNAME").".".odbc_result($rs,"EXT");
	$mimetype = odbc_result($rs,"MIMETYPE");
	$ext = odbc_result($rs,"EXT");

	# Metadaten in Datei schreiben
	put_meta($ID,$ext,$absfile);

	# reset Index
	$sqlquery = "UPDATE LDMS_FILES SET INDM = ".LMB_DBDEF_FALSE.", META = ".LMB_DBDEF_TRUE." WHERE ID = $ID";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}
	$sqlquery = "DELETE FROM LMB_INDIZE_F WHERE FID = $ID AND META = ".LMB_DBDEF_TRUE;
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}
	$sqlquery = "DELETE FROM LMB_INDIZE_FS WHERE FID = $ID AND META = ".LMB_DBDEF_TRUE;
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {return false;}

	return true;
}


# ---------------- JPEG -----------------
/*
function getmeta_iptc($absfile){
	global $umgvar;

	$meta = array();

	// Hide any unknown EXIF tags
	$GLOBALS['HIDE_UNKNOWN_TAGS'] = TRUE;

	$req = "extern/exif/JPEG.php"; require_once($req);
	$req = "extern/exif/JFIF.php"; require_once($req);
	$req = "extern/exif/PictureInfo.php"; require_once($req);
	$req = "extern/exif/XMP.php"; require_once($req);
	$req = "extern/exif/Photoshop_IRB.php"; require_once($req);
	$req = "extern/exif/EXIF.php"; require_once($req);

	$jpeg_header_data = get_jpeg_header_data($absfile);
	$irb_data = get_Photoshop_IRB( $jpeg_header_data );
	$iptc_data = get_Photoshop_IPTC( $irb_data );

	if($iptc_data){
		foreach($iptc_data as $key => $value){
			if($value["IPTC_Type"] == "2:20"){
				$iptc_list[$value["IPTC_Type"]][] = $value["RecData"];
			}elseif($value["IPTC_Type"] == "2:25"){
				$iptc_list[$value["IPTC_Type"]][] = $value["RecData"];
			}else{
				$iptc_list[$value["IPTC_Type"]] = $value["RecData"];
			}

		}
		if($iptc_list["2:20"]){$iptc_list["2:20"] = implode(";",$iptc_list["2:20"]);}
		if($iptc_list["2:25"]){$iptc_list["2:25"] = implode(";",$iptc_list["2:25"]);}
		$iptc_list["2:55"] = trim($iptc_list["2:55"]);

		$createdate = substr($iptc_list["2:55"],6,2)."-".substr($iptc_list["2:55"],4,2)."-".substr($iptc_list["2:55"],0,4);
		if($createdate = convert_date($createdate)){
			$meta["CREATEDATE"] = $createdate;
		}
		$meta["URGENCY"] = $iptc_list["2:10"];
		$meta["NAME2"] = $iptc_list["2:105"];
		$meta["CREATOR"] = $iptc_list["2:122"];
		$meta["SUBJECT"] = $iptc_list["2:25"];
		$meta["DESCRIPTION"] = $iptc_list["2:120"];
		$meta["PUBLISHER"] = $iptc_list["2:80"];
		$meta["SOURCE"] = $iptc_list["2:115"];
		$meta["INSTRUCTIONS"] = $iptc_list["2:40"];
		$meta["CATEGORY"] = $iptc_list["2:15"];
		$meta["SUBCATEGORY"] = $iptc_list["2:20"];
		$meta["TITLE"] = $iptc_list["2:85"];
		$meta["CREDIT"] = $iptc_list["2:110"];
		$meta["CITY"] = $iptc_list["2:90"];
		$meta["STATE"] = $iptc_list["2:95"];
		$meta["COUNTRY"] = $iptc_list["2:101"];
		$meta["TRANSMISSION"] = $iptc_list["2:103"];
		$meta["ORIGINNAME"] = $iptc_list["2:05"];
		$meta["COPYRIGHT"] = $iptc_list["2:116"];


	}

	if($jpeg_header_data){
		# --- in Photoshop_IRB.php '<pre> / </pre>' entfernen / Table Border=0 / <img> auskommentieren  || IPTC.php 'border = 0'
		$meta["IRB"] = Interpret_IRB_to_HTML( get_Photoshop_IRB( $jpeg_header_data ), $absfile );
		$meta["XMP"] = Interpret_XMP_to_HTML( read_XMP_array_from_text( get_XMP_text( $jpeg_header_data ) ) );
	}

	# --- in EXIF.php '<pre>' entfernen / 'thumb' auskommentieren / Table Border=0
	$meta["EXIF"] = Interpret_EXIF_to_HTML( get_EXIF_JPEG( $absfile ), $absfile );

	return $meta;
}
*/


# ---------------- PDf -----------------
function getmeta_raw($absfile){

	$meta = array();
	# exiftool -php -g1 -q -struct
	# exiftool -php -g
	
	if($data = `exiftool -php $absfile`){
	   $e = eval('return ' . $data);
	}

	if(is_array($e[0])){
        return $e[0];
	}
	
	return false;
}


function getmeta_struct($absfile){

	$meta = array();
	# exiftool -php -g1 -q -struct
	# exiftool -php -g
	
	if($data = `exiftool -php -g1 -q -struct $absfile`){
	   $e = eval('return ' . $data);
	}

	if(is_array($e[0])){
	    #return nl2br( eregi_replace( " ", " ", print_r( $e[0], TRUE ) ) );
        return $e[0];
	}
	
	return false;
}
    


