<?php
/*
 * Copyright notice
 * (c) 1998-2016 Limbas GmbH - Axel westhagen (support@limbas.org)
 * All rights reserved
 * This script is part of the LIMBAS project. The LIMBAS project is free software; you can redistribute it and/or modify it on 2 Ways:
 * Under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * Or
 * In a Propritary Software Licence http://limbas.org
 * The GNU General Public License can be found at http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license from the author is found in LICENSE.txt distributed with these scripts.
 * This script is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * This copyright notice MUST APPEAR in all copies of the script!
 * Version 3.0
 */

/*
 * ID:
 */

# EXTENSIONS
if($GLOBALS["gLmbExt"]["ext_gtab.inc"]){
	foreach ($GLOBALS["gLmbExt"]["ext_gtab.inc"] as $key => $extfile){
		require_once($extfile);
	}
}

/*------- Style ---------*/
function set_style($textstyle){
	/* --- Styletypen --------------------------------------------- */
	$styletyp = explode(";", "font-family:;font-style:;font-variant:;font-size:;font-weight:;word-spacing:;letter-spacing:;text-decoration:;text-transform:;color:;text-shadow:;line-height:;text-align:;border:;border-style:;border-color:;border-width:;border-left:;border-right:;border-top:;border-bottom:;background-color:;padding:;vertical-align:;overflow:;opacity:;display:;border-radius:");
	$bzm1 = 0;
	while($styletyp[$bzm1]){
		if(($textstyle[$bzm1] OR $textstyle[$bzm1] == '0') AND $textstyle[$bzm1] != " "){
			$stylevalue .= $styletyp[$bzm1].$textstyle[$bzm1].";";
		}
		$bzm1++;
	}
	return $stylevalue;
}

function updateHistoryFields($history_fields,$gtabid,$PID,$NID){

	if($history_fields){
		global $gfield;
		global $gtab;

		$history_fields = explode(";",$history_fields);
		$history_fields = array_unique($history_fields);

		foreach($history_fields as $key => $value){
			$history = explode(",",$value);
			if($gtab["versioning"][$history[0]] AND $history[2] == $PID){
				$history[2] = $NID;
				$GLOBALS[$gfield[$history[0]]["form_name"][$history[1]]."_".$NID] = $GLOBALS[$gfield[$history[0]]["form_name"][$history[1]]."_".$PID];
				$history_fields[$key] = implode(",",$history);
			}
		}
		return implode(";",$history_fields);
	}
	return false;
}

/**
 * alias to set_verknpf
 *
 * @param unknown_type $verkn_tabid
 * @param unknown_type $verkn_fieldid
 * @param unknown_type $verkn_ID
 * @param unknown_type $verkn_add_ID
 * @param unknown_type $verkn_del_ID
 * @param unknown_type $verkn_showonly
 */
function init_relation($verkn_tabid,$verkn_fieldid,$verkn_ID,$verkn_add_ID=null,$verkn_del_ID=null,$verkn_showonly=null,$linkParam=null,$verknpf=1){
	return set_verknpf($verkn_tabid,$verkn_fieldid,$verkn_ID,$verkn_add_ID,$verkn_del_ID,$verkn_showonly,$verknpf,$linkParam);
}


/**
 * Verknpf-Zusatz
 *
 * @param integer $verkn_tabid
 * @param integer $verkn_fieldid
 * @param integer $verkn_ID
 * @param unknown_type $verkn_add_ID
 * @param unknown_type $verkn_del_ID
 * @param unknown_type $verkn_showonly
 * @param unknown_type $verknpf
 * @return unknown
 */
function set_verknpf($verkn_tabid,$verkn_fieldid,$verkn_ID,$verkn_add_ID=null,$verkn_del_ID=null,$verkn_showonly=null,$verknpf=null,$linkParam=null){
	global $gtab;
	global $gfield;

	if(!$verkn_tabid OR !$verkn_fieldid){
		return false;
		lmb_alert('parameter error!\\nNo ID found in realation table');
		#if($GLOBALS["db"]){odbc_close($GLOBALS["db"]);}
		#die("<Script language=\"JavaScript\">alert('parameter error!\\nNo ID found in realation table');</Script>");
	}
	$verkn["md5tab"] = $gfield[$verkn_tabid]["md5tab"][$verkn_fieldid];
	$verkn["vtabid"] = $gfield[$verkn_tabid]["verkntabid"][$verkn_fieldid];
	$verkn["vfieldid"] = $gfield[$verkn_tabid]["verknfieldid"][$verkn_fieldid];
	$verkn["tab"] = $gtab["table"][$verkn_tabid];
	$verkn["field"] = $gfield[$verkn_tabid]["field_name"][$verkn_fieldid];
	$verkn["fieldview"] = $gfield[$verkn_tabid]["verknview"][$verkn_fieldid];
	$verkn["typ"] = $gfield[$verkn_tabid]["data_type"][$verkn_fieldid];
	$verkn["unique"] = $gfield[$verkn_tabid]["unique"][$verkn_fieldid];
	$verkn["artleiste"] = $gfield[$verkn_tabid]["artleiste"][$verkn_fieldid];
	$verkn["relext"] = $gfield[$verkn_tabid]["relext"][$verkn_fieldid];
	$verkn["tabid"] = $verkn_tabid;
	$verkn["fieldid"] = $verkn_fieldid;
	$verkn["id"] = $verkn_ID;
	$verkn["add_id"] = $verkn_add_ID;
	$verkn["del_id"] = $verkn_del_ID;
	$verkn["showonly"] = $verkn_showonly;
	$verkn["verknpf"] = $verknpf;
	$verkn["linkParam"] = $linkParam;
	
	return $verkn;
}


# --- Verknüpfungs Pool -------------------------
function setVerknPool($gtabid,$verkn){
	global $umgvar;
	global $session;
	global $gtab;

	$verknpool[$gtabid] = $verkn;
	return $verknpool;
}


/**
 * Scrolling to Dataset
 *
 * @param unknown_type $scrollto
 * @param unknown_type $gtabid
 * @param unknown_type $ID
 * @param unknown_type $gsr
 * @param unknown_type $filter
 * @param unknown_type $verkn
 * @param unknown_type $pointer
 * @return unknown
 */
function scroll_to($scrollto,$gtabid,$ID,&$gsr,$filter,$verkn,$pointer=null){
	global $db;
	global $gtab;
	global $lang;
	global $gfrist;
	global $umgvar;
	
	# get all datasets if versioned
	if($gtab["viewver"][$gtabid]){$filter["viewversion"][$gtabid] = 1;}
	
	# get sql resultset
	if($gtab["typ"][$gtabid] == 5){$onlyfield = "";}else{$onlyfield = "ID";}
	$sqlquery = get_sqlquery($gtabid,1,$filter,$gsr,$verkn,$onlyfield);
	$rs = odbc_exec($db,$sqlquery["sql"]) or errorhandle(odbc_errormsg($db),$sqlquery["sql"],$GLOBALS['action'],__FILE__,__LINE__);
	
	# return pointer from result
	if($pointer){
		if($scrollto == "next"){
			return $pointer+1;
		}elseif($scrollto == "prev"){
			return $pointer-1;
		}elseif($scrollto == "start"){
			return 1;
		}elseif($scrollto == "end"){
			return lmb_num_rows($rs,$sqlquery["count"],$gtab["numrowcalc"][$gtabid]);
		}
	
	# get pointer of ID
	}else{
		$pointer = 1;
		if($scrollto == "next" OR $scrollto == "prev"){
			while(odbc_fetch_row($rs,$pointer) AND odbc_result($rs, "ID") != $ID){
				$pointer++;
			}
		}
	}

	if($scrollto == "next"){
		if(odbc_fetch_row($rs,$pointer+1)){
			return odbc_result($rs, "ID");
		}else{
			lmb_alert($lang[2062]);
			$scrollto = "end";
		}
	}elseif($scrollto == "prev"){
		if(odbc_fetch_row($rs,$pointer-1)){
			return odbc_result($rs, "ID");
		}else{
			lmb_alert($lang[2061]);
			$scrollto = "start";
		}
	}elseif(is_numeric($scrollto)){
		return $scrollto;
	}
	
	if($scrollto == "start"){
		if(odbc_fetch_row($rs,1)){
			return odbc_result($rs, "ID");
		}
	}
	
	if($scrollto == "end"){
		$pointer = lmb_num_rows($rs,$sqlquery["count"],$gtab["numrowcalc"][$gtabid]);
		if(!$pointer){
			$sqlquery1 = get_sqlquery($gtabid,1,$filter,$gsr,$verkn,$onlyfield);
			$rs1 = odbc_exec($db,$sqlquery["count"]) or errorhandle(odbc_errormsg($db),$sqlquery["count"],$GLOBALS['action'],__FILE__,__LINE__);
			$pointer = odbc_result($rs1, "RESULT");
		}
		
		if(odbc_fetch_row($rs,$pointer)){
			return odbc_result($rs, "ID");
		}
	}
	
	return false;

}


/**
 * trigger handling
 *
 * @param string $typ INSERT; DELETE; UPDATE
 * @param number $gtabid
 * @param number $fieldid
 * @param array() $trigger 
 * @param number $ID
 * @param mixed $change_value
 * @param mixed $triggerResult
 */
function execute_trigger($typ,$position,$gtabid,$fieldid,$trigger,$ID,$new_value=null,$old_value=null,$triggerResult=null){
	global $db;
	global $umgvar;
	global $session;
	global $gtab;
	global $gfield;
	global $gtrigger;
	$out = null;
	
	if($GLOBALS["lmb_trigger_off"][$gtabid] OR !is_array($gtrigger[$gtabid]["id"]) OR !$trigger){return true;}
	if(is_numeric($trigger)){$trigger = array($trigger);}
	
	foreach ($trigger as $key => $value){
		if($triverval = $gtrigger[$gtabid]["value"][$value] AND $gtrigger[$gtabid]["type"][$value] == $typ AND $gtrigger[$gtabid]["position"][$value] == $position){
			 eval("\$out[] = ".ltrim($triverval,";").";");
		}
	}
	
	if($out[0] === false){return false;}
	return $out;
}

/**
 * execute rules
 *
 * @param unknown_type $ID
 * @param unknown_type $gtabid
 * @param unknown_type $fieldid
 * @param unknown_type $gresult
 * @param unknown_type $rule
 * @return unknown
 */
function check_GtabRules($ID,$gtabid,$fieldid,$rule,$key=null,$gresult=null,$typ=null){

	if($noedit = eval(trim($rule).";")){
		return true;
	}
	return false;
}



# --- Pool Verknüpfung -------------------------
function p_verknpf($gtabid,$verkn){
	global $db;
	global $gfield;

	$sqlquery = "SELECT VERKN_ID FROM ".$verkn["md5tab"]." WHERE ID = ".$verkn["id"];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

	if(odbc_fetch_row($rs, 1)){
		$ID = odbc_result($rs, "VERKN_ID");
	}

	return $ID;
}

# --- Rückwertige Verknüpfung -------------------------
function r_verknpf($gtabid,$verkn){
	global $db;
	global $gfield;
	global $action;

	$sqlquery = "SELECT ID FROM ".$verkn["md5tab"]." WHERE VERKN_ID = ".$verkn["id"];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if($rs){
		if(odbc_fetch_row($rs, 2)){
			$action = "gtab_erg";
			$gtabid = $verkn["tabid"];
		}elseif(odbc_fetch_row($rs, 1)){
			$ID = odbc_result($rs, "ID");
			$gtabid = $verkn["tabid"];
		}else{
			$action = "gtab_erg";
			$gtabid = $verkn["tabid"];
		}
	}
	return $ID;
}


# --- Verknüpfung auf Endlosschleife prüfen (bei Selbstverknüpfungen) --------------------------
function check_joins($verkn,$verkn_add_id){
	global $db;
	global $gtab;
	global $session;
	global $gfield;

	# keine Selbstverknüpfung
	if(!$gfield[$verkn["tabid"]]["sverkn"][$verkn["fieldid"]]){return true;}

	# falls Verknüpfung gleich
	if($verkn["id"] == $verkn_add_id){return false;}

	$sqlquery = "SELECT ID FROM ".$verkn["md5tab"]." WHERE VERKN_ID = ".$verkn["id"];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}else{
		$bzm=1;
		while(odbc_fetch_row($rs,$bzm)){
			if(odbc_result($rs,"ID") == $verkn_add_id){return false;}
				$verkn["id"] = odbc_result($rs,"ID");
				if(!check_joins($verkn,$verkn_add_id)){return false;}
			$bzm++;
		}
	}
	return true;
}


/**
 * alias to set_joins
 *
 * @param unknown_type $gtabid
 * @param unknown_type $verkn
 * @return unknown
 */
function set_relation($verkn){
	return set_joins($verkn["tabid"],$verkn);
}

# --- Verknüpfungen bearbeiten --------------------------
function set_joins($gtabid,$verkn){
	global $db;
	global $session;
	global $LINK;
	global $gtab;
	global $gfield;
	global $lang;
	static $lmb_vknsort;
	$vsum = 0;
	
	if(!is_numeric($verkn["id"])){lmb_alert("ID is no number");return false;}

	/* --- Transaktion START --------------------------------------- */
	lmb_StartTransaction();
	
	# recursive view relation tab (for postgres)
	if($gfield[$verkn["tabid"]]["verkntabletype"][$verkn["fieldid"]] == 2){
		$ID_FIELD = "VERKN_ID";
		$VKN_FIELD = "ID";
		$VKN_TABLE = $gfield[$gfield[$verkn["tabid"]]["verkntabid"][$verkn["fieldid"]]]["md5tab"][$gfield[$verkn["tabid"]]["hasrecverkn"][$verkn["fieldid"]]];
	# default relation tab
	}else{
		$ID_FIELD = "ID";
		$VKN_FIELD = "VERKN_ID";
		$VKN_TABLE = $verkn["md5tab"];
	}

	$rgtabid = $gfield[$verkn["tabid"]]["verkntabid"][$verkn["fieldid"]];
	$rgtab = $gtab["table"][$rgtabid];
	$ID = $verkn["id"];
	
	# ----------- Edit Permission -----------
	if(!$gtab["edit"][$verkn["tabid"]] OR !$gfield[$verkn["tabid"]]["perm_edit"][$verkn["fieldid"]]){
		lmb_alert($lang[114]." (edit permission)");
		return false;
	}
	
	# ----------- Edit Permission from Table-Rule -----------
	if($gtab["editrule"][$verkn["tabid"]]){
		#$rownr = $verkn["id"];
		if(check_GtabRules($verkn["id"],$verkn["tabid"],null,$gtab["editrule"][$verkn["tabid"]])){
			lmb_alert($lang[114]." (edit:tablerule ".$gtab['desc'][$verkn["tabid"]].")");
			return false;
		}
	}
	# --- Edit Permission from Dataset-Rule --------------------------------------
	if($gtab["has_userrules"][$verkn["tabid"]] AND !$gtab["edit_userrules"][$verkn["tabid"]]){
		if(!check_GtabUserRules($verkn["tabid"],$verkn["id"],$session["user_id"],"edit")){
			lmb_alert($lang[114]." (edit:datasetrule ".$gtab['desc'][$verkn["tabid"]].")");
			return false;
		}
	}
	# ----------- Edit Permission from Field-Rule -----------
	if($gfield[$verkn["tabid"]]["editrule"][$verkn["fieldid"]]){
		if(check_GtabRules($verkn["id"],$verkn["tabid"],$verkn["fieldid"],$gfield[$verkn["tabid"]]["editrule"][$verkn["fieldid"]])){
			lmb_alert($lang[114]." (edit:fieldrule ".$gtab['desc'][$verkn["tabid"]]." - ".$gfield[$verkn["fieldid"]]['spelling'][$verkn["fieldid"]].")");
			return false;
		}
	}
	
	# --- Verknüpfungen löschen --------------------------
	if($verkn["del_id"] AND $LINK[158]){
		if(is_array($verkn["del_id"])){
			$verkn_del_id = $verkn["del_id"];
		}else{
			$verkn_del_id = explode(",",$verkn["del_id"]);
		}
		foreach($verkn_del_id as $key => $value){
			if($value){
				
				# delete all relations
				if($value == 'unlinkall'){
					$dverkn = set_verknpf($verkn["tabid"],$verkn["fieldid"],$verkn["id"],0,0,1,1);
					$dgresult = get_gresult($verkn["vtabid"],1,null,null,$dverkn,'ID');
					if($dgresult[$verkn["vtabid"]]['id']){
						$dverkn = set_verknpf($verkn["tabid"],$verkn["fieldid"],$verkn["id"],0,$dgresult[$verkn["vtabid"]]['id']);
						set_joins($verkn["tabid"],$dverkn);
					}
					continue;
				}
			
				# delete single relation
				if(!is_numeric($value)){lmb_alert("VERKN_ID is no number");break;}

				# trigger before update field
				if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
					if(execute_trigger("UPDATE","BEFORE",$verkn["tabid"],$verkn["fieldid"],$gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]],$verkn["id"],$value,'delete') === false){return false;}
				}
				$sqlquery = "DELETE FROM ".$VKN_TABLE." WHERE ".$ID_FIELD." = ".$verkn["id"]." AND ".$VKN_FIELD." = ".$value;
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

				# translate id in fieldvalue
				$vtabid = $gfield[$verkn["tabid"]]["verkntabid"][$verkn["fieldid"]];
				if($gfield[$vtabid]["mainfield"]){
					$sqlquery1 = "SELECT ".$gfield[$vtabid]["field_name"][$gfield[$vtabid]["mainfield"]]." FROM ".$gtab["table"][$vtabid]." WHERE ID = ".$value;
					$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
					$val = "(ID:".$value.") ".odbc_result($rs1,$gfield[$vtabid]["field_name"][$gfield[$vtabid]["mainfield"]]);
				}else{
					$val = $value;
				}
				if(!$rs) {$commit = 1;}else{
					# no db-trigger handling - manual count update
					if(!LMB_DBFUNC_PROCEDUREHANDLE AND $gfield[$verkn["tabid"]]["hasrecverkn"][$verkn["fieldid"]]){
						$sqlquery3 = "UPDATE ".$rgtab." SET ".$gfield[$rgtabid]["field_name"][$gfield[$verkn["tabid"]]["hasrecverkn"][$verkn["fieldid"]]]." = (SELECT COUNT(*) FROM ".$verkn["md5tab"]." WHERE VERKN_ID = $value) WHERE ID = ".$value;
						$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
					}
					
					$vsum++;$hvalue[] = "<".$val;
					# trigger after update field
					if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
						if(execute_trigger("UPDATE","AFTER",$verkn["tabid"],$verkn["fieldid"],$gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]],$verkn["id"],$value,'delete') === false){return false;}
					}
					
				}
			}
		}
	}

	# --- Verknüpfungen hinzufügen -------------------------------
	if($verkn["add_id"] AND $LINK[157]){
		if(is_array($verkn["add_id"])){
			$verkn_add_id = $verkn["add_id"];
		}else{
			$verkn_add_id = explode(",",$verkn["add_id"]);
		}
		# --- Bei "single" Verknüpfung alte Werte löschen / nur letzten Wert eintragen  ------
		if($verkn["unique"]){
			
			# falls trigger vorhanden 'old_value' auslesen
			if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
				if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
					$sqlquery = "SELECT VERKN_ID FROM ".$VKN_TABLE." WHERE ".$ID_FIELD." = ".$verkn["id"];
					$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
					if(!$rs) {$commit = 1;}
					$old_value = odbc_result($rs,"VERKN_ID");
				}
			}
			
			# Verknüpfungen löschen
			$sqlquery = "DELETE FROM ".$VKN_TABLE." WHERE ".$ID_FIELD." = ".$verkn["id"];
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			if($verkn["unique"]){
				$tmp = $verkn_add_id[count($verkn_add_id)-1];
				$verkn_add_id = array();
				$verkn_add_id[] = $tmp;
			}
		}
		# --- Bei 1:n / n:m Verknüpfung  ------
		
		# Sortierungs ID
		if($lmb_vknsort[$VKN_TABLE][$verkn["id"]]){
              $nextsort = $lmb_vknsort[$VKN_TABLE][$verkn["id"]];
		}else{
		      $nextsort = next_db_id($VKN_TABLE,"SORT",null,"ID=".$verkn["id"]);
		}
		
		# $nextsort = $NEXTID; #  Alternative
		foreach($verkn_add_id as $key => $value){
			if($value){
				if(!is_numeric($value)){lmb_alert("VERKN_ID is no number");break;}

				# ------------------ Beziehung auf schon mal verknüpft prüfen -----------------------------
				$sqlquery = "SELECT KEYID FROM ".$verkn["md5tab"]." WHERE ID = ".$verkn["id"]." AND VERKN_ID = ".$value;
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
				$keyid = odbc_result($rs,"KEYID");
				
				# ------------------ 1:n Beziehung auf vorhandensein prüfen -----------------------------
				if($verkn["typ"] == 27){
					$sqlquery = "SELECT KEYID FROM ".$verkn["md5tab"]." WHERE VERKN_ID = ".$value;
					$rs2 = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
					if(!$rs2) {$commit = 1;}
					if(odbc_result($rs2,"KEYID")){
						lmb_alert($lang[1285]."(".$value.")");
						$commit = 1;
					}
				}

				# Eintrag unterdrücken
				# OR ($verkn[typ] == 24 AND !$verkn[unique])

				if(!$keyid AND !$commit){

					# --- Verknüpfung auf Endlosschleife prüfen (bei Selbstverknüpfungen) -----
					if(check_joins($verkn,$value)){

						# --- Verknüpfung eintragen -----
						$NEXTID = next_db_id($VKN_TABLE,"KEYID",1);
						$sql_i = array();
						$sql_v = array();

						# Zusatz Parameter
						if($verkn["linkParam"]){
							foreach ($verkn["linkParam"] as $key1 => $value1){
								$sql_i[] = $key1;$sql_v[] = $value1;
							}
						}
						
						if($sql_i[0]){$sql_i = ",".implode(",",$sql_i);$sql_v = ",".implode(",",$sql_v);}else{$sql_i = "";$sql_v = "";}
						$sqlquery2 = "INSERT INTO ".$VKN_TABLE." (KEYID,ERSTUSER,".$ID_FIELD.",".$VKN_FIELD.",SORT $sql_i) VALUES ($NEXTID,".$session["user_id"].",".$verkn["id"].",".$value.",$nextsort $sql_v)";
						
						# Sortierungs ID
						$nextsort++;
						
						# translate id in fieldvalue
						$vtabid = $gfield[$verkn["tabid"]]["verkntabid"][$verkn["fieldid"]];
						if($gfield[$vtabid]["mainfield"]){
							$sqlquery1 = "SELECT ".$gfield[$vtabid]["field_name"][$gfield[$vtabid]["mainfield"]]." FROM ".$gtab["table"][$vtabid]." WHERE ID = ".$value;
							$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
							$val = "(ID:".$value.") ".odbc_result($rs1,$gfield[$vtabid]["field_name"][$gfield[$vtabid]["mainfield"]]);
						}else{
							$val = $value;
						}
						$hvalue[] = "> ".$val;
						
						# trigger before update field
						if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
							if(execute_trigger("UPDATE","BEFORE",$verkn["tabid"],$verkn["fieldid"],$gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]],$verkn["id"],$value,$old_value) === false){return false;}
						}

						$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
						if(!$rs2) {$commit = 1;}else{
							
							# no db-trigger handling - manual count update
							if(!LMB_DBFUNC_PROCEDUREHANDLE AND $gfield[$verkn["tabid"]]["hasrecverkn"][$verkn["fieldid"]]){
								$sqlquery3 = "UPDATE ".$rgtab." SET ".$gfield[$rgtabid]["field_name"][$gfield[$verkn["tabid"]]["hasrecverkn"][$verkn["fieldid"]]]." = (SELECT COUNT(*) FROM ".$verkn["md5tab"]." WHERE VERKN_ID = $value) WHERE ID = ".$value;
								$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
							}
							
							$vsum++;
							# trigger after update field
							if($gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]]){
								if(execute_trigger("UPDATE","AFTER",$verkn["tabid"],$verkn["fieldid"],$gfield[$verkn["tabid"]]["trigger"][$verkn["fieldid"]],$verkn["id"],$value,$old_value) === false){return false;}
							}
						}
					}else{
						lmb_alert($lang[1861]);
						$commit = 1;
					}
				}
			}
		}
		
		$lmb_vknsort[$VKN_TABLE][$verkn["id"]] = $nextsort;
	}

	if($hvalue){
		
		# no db-trigger handling - manual count update
		if(!LMB_DBFUNC_PROCEDUREHANDLE){
			$sqlquery = "UPDATE ".$gtab["table"][$verkn["tabid"]]." SET ".$gfield[$verkn["tabid"]]["field_name"][$verkn["fieldid"]]." = (SELECT COUNT(*) FROM ".$verkn["md5tab"]." WHERE ID = ".$verkn["id"].") WHERE ID = ".$verkn["id"];
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
		}
		
		$hvalue = implode(";",$hvalue);
		# --- History-Eintrag (history_action) ---------
		$ACTION_ID = history_action($verkn["tabid"],$verkn["id"],3,1);
		# --- History-Eintrag (history_update) ---------
		if($ACTION_ID){
			$com = history_update($verkn["tabid"],$verkn["fieldid"],$verkn["id"],$ACTION_ID,$hvalue,0);
		}

	}


	/* --- Transaktion ENDE -------------------------------------- */
	if($commit){
		lmb_EndTransaction(0);
		return false;
	} else {
		lmb_EndTransaction(1);
		return $vsum;
	}

}


# update fieldvalue with count of relation
function updateRelationCount($table,$field,$md5tab,$id) {
	global $db;

	$sqlquery = "UPDATE $table SET $field = (SELECT COUNT(*) FROM $md5tab WHERE ID = $id) WHERE ID = $id";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	if(!$rs) {return false;}
	return true;
}

# update fieldvalue with count of multiselect
function updateMultiselectCount($gtabid,$field_id,$id) {
	global $db;
	global $gtab;
	global $gfield;

	# SELECT / ATTRIBUTE
	if($gfield[$gtabid]["field_type"][$field_id] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}

	#$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$field_id]." = (SELECT COUNT(*) FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $id) WHERE ID = $id";
	#$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	
	# ! ingres workaround!!!!!
	#$sqlquery = "SELECT COUNT(*) AS ROW_COUNT FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $id";
	#$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$field_id]." = (SELECT COUNT(*) FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $field_id AND DAT_ID = $id) WHERE ID = $id";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	
	if(!$rs) {return false;}
	return true;
}


#------------------- Ansicht speichern --------------------------------
function save_viewSettings($vuniqueid,$gtabid=null){
	global $db;
	global $filter;
	global $session;

	$sqlquery = "SELECT UGTAB FROM LMB_USERDB WHERE USER_ID = ".$session["user_id"];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$ugtab = unserialize(odbc_result($rs, "UGTAB"));

	# default forms / tabulators
	if($gtabid){
		if($filter["groupheader"][$gtabid]){$ugtab["filter"]["groupheader"][$gtabid] = $filter["groupheader"][$gtabid];}
		if($filter["groupheaderKey"][$gtabid]){$ugtab["filter"]["groupheaderKey"][$gtabid] = $filter["groupheaderKey"][$gtabid];}
		if($filter["tabulatorKey"][$gtabid]){$ugtab["filter"]["tabulatorKey"][$gtabid] = $filter["tabulatorKey"][$gtabid];}
		if($filter["gwidth"][$gtabid]){$ugtab["filter"]["gwidth"][$gtabid] = $filter["gwidth"][$gtabid];}
	}
	
	# ext_RelationFields
	if(isset($filter["ext_RelationFields"][$vuniqueid])){$ugtab["filter"]["ext_RelationFields"][$vuniqueid] = $filter["ext_RelationFields"][$vuniqueid];}
	if(isset($filter["ext_RelationFields"]["edit"][$vuniqueid])){$ugtab["filter"]["ext_RelationFields"]["edit"][$vuniqueid] = $filter["ext_RelationFields"]["edit"][$vuniqueid];}
	if(isset($filter["ext_RelationFields"]["order"][$vuniqueid])){$ugtab["filter"]["ext_RelationFields"]["order"][$vuniqueid] = $filter["ext_RelationFields"]["order"][$vuniqueid];}
	if(isset($filter["ext_RelationFields"]["showall"][$vuniqueid])){$ugtab["filter"]["ext_RelationFields"]["showall"][$vuniqueid] = $filter["ext_RelationFields"]["showall"][$vuniqueid];}
	if(isset($filter["ext_RelationFields"]["search"][$vuniqueid])){$ugtab["filter"]["ext_RelationFields"]["search"][$vuniqueid] = $filter["ext_RelationFields"]["search"][$vuniqueid];}

	if($ugtab){
		$nugtab = parse_db_string(serialize($ugtab));
	}

	$prepare_string = "UPDATE LMB_USERDB SET UGTAB = ? WHERE USER_ID = ".$session["user_id"];
	lmb_PrepareSQL($prepare_string,array(parse_db_blob($nugtab)),__FILE__,__LINE__);
}

#------------------- Ansicht zurücksetzen --------------------------------
function reset_viewSettings($gtabid,$gformid){
	global $db;
	global $filter;
	global $session;

	$sqlquery = "SELECT UGTAB FROM LMB_USERDB WHERE USER_ID = ".$session["user_id"];
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$ugtab = unserialize(odbc_result($rs, "UGTAB"));

	unset($filter["groupheader"][$gtabid]);
	unset($filter["groupheaderKey"][$gtabid]);
	unset($filter["tabulatorKey"]);
	unset($filter["gwidth"][$gtabid]);
	foreach ($filter["ext_RelationFields"] as $key => $value){
		$gtabid_ = $gtabid;
		$vuid = explode("_",$key);
		if($vuid[1] == '0'){$gtabid_ = 0;} # for simple non relation table
		if($vuid[1] == $gtabid_ AND $vuid[3] == $gformid){
			unset($filter["ext_RelationFields"][$key]);
			unset($filter["ext_RelationFields"]["edit"][$key]);
			unset($filter["ext_RelationFields"]["order"][$key]);
			unset($filter["ext_RelationFields"]["showall"][$key]);
			unset($filter["ext_RelationFields"]["search"][$key]);
			unset($filter["ext_RelationFields"]["searchval"][$key]);
			if($ugtab["filter"]["ext_RelationFields"][$key]){unset($ugtab["filter"]["ext_RelationFields"][$key]);}
			if($ugtab["filter"]["ext_RelationFields"]["edit"][$key]){unset($ugtab["filter"]["ext_RelationFields"]["edit"][$key]);}
			if($ugtab["filter"]["ext_RelationFields"]["order"][$key]){unset($ugtab["filter"]["ext_RelationFields"]["order"][$key]);}
			if($ugtab["filter"]["ext_RelationFields"]["showall"][$key]){unset($ugtab["filter"]["ext_RelationFields"]["showall"][$key]);}
		}
	}


	if($ugtab){
		$nugtab = parse_db_string(serialize($ugtab));
	}

	$prepare_string = "UPDATE LMB_USERDB SET UGTAB = ? WHERE USER_ID = ".$session["user_id"];
	lmb_PrepareSQL($prepare_string,array(parse_db_blob($nugtab)),__FILE__,__LINE__);
}


/**
 * sub-relations for gresult
 *
 * @param unknown_type $vgtabid
 * @param unknown_type $vfieldid
 * @param unknown_type $ext
 * @return unknown
 */
function sql_14_sub($vgtabid,$vfieldid,$ext=array(),&$linklevel=array()) {
	static $cnt;
	global $gfield;
	global $gtab;
	
	$sverkntabid = $gfield[$vgtabid]["verkntabid"][$vfieldid];
	$sverknfieldid = $gfield[$vgtabid]["verknfieldid"][$vfieldid];
	
	$linklevel["tabid"] = $sverkntabid;
	$linklevel["fieldid"] = $sverknfieldid;
	$linklevel["vtabid"] = $vgtabid;
	$linklevel["vfieldid"] = $vfieldid;

	$ext["from"][] = lmb_strtoupper($gtab["table"][$sverkntabid]);
	$ext["from"][] = lmb_strtoupper($gfield[$vgtabid]["md5tab"][$vfieldid]);
	
	# Prüfe auf Selbstverknüpung
	if($vgtabid != $sverkntabid){
		$ext["where"][] = $gtab["table"][$vgtabid].".ID = ".$gfield[$vgtabid]["md5tab"][$vfieldid].".ID";
	}
	$ext["where"][] = $gfield[$vgtabid]["md5tab"][$vfieldid].".VERKN_ID = ".$gtab["table"][$sverkntabid].".ID";
	
	# --- Falls Feld selbst Verknüpfungsfeld ---
	if($gfield[$sverkntabid]["field_type"][$sverknfieldid] == 11 AND $vgtabid != $sverkntabid AND !$linklevel["norecursiv"]){
		$ext = sql_14_sub($sverkntabid,$sverknfieldid,$ext,$linklevel);
	}
		
	if(!empty($ext["from"])){
		$extension["from"] = $ext["from"];
		$extension["where"] = $ext["where"];
		
		#$extension["where"][0] = implode(" AND ",$ext["where"]);
	}
	
	
	#error_log(print_r($extension,1));
	
	return $extension;
	
}


/**
 * show relations and sub-relations
 *
 * @param unknown_type $vgtabid
 * @param unknown_type $verkn
 * @param unknown_type $linklevel
 * @param unknown_type $order
 * @param unknown_type $gsr
 * @param unknown_type $onlyfield
 * @return unknown
 */
function sql_14_c(&$vgtabid,$verkn,&$linklevel=array(),$gformid=null,$order=null,$gsr=null,$onlyfield=null) {
	global $gtab;
	global $gfield;
	global $filter;
	
	# sql_14_sub ändert linklevel auf letzte Unter-Unterverknüpfung
	$extension = sql_14_sub($verkn["tabid"],$verkn["fieldid"],null,$linklevel);
	$extension["from"][] = lmb_strtoupper($verkn["tab"]);

	# ändere Suchtabelle bei Unter-Unterferknüpfung
	if($linklevel["vtabid"] != $verkn["tabid"]){
		$gsr[$linklevel["tabid"]] = $gsr[$gfield[$verkn["tabid"]]["verkntabid"][$verkn["fieldid"]]];
		$linklevel["is_subrelation"] = 1;
	}
	
	# Prüfe auf Selbstverknüpfung
	if($verkn["tab"] != $gtab["table"][$vgtabid]){
		$extension["where"][] = $verkn["tab"].".ID = ".$verkn["id"];
	}else{
		$extension["where"][] = $gfield[$verkn["tabid"]]["md5tab"][$verkn["fieldid"]].".ID = ".$verkn["id"];
	}
	
	#$extension["where"][] = $verkn["tab"].".ID = ".$gfield[$verkn["tabid"]]["md5tab"][$verkn["fieldid"]].".ID";
	#$extension["where"][] = $gfield[$verkn["tabid"]]["md5tab"][$verkn["fieldid"]].".VERKN_ID = ".$gtab["table"][$vgtabid].".ID";
	
	$vgtabid = $linklevel["tabid"];
	
	#$extension["where"] = array_unique($extension["where"]);
	#$extension["from"] = array_unique($extension["from"]);
	
	$vuniqueid = $gfield[$verkn["tabid"]]["form_name"][$verkn["fieldid"]]."_".$gformid;

	if($order == "reset"){$order = null;$filter["ext_RelationFields"]["order"][$vuniqueid] = null;}

	####################
	$vgtabid_ = $vgtabid;
	if($gfield[$verkn['tabid']]["verknparams"][$verkn['fieldid']] AND $order > 1000){
		$vgtabid_ = $gfield[$verkn['tabid']]["verknparams"][$verkn['fieldid']];
	}
	#####################
	
	if(!$order AND !$filter["ext_RelationFields"]["order"][$vuniqueid]){
		$extension["order"][] = $verkn["md5tab"].".SORT";
		$extension["select"][] = $verkn["md5tab"].".SORT";
	}elseif(!$order){
		$vfilter["order"][$vgtabid] = $filter["ext_RelationFields"]["order"][$vuniqueid];
	}elseif("ASC" == $filter["ext_RelationFields"]["order"][$vuniqueid][0][2]){
		$vfilter["order"][$vgtabid][0] = array($vgtabid_,$order,"DESC");
		$filter["ext_RelationFields"]["order"][$vuniqueid] = $vfilter["order"][$vgtabid];
		save_viewSettings($vuniqueid);
	}else{
		$vfilter["order"][$vgtabid][0] = array($vgtabid_,$order,"ASC");
		$filter["ext_RelationFields"]["order"][$vuniqueid] = $vfilter["order"][$vgtabid];
		save_viewSettings($vuniqueid);
	}

	if($filter["ext_RelationFields"]["getlongval"][$vuniqueid]){
		$vfilter["getlongval"][$vgtabid] = 1;
	}
	
	# notwendig für Versionierung da eine Verknüpfung alle verknüpften Datensätze anzeigen muß nicht nur die Aktuellen
	# nutze $utyp = 2 um Versionierungs-Sortierung zu umgehen
	if($gtab["versioning"][$vgtabid] AND $gtab["viewver"][$vgtabid]){
		$vfilter["viewversion"][$vgtabid] = 1;
	}
	
	# GLOBAL shown fields if not defined
	if(!$filter["ext_RelationFields"][$vuniqueid]){
		if($gfield[$linklevel["vtabid"]]["verknview"][$linklevel["vfieldid"]]){
			$filter["ext_RelationFields"][$vuniqueid] = $gfield[$linklevel["vtabid"]]["verknview"][$linklevel["vfieldid"]];
		}else{
			$filter["ext_RelationFields"][$vuniqueid] = array($linklevel["vfieldid"]);
		}
	}
	
	# used fields in select
	if(!$onlyfield){
		foreach ($filter["ext_RelationFields"][$vuniqueid] as $key => $value){
			$vgtabid_ = $linklevel["tabid"];
			
			####################
			$vgtabid_ = $vgtabid;
			if($gfield[$verkn['tabid']]["verknparams"][$verkn['fieldid']] AND $value > 1000){
				$vgtabid_ = $gfield[$verkn['tabid']]["verknparams"][$verkn['fieldid']];
				$verkn_['verknparams'] = 1;
			}
			#####################

			$onlyfield[$vgtabid_][] = $value;
		}
	}
	
	# default show all
	$vfilter["anzahl"][$vgtabid] = "all";
	
	# show all
	if($filter["ext_RelationFields"]["showall"][$vuniqueid]){
	   $vfilter["anzahl"][$vgtabid] = "all";
	# show count
	}elseif($filter["ext_RelationFields"]["count"][$vuniqueid]){
       $vfilter["anzahl"][$vgtabid] = $filter["ext_RelationFields"]["count"][$vuniqueid];
	# show 1000
	}elseif($GLOBALS['action'] == 'gtab_change'){
	   $vfilter["anzahl"][$vgtabid] = 1000;
	}
	
	$gresult = get_gresult($vgtabid,2,$vfilter,$gsr,$verkn_,$onlyfield,null,$extension);

	return $gresult;
	

	/*
	# show only not deleted
	if($hide_del){
		$squery["swhere"][] = $verkn["tab"].".DEL = ".LMB_DBDEF_FALSE;
	}
	# show only active version
	if($gtab["versioning"][$verkn["tabid"]] AND $hide_version){
		$squery["swhere"][] = $verkn["tab"].".VACT = ".LMB_DBDEF_TRUE;
	}
	*/

}


/**
 * Spezifische Datensatz Rechte prüfen
 *
 * @param number $gtabid
 * @param number $datid
 * @param number $userid
 * @param string $rule (edit, del)
 * @return boolean
 */
function check_GtabUserRules($gtabid,$datid,$userid,$rule) {
	global $db;
	global $userdat;

	if($rule == "edit"){
		$sqlrule = " AND EDIT = ".LMB_DBDEF_TRUE;
	}

	if($rule == "del"){
		$sqlrule .= " AND DEL = ".LMB_DBDEF_TRUE;
	}

	$sqlquery = "SELECT KEYID FROM LMB_RULES_DATASET WHERE TABID = $gtabid AND DATID = $datid $sqlrule AND (USERID = $userid OR GROUPID IN(".$userdat["subgroup"][$userid]."))";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(odbc_fetch_row($rs,1)){return true;}else{return false;}
}

# --- Spezifische Datensatz Rechte hinzufügen / löschen ----
/**
 * edit rules for datasets
 *
 * @param numeric $gtabid
 * @param array $recordlist
 * @param array $userpart
 * [0] = user/group ID; 
 * [1] = u [user] (for user) || g [group] (for group)
 * [2] = v [add] (rule add) || r [remove] (rule remove) || e [edit] (rule to edit) || d [delete] (rule to delete)
 * [3] = edit / del = true / false
 * [4] [subgroups] true (add upper subgroups) || false
 * [5] [subgroups] true (add lower subgroups) || false
 * @param bool $newdataset true for new dataset
 * @return true/false
 */
function add_GtabUserRules($gtabid,$recordlist,$userpart,$newdataset=0) {
	global $session;
	global $gtab;
	global $db;
	global $lang;
	global $userdat;
	
	# table has no rules
	if(!$gtab["has_userrules"][$gtabid] OR !is_array($recordlist)){return true;}

	foreach ($recordlist as $key => $value){
		if(is_numeric($value)){
			$records[] = $value;
			$recordstab[] = $gtabid;
		}else{
			$val = explode("_",$value);
			$records[] = $val[0];
			$recordstab[] = $val[1];
		}
	}
	
	# if subedit_userrules only add grouppermission else add userpermission
	if($newdataset AND $gtab["subedit_userrules"][$gtabid]){
		if($userpart[0]){$userpart[0] = $userdat["groupid"][$userpart[0]];}
		$userpart[1] = "g";
	}

    # list of records
	if(!$records){return true;}
	foreach ($records as $datakey => $d_datid){

        # check plausibility
        if(!is_numeric($recordstab[$datakey]) OR !is_numeric($d_datid) OR $recordstab[$datakey] != $gtabid){continue;}

        # check dataset
		$sqlquery = "SELECT ID,ERSTUSER FROM ".$gtab["table"][$recordstab[$datakey]]." WHERE ID = ".$d_datid;
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
		if(!odbc_result($rs,"ID")){continue;}
		$d_datidlist[] = $d_datid;
		$d_erstuser = odbc_result($rs,"ERSTUSER");

		# list of 1:1 Tables
		$raverkn = $gtab["raverkn"][$gtab["verkn"][$recordstab[$datakey]]];
		#krsort($raverkn);
		foreach ($raverkn as $key => $d_tabid){
			# check if table has userrights
			if($gtab["has_userrules"][$d_tabid]){
				# action parameter
				if(is_array($userpart)){
					if($userpart[1] == "u"){
						$userid = $userpart[0];
						$groupid = 0;
						$sgroupid = $userdat["groupid"][$userid];
						$presel = " AND USERID = ".parse_db_int($userid,5);
					}elseif($userpart[1] == "g"){
						$userid = 0;
						$groupid = $userpart[0];
						$sgroupid = $userpart[0];
						$presel = " AND GROUPID = ".parse_db_int($groupid,5);
					}
					
					# ------ modify subgroups ------
					if($userpart[4] OR $userpart[5]){
						# permission
						if(!($gtab["edit_userrules"][$gtabid] OR ($gtab["edit_ownuserrules"][$gtabid] AND $d_erstuser == $session["user_id"]) OR $newdataset)){continue;}
						if($newdataset AND $sgroupid != $session["group_id"] AND $sgroupid){continue;}

						# try to merge grouprules
						$subgrouplist = array();
						$subgrouplist_ = array();

						# get subgroups left or right or both from position
						if($gtab["subedit_userrules"][$gtabid] AND $sgroupid){
							if($userpart[4] == 1){$subgrouplist = lmbUserGroupTree($sgroupid,0);}
							if($userpart[5] == 1){$subgrouplist = array_unique(array_merge($subgrouplist,lmbUserGroupTree($sgroupid,1)));}
						}
						if($newdataset){
							if($gtab["specific_userrules"][$gtabid]){$subgrouplist = array_unique(array_merge($subgrouplist,$gtab["specific_userrules"][$gtabid]));}
						}

						# try to merge rules
						foreach ($subgrouplist as $gkey => $gval){
							if(is_numeric($gval)){
								$ed = LMB_DBDEF_TRUE;
								$del = LMB_DBDEF_TRUE;
								$gval_ = $gval;
								# extended parameters / v = view; e = edit ; d = delete;
							}else{
								$ed = LMB_DBDEF_FALSE;$del = LMB_DBDEF_FALSE;$sp=1;
								if(lmb_strpos($gval,"e")){
									$ed = LMB_DBDEF_TRUE;
									$sp++;
								}
								if(lmb_strpos($gval,"d")){
									$del = LMB_DBDEF_TRUE;
									$sp++;
								}
								$gval_ = lmb_substr($gval,$sp,99);
							}

							if(is_numeric($gval_)){
								if(!$subgrouplist_["edit"][$gval_]){
									$subgrouplist_["edit"][$gval_] = $ed;
								}elseif($ed == LMB_DBDEF_TRUE){
									$subgrouplist_["edit"][$gval_] = $ed;
								}
								if(!$subgrouplist_["del"][$gval_]){
									$subgrouplist_["del"][$gval_] = $del;
								}elseif($del == LMB_DBDEF_TRUE){
									$subgrouplist_["del"][$gval_] = $del;
								}
							}
						}

						if($subgrouplist_["edit"]){
							# add
							if($userpart[2] == "v"){
								$NEXTID = next_db_id("LMB_RULES_DATASET","KEYID");
								foreach ($subgrouplist_["edit"] as $gkey_ => $gval_){
									$sqlquery = "SELECT KEYID FROM LMB_RULES_DATASET WHERE DATID = ".parse_db_int($d_datid,18)." AND TABID = ".parse_db_int($d_tabid,5)." AND GROUPID = ".parse_db_int($gkey_,5);
									$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
									if(!$rs) {$commit = 1;}
									if(!odbc_fetch_row($rs,1)){
										$sqlquery1 = "INSERT INTO LMB_RULES_DATASET (KEYID,EDITUSER,DATID,GROUPID,TABID,EDIT,DEL) VALUES($NEXTID,".$session["user_id"].",".parse_db_int($d_datid,18).",".parse_db_int($gkey_,5).",".parse_db_int($d_tabid,5).",".$subgrouplist_["edit"][$gkey_].",".$subgrouplist_["del"][$gkey_].")";
										$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
										$NEXTID++;
										if(!$rs1) {$commit = 1;}
									}
								}
								# drop
							}elseif ($userpart[2] == "r"){
								foreach ($subgrouplist_["edit"] as $gkey_ => $gval_){
									$sqlquery1 = "DELETE FROM LMB_RULES_DATASET WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18)." AND GROUPID = ".parse_db_int($gkey_,5);
									$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
									if(!$rs1) {$commit = 1;}
								}
								# delete
							}elseif ($userpart[2] == "d"){
								foreach ($subgrouplist_["edit"] as $gkey_ => $gval_){
									$sqlquery = "UPDATE LMB_RULES_DATASET SET DEL = ".parse_db_bool($userpart[3])." WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18)." AND GROUPID = ".parse_db_int($gkey_,5);
									$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
									if(!$rs) {$commit = 1;}
								}
								# edit
							}elseif ($userpart[2] == "e"){
								foreach ($subgrouplist_["edit"] as $gkey_ => $gval_){
									$sqlquery = "UPDATE LMB_RULES_DATASET SET EDIT = ".parse_db_bool($userpart[3])." WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18)." AND GROUPID = ".parse_db_int($gkey_,5);
									$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
									if(!$rs) {$commit = 1;}
								}
							}
						}
					}

					# check permission
					if($gtab["edit_userrules"][$gtabid] AND $sgroupid OR ($gtab["edit_ownuserrules"][$gtabid] AND $d_erstuser == $session["user_id"]) OR ($d_erstuser == $session["user_id"] AND $d_erstuser == $userid)){

						# add single user/group
						if($userpart[2] == "v"){
							# superuser should not add own rule
							if($gtab["edit_userrules"][$gtabid] AND $d_erstuser == $session["user_id"] AND $d_erstuser == $userid){continue;}
							$ed = LMB_DBDEF_TRUE;$del = LMB_DBDEF_TRUE;
							$NEXTID = next_db_id("LMB_RULES_DATASET","KEYID");
							$sqlquery = "SELECT KEYID FROM LMB_RULES_DATASET WHERE DATID = ".parse_db_int($d_datid,18)." AND TABID = ".parse_db_int($d_tabid,5).$presel;
							$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
							if(!$rs) {$commit = 1;}
							if(!odbc_fetch_row($rs,1)){
								$sqlquery1 = "INSERT INTO LMB_RULES_DATASET (KEYID,EDITUSER,DATID,USERID,GROUPID,TABID,EDIT,DEL) VALUES($NEXTID,".$session["user_id"].",".parse_db_int($d_datid,18).",".parse_db_int($userid,5).",".parse_db_int($groupid,5).",".parse_db_int($d_tabid,5).",$ed,$del)";
								$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
								if(!$rs1) {$commit = 1;}
							}
							# drop single user/group
						}elseif($userpart[2] == "r"){
							$sqlquery = "DELETE FROM LMB_RULES_DATASET WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18).$presel;
							$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
							if(!$rs) {$commit = 1;}

							# user right to edit
						}elseif($userpart[2] == "e"){
							$sqlquery = "UPDATE LMB_RULES_DATASET SET EDIT = ".parse_db_bool($userpart[3])." WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18).$presel;
							$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
							if(!$rs) {$commit = 1;}
							# user right to delete
						}elseif($userpart[2] == "d"){
							$sqlquery = "UPDATE LMB_RULES_DATASET SET DEL = ".parse_db_bool($userpart[3])." WHERE TABID = ".parse_db_int($d_tabid,5)." AND DATID = ".parse_db_int($d_datid,18).$presel;
							$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
							if(!$rs) {$commit = 1;}
						}

					}


				}
			}
		}
	}

	if(!$commit){return $d_datidlist;}else{return false;}
}



/* --- Gtab Lösch-Routine -------------------------------------------- */
$deletecount = 0;

# --- Datensatz incl. 1:1 Verknüpfte Datensätze löschen ------
function del_data($gtabid,$ID,$typ="delete",$forceDelnm=null){
	global $gtab;
	global $gfield;
	global $db;
	$null = null;
	
	# --- Grundrechte Prüfen --------------------------------------
	if(!$gtab["delete"][$gtabid] OR !$ID OR !$GLOBALS["LINK"][11]){
		lmb_alert($GLOBALS["lang"][114]." (drop permission)");
		return false;
	}
	
	# ----------- Edit Permission from Table-Rule -----------
	if($gtab["editrule"][$gtabid]){
		#$rownr = 0;
		if(check_GtabRules($ID,$gtabid,null,$gtab["editrule"][$gtabid],null,$null,'delete')){
			lmb_alert($GLOBALS["lang"][114]." (drop:tablerule)");
			return false;
		}
	}

	# --- Edit Permission from Dataset-Rule --------------------------------------
	if($gtab["has_userrules"][$gtabid] AND !$gtab["edit_userrules"][$gtabid]){
		if(!check_GtabUserRules($gtabid,$ID,$GLOBALS["session"]["user_id"],"del")){
			lmb_alert($GLOBALS["lang"][114]." (drop:datasetrule)");
			return false;
		}
	}
	
	# --- is old version / locked --------------------------------------
	if($forceDelnm[0] != "#all#"){
		$lck = lock_data_check($gtabid,$ID,$GLOBALS["session"]["user_id"]);
		if($lck["isversion"]){
			lmb_alert($GLOBALS["lang"][2650]);
			return false;
		}
		if($lck["islocked"]){
			lmb_alert($GLOBALS["lang"][2651]);
			return false;
		}
	}

	if($gtab["raverkn"][$gtab["verkn"][$gtabid]]){
		# list of 1:1 Tables
		$raverkn = $gtab["raverkn"][$gtab["verkn"][$gtabid]];
		krsort($raverkn);
		
		# falls versioniert
		if($gtab["versioning"][$gtabid]){
			#  VPID
			$sqlquery = "SELECT VPID FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$vpid = odbc_result($rs,"VPID");
			
			# liste aller versionierten Datensätze mit gleicher und älterer Version
			$sqlquery = "SELECT ID FROM ".$gtab["table"][$gtabid]." WHERE VPID = $vpid AND VID >= (SELECT VID FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID)";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {return false;}

			if(!odbc_fetch_row($rs, 1)){
				lmb_alert($GLOBALS["lang"][114]." (no versioned datasets found)");
				return false;
			}
			
			# neue aktive Version
			$sqlquery = "SELECT ID FROM ".$gtab["table"][$gtabid]." WHERE VPID = $vpid AND VID < (SELECT VID FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID) ORDER BY VID DESC";
			$rs2 = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			$newID = odbc_result($rs2,"ID");
		}
		foreach ($raverkn as $key => $value){
			
			# setze die Verknüpfung versionierter Datensätze auf die neue(alte) Version bevor die Verknüpfung gelöscht wird
			if($gtab["versioning"][$gtabid] == 1){

				# ändere vorhandene rückwertige Verknüpfungen zu aktueller Version 
				if($gfield[$gtabid]["r_verkntabid"] AND $newID){
					foreach($gfield[$gtabid]["r_verkntabid"] as $vkey => $vvalue){

						if($gfield[$vvalue]["verkntabletype"][$vkey] == 1){
							$sqlquery1 = "UPDATE ".$gfield[$vvalue]["md5tab"][$vkey]." SET VERKN_ID = $newID WHERE VERKN_ID = $ID AND NOT EXISTS (SELECT ID FROM ".$gfield[$vvalue]["md5tab"][$vkey]." WHERE VERKN_ID = $newID)";
							$rs1 = @odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
							//if(!$rs1) {$commit = 1;}
						}
					}
				}
				
				# lösche alle Versionen ab ID (recusiv)
				if($forceDelnm[0] == "#all#" && $GLOBALS['LINK'][276]){
					$bzm = 1;
					while(odbc_fetch_row($rs,$bzm)) {
						if(!del_record($value,odbc_result($rs,"ID"),$typ,$forceDelnm)){return false;}
						$bzm++;
					}
				# lösche nur die aktuelle Version
				}else{
					if(!del_record($value,$ID,$typ,$forceDelnm)){return false;}
				}
				
				# set new active version
				$sqlquery1 = "UPDATE ".$gtab["table"][$gtabid]." SET VACT = ".LMB_DBDEF_TRUE." WHERE VPID = $vpid AND VID = (SELECT M FROM (SELECT MAX(VID) AS M FROM ".$gtab["table"][$gtabid]." WHERE VPID = $vpid) AS S)";
				$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs1) {$commit = 1;}
				
			}else{
				if(!del_record($value,$ID,$typ,$forceDelnm)){return false;}
			}
		}
	}

	if($commit){return false;}else{return true;}
}

# --- Datensatz incl. 1:1 Verknüpfte Datensätze verstecken ------
function hide_data($gtabid,$ID,$typ="hide"){
	global $gtab;
	global $db;

	# --- Grundrechte Prüfen --------------------------------------
	if(!$gtab["hide"][$gtabid] OR !$ID OR !$GLOBALS["LINK"][11]){return false;}
	# --- is old version / locked --------------------------------------
	$lck = lock_data_check($gtabid,$ID,$GLOBALS["session"]["user_id"]);
	if($lck["isversion"] OR $lck["islocked"]){return false;}

	# --- Spezifische Userrechte Prüfen --------------------------------------
	if($gtab["has_userrules"][$gtabid] AND !$gtab["edit_userrules"][$gtabid]){
	if(!check_GtabUserRules($gtabid,$ID,$GLOBALS["session"]["user_id"],"del")){
		lmb_alert($GLOBALS["lang"][114]." (hide:datasetrule)");
		return false;
	}}

	if($gtab["raverkn"][$gtab["verkn"][$gtabid]]){
		foreach ($gtab["raverkn"][$gtab["verkn"][$gtabid]] as $key => $value){
			# verstecke versionierte Datensätze
			if($gtab["versioning"][$gtabid]){
				$sqlquery = "SELECT ID FROM ".$gtab["table"][$value]." WHERE VPID = (SELECT VPID FROM ".$gtab["table"][$value]." WHERE ID = $ID)";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
				$bzm = 1;
				while(odbc_fetch_row($rs, $bzm)) {
					if(!hide_record($value,odbc_result($rs,"ID"),$typ)){return false;}
					$bzm++;
				}
			}else{
				if(!hide_record($value,$ID,$typ)){return false;}
			}
		}
	}
	if($commit){return false;}else{return true;}
}


/**
 * versioning dataset
 *
 * @param unknown_type $gtabid
 * @param unknown_type $ID
 * @param unknown_type $newID
 * @return unknown
 */
function version_record($gtabid,$ID,$newID,$norelation=0){
	global $db;
	global $gtab;
	global $gfield;
	global $farbschema;
	global $lang;
	global $session;
	global $action;

	if(!$gtab["versioning"][$gtabid]){return true;}
	# --- is old version / locked --------------------------------------
	$lck = lock_data_check($gtabid,$ID,$GLOBALS["session"]["user_id"]);
	if($lck["isversion"] OR $lck["islocked"]){return false;}

	# 1:1 relation
	if(!$norelation AND $gtab["raverkn"][$gtab["verkn"][$gtabid]]){
		$selfrelation = $gtab["raverkn"][$gtab["verkn"][$gtabid]];
	# 1:1 relation already done
	}else{
		$selfrelation[] = $gtabid;
	}
	
	lmb_StartTransaction();

	if($selfrelation){
		foreach ($selfrelation as $key => $vgtabid){

			# search parent ID
			$sqlquery = "SELECT VPID FROM ".$gtab["table"][$vgtabid]." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$vpid = odbc_result($rs,"VPID");

			# set change-date
			$sqlquery = "UPDATE ".$gtab["table"][$vgtabid]." SET EDITDATUM = ".LMB_DBDEF_TIMESTAMP." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# set active dataset
			$sqlquery = "UPDATE ".$gtab["table"][$vgtabid]." SET VACT = ".LMB_DBDEF_FALSE." WHERE VPID = $vpid";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# set description
			if($GLOBALS["versdesc"]){
				$sqlquery = "UPDATE ".$gtab["table"][$vgtabid]." SET VDESC = '".parse_db_string($GLOBALS["versdesc"],399)."' WHERE ID = $newID";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}

			# new version
			$sqlquery = "UPDATE ".$gtab["table"][$vgtabid]." SET VID = ((SELECT M FROM (SELECT MAX(VID) AS M FROM ".$gtab["table"][$vgtabid]." WHERE VPID = $vpid) AS S)+1) , VPID = $vpid, VACT = ".LMB_DBDEF_TRUE." WHERE ID = $newID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# recursive Update Relations
			if($gtab["versioning"][$vgtabid] == 1 AND $gfield[$vgtabid]["r_verkntabid"] AND !$GLOBALS["ltmp_isRecursivVersion"]){
				foreach($gfield[$vgtabid]["r_verkntabid"] as $key => $value){
					if($gfield[$value]["verkntabletype"][$key] == 1){
						$sqlquery1 = "UPDATE ".$gfield[$value]["md5tab"][$key]." SET VERKN_ID = $newID WHERE VERKN_ID = $ID";
						$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
						if(!$rs1) {$commit = 1;}
					}
				}
			}
		}
	}


	lmb_EndTransaction(!$commit);

	if($commit){
		return false;
	}else{
		return true;
	}
}



#----------------- Datensatz Sperre setzen -------------------
function lock_data_set($gtabid,$ID,$user,$iuse=null){
	global $db;
	global $gtab;
	global $umgvar;

	if($ID){
		if(!$iuse){
			$iuse = $umgvar["inusetime"];
		}elseif(is_array($iuse) AND is_numeric($iuse[0])){
			if($iuse[1] == "m"){$iuse = $iuse[0];}
			if($iuse[1] == "h"){$iuse = ($iuse[0]*60);}
			if($iuse[1] == "d"){$iuse = ($iuse[0]*60*24);}
		}elseif($iuse == "unlock"){
			$iuse = -10;
			$override = 1;
		}
		
		if (!is_numeric($iuse)){
			$iuse = $umgvar["inusetime"];
		}
		
		$stamp = mktime(date("H"),date("i") + $iuse,date("s"),date("m"),date("d"),date("Y"));
		$iuse = "'".convert_stamp($stamp)."'";

		$iuq = " AND (INUSE_TIME <= $iuse OR INUSE_TIME IS NULL)";
		if($override){$iuq = "";}
		
		# alle 1:1 Verknüpfungen sperren
		foreach ($gtab["raverkn"][$gtab["verkn"][$gtabid]] as $key => $value){
			$sqlquery = "UPDATE ".$gtab["table"][$value]." SET INUSE_TIME = $iuse,INUSE_USER = ".parse_db_int($user,5)." WHERE ID = ".parse_db_int($ID,16).$iuq;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			
			if(!$rs) {return false;}
		}
	}
	return true;
}


#----------------- Datensatz Sperre prüfen -------------------
function lock_data_check($gtabid,$ID,$user){
	global $db;
	global $gtab;
	global $umgvar;
	global $lang;
	
	if($gtab["typ"][$gtabid] == 5){return;}

	if($gtab["versioning"][$gtabid]){
		$sqlquery = "SELECT INUSE_TIME,INUSE_USER,VACT FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
		$vact = odbc_result($rs,"VACT");
	}else{
		$sqlquery = "SELECT INUSE_TIME,INUSE_USER FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	}
	if(!$rs) {$commit = 1;}
	
	if($gtab["versioning"][$gtabid] AND !$vact){
		$lck["isversion"] = 1;
		return $lck;
	}elseif(odbc_result($rs, "INUSE_USER") != $user AND get_stamp(odbc_result($rs,"INUSE_TIME")) > local_stamp(2)){
		$resttime = (get_stamp(odbc_result($rs, "INUSE_TIME")) - local_stamp(2)) / 60;
		if($resttime > 60){$resttime = round($resttime/60,1)." ".$lang[1981];}elseif($resttime > 1440){$resttime = round($resttime/60/24,1)." ".$lang[1982];}else{$resttime = round($resttime,1)." ".$lang[1980];}
		$lck["islocked"] = 1;
		$lck["user"] = odbc_result($rs, "INUSE_USER");
		$lck["time"] = get_date(odbc_result($rs, "INUSE_TIME"),2);
		$lck["time_left"] = $resttime;
		return $lck;
	}elseif(odbc_result($rs, "INUSE_USER") == $user AND get_stamp(odbc_result($rs,"INUSE_TIME")) > local_stamp(2)){
		$resttime = (get_stamp(odbc_result($rs, "INUSE_TIME")) - local_stamp(2)) / 60;
		if($resttime > 60){$resttime_str = round($resttime/60,1)." ".$lang[1981];}elseif($resttime > 1440){$resttime_str = round($resttime/60/24,1)." ".$lang[1982];}else{$resttime_str = round($resttime,1)." ".$lang[1980];}
		$lck["isselflocked"] = 1;
		if($resttime > $umgvar["inusetime"]){
			$lck["isstatic"] = 1;
		}
		$lck["time"] = get_date(odbc_result($rs, "INUSE_TIME"),2);
		$lck["time_left"] = $resttime_str;
		return $lck;
	}

	return false;
}

#----------------- Datensatz Sperre -------------------
function lock_data($gtabid,$ID,&$gresult=null){
	global $gtab;
	global $session;
	global $userdat;
	global $action;
	global $lang;
	
	if($gtab["typ"][$gtabid] == 5){return;}
	
	if(!$gresult){
		$gresult = get_gresult($gtabid,1,null,null,null,null,$ID);
	}
	
	if($ID){
		$lck = lock_data_check($gtabid,$ID,$session["user_id"]);
		# is old version
		if($lck["isversion"]){
			if($action != "gtab_change" AND $action != "gtab_deterg"){$GLOBALS["action"] = "gtab_erg";}else{$action = "gtab_deterg";$GLOBALS["old_action"] = 'gtab_readonly';}
		}
		
		if($lck["isstatic"]){
			$gresult[$gtabid]["LOCK"]["STATIC"][$ID] = $lck["time_left"];
			$gresult[$gtabid]["LOCK"]["TIME"][$ID] = $lck["time_left"];
		}
		
		# is locked
		if($lck["islocked"]){
			if($action != "gtab_change" AND $action != "gtab_deterg"){$GLOBALS["action"] = "gtab_erg";}else{$action = "gtab_deterg";}
			$gresult[$gtabid]["LOCK"]["USER"][$ID] = $userdat["vorname"][$lck["user"]]." ".$userdat["name"][$lck["user"]];
			$gresult[$gtabid]["LOCK"]["TIME"][$ID] = $lck["time_left"];
			lmb_alert("$lang[763]\\n$lang[1721] \"".$gresult[$gtabid]["LOCK"]["USER"][$ID]."\"\\n$lang[1722] ".$lck["time_left"]);
		}elseif($lck["isselflocked"]){
			$gresult[$gtabid]["LOCK"]["SELF"][$ID] = $userdat["vorname"][$session["user_id"]]." ".$userdat["name"][$session["user_id"]];
			$gresult[$gtabid]["LOCK"]["TIME"][$ID] = $lck["time_left"];
		}else{
			if(!lock_data_set($gtabid,$ID,$session["user_id"])){return false;}
		}
	}
	
	return true;
}

/**
 * recusive deletion of related records
 *
 * @param number $gtabid
 * @param number $ID
 * @param string $typ (delete | hide)
 * @param array $forceDelnm (only this tables)
 * @return bool
 */
function check_refint_del($gtabid,$ID,$typ,$forceDelnm=null){
	global $db;
	global $gtab;
	global $gfield;

	# alle Felder auf Verknüpfungen prüfen
	$sqlquery1 = "SELECT DISTINCT FIELD_NAME,DATA_TYPE,FIELD_TYPE,VERKNTABID,VERKNFIELDID,MD5TAB,REFINT,VERKNTABLETYPE,HASRECVERKN FROM LMB_CONF_FIELDS WHERE TAB_ID = ".$gtabid." AND FIELD_TYPE = 11 AND VERKNTREE IS NULL";
	$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs1) {$commit = 1;}
	$bzm1 = 1;
	while(odbc_fetch_row($rs1, $bzm1)) {
		# Falls Verknüpfung vorhanden
		$md5tab = odbc_result($rs1,"MD5TAB");
		$verkntype = odbc_result($rs1,"DATA_TYPE");
		$verkntabletype = odbc_result($rs1,"VERKNTABLETYPE");
		$refint = odbc_result($rs1,"REFINT");
		# Verknüpfte Tabelle
		$refint_id = odbc_result($rs1,"VERKNTABID");
		$hasrecverkn = odbc_result($rs1,"HASRECVERKN");
		
		unset($delvrk);

		# Verknüpfte Datensätze auslesen
		if($refint AND $verkntabletype == 1){
			$sqlquery3 = "SELECT VERKN_ID FROM $md5tab WHERE ID = $ID";
			$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs3) {$commit = 1;}
			$bzm2 = 1;
			while(odbc_fetch_row($rs3, $bzm2)){
				# n:m
				if($verkntype == 24 AND $forceDelnm){
					if(in_array($refint_id,$forceDelnm) OR $forceDelnm[0] == "#all#"){
						if(check_refint_del2($refint_id,odbc_result($rs3, "VERKN_ID"),$forceDelnm)){
							$delvrk[] = odbc_result($rs3, "VERKN_ID");
						}
					}
				# 1:n
				}elseif($verkntype == 27){
					$delvrk[] = odbc_result($rs3, "VERKN_ID");
				}
				$bzm2++;
			}
		}

		# Verknüpfung löschen für 1:m und n:m
		if($typ == "delete"){
			# recursive view relation tab
			if($verkntabletype == 2){
				$ID_FIELD = "VERKN_ID";
				$VKN_TABLE = $gfield[$refint_id]["md5tab"][$hasrecverkn];
			# default relation tab
			}else{
				$ID_FIELD = "ID";
				$VKN_TABLE = $md5tab;
			}
			$sqlquery2 = "DELETE FROM ".$VKN_TABLE." WHERE ".$ID_FIELD." = $ID";
			$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs2) {$commit = 1;}
		}

		# Verknüpfte Datensätze ganz löschen für 1:n
		if($delvrk){
			foreach($delvrk as $key => $value){
				# löschfunktion aufrufen
				if($typ == 'delete'){
					if(!del_data($refint_id,$value,$typ,$forceDelnm)){return false;}
				}else{
					if(!hide_data($refint_id,$value,$typ)){return false;}
				}
			}
		}

		$bzm1++;
	}

	if(!$commit){return $ID;}else{$GLOBALS["commit"] = 1;return false;}
}


/**
 * check for refential integrity violation
 *
 * @param number $gtabid
 * @param number $ID
 * @param array $forceDelnm (except this tables)
 * @return bool
 */
function check_refint_del2($gtabid,$ID,$forceDelnm=null){
	global $db;
	global $gtab;
	global $gfield;
	global $lang;
	
	if(!is_numeric($gtabid)){$GLOBALS["commit"] = 1;return false;}
	
	# all n:m fields of table
	$sqlquery = "SELECT DISTINCT ID,DATA_TYPE,FIELD_ID,TAB_ID,MD5TAB FROM LMB_CONF_FIELDS WHERE DATA_TYPE = 24 AND VERKNTABID = $gtabid AND VERKNTABLETYPE = 1";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {return false;}
	$bzm = 1;
	$commit = 0;
	while(odbc_fetch_row($rs, $bzm)) {
		$vtabid = odbc_result($rs, "TAB_ID");
		$md5tab = odbc_result($rs,"MD5TAB");
		$fieldid = odbc_result($rs,"FIELD_ID");
		# check for related datasets
		$sqlquery2 = "SELECT ID FROM $md5tab WHERE VERKN_ID = $ID";
		$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
		if(!$rs2) {return false;}
		while (odbc_fetch_row($rs2)) {
			if($mainfield = $gfield[$vtabid]["mainfield"]){
				$sqlquery3 = "SELECT ".$gfield[$vtabid]["field_name"][$mainfield]." FROM ".$gtab["table"][$vtabid]." WHERE ID = ".odbc_result($rs2, "ID");
				$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
				$bez_ = odbc_result($rs3, $gfield[$vtabid]["field_name"][$mainfield]);
			}
			$alertf[] = " --> ".$gtab["desc"][$vtabid].", ".$gfield[$vtabid]["spelling"][$fieldid].": ".$bez_." (".odbc_result($rs2, "ID").")";
			$commit++;
		}
		$bzm++;
	}

	if($alertf){
		lmb_alert($lang[1574]);
		if($forceDelnm[0] == "#all#" OR ($forceDelnm AND $commit==1)){
			lmb_alert($lang[2474]."\\n");
		}else{
			lmb_alert($lang[2473]."\\n");
		}

		if($mainfield = $gfield[$gtabid]["mainfield"]){
			$sqlquery3 = "SELECT ".$gfield[$gtabid]["field_name"][$mainfield]." FROM ".$gtab["table"][$gtabid]." WHERE ID = ".$ID;
			$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
			$bez = odbc_result($rs3, $gfield[$gtabid]["field_name"][$mainfield]);
		}
		lmb_alert($gtab["desc"][$gtabid].": ".$bez." ($ID)");
		lmb_alert(implode("\\n",$alertf));
	}

	if($commit){
		if($forceDelnm[0] == "#all#"){
			return true;
		}elseif($forceDelnm AND $commit==1){
			return true;
		}else{
			return false;
		}
	}else{
		return true;
	}
}


/**
 * delete dataset
 *
 * @param number $gtabid
 * @param number $ID
 * @param string $typ (delete | hide)
 * @param array $forceDelnm
 * @return boolean
 */
function del_record($gtabid,$ID,$typ,$forceDelnm=null){
	global $db;
	global $umgvar;
	global $gtab;
	global $gfield;
	global $db;
	
	# --- check referential integrity ------
	if(check_refint_del2($gtabid,$ID,$forceDelnm) === true){
		# --- delete related datasets recursive ------
		if(check_refint_del($gtabid,$ID,$typ,$forceDelnm)){
			
			# trigger before delete record
			if($gtab["trigger"][$gtabid]){
				if(execute_trigger("DELETE","BEFORE",$gtabid,0,$gtab["trigger"][$gtabid],$ID) === false){return false;}
			}
			
			// ----- Rückverfolgungs-Verknpf. Select-Routine -------------------
			$sqlquery = "SELECT LMB_CONF_FIELDS.VERKNTABID,LMB_CONF_FIELDS.HASRECVERKN,LMB_CONF_FIELDS.VERKNTABLETYPE,LMB_CONF_FIELDS.TAB_ID,LMB_CONF_FIELDS.FIELD_ID,LMB_CONF_FIELDS.FIELD_NAME,LMB_CONF_FIELDS.MD5TAB,LMB_CONF_TABLES.TABELLE FROM LMB_CONF_FIELDS,LMB_CONF_TABLES WHERE VERKNTABLETYPE = 1 AND LMB_CONF_FIELDS.TAB_GROUP = LMB_CONF_TABLES.TAB_GROUP AND LMB_CONF_FIELDS.TAB_ID = LMB_CONF_TABLES.TAB_ID AND LMB_CONF_FIELDS.VERKNTABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			
			$bzm = 1;
			while(odbc_fetch_row($rs, $bzm)) {
				$md5tab = odbc_result($rs, "MD5TAB");
				$verkntabletype = odbc_result($rs,"VERKNTABLETYPE");
				$verkntabid = odbc_result($rs,"VERKNTABID");
				$hasrecverkn = odbc_result($rs,"HASRECVERKN");

				# recursive view relation tab
				#if($verkntabletype == 2){
				#	$VKN_FIELD = "ID";
				#	$VKN_TABLE = $gfield[$verkntabid]["md5tab"][$hasrecverkn];
				# default relation tab
				#}elseif($verkntabletype == 1){
					#$VKN_FIELD = "VERKN_ID";
					#$VKN_TABLE = $md5tab;
				#}
				
				// --- MD5 Verknüpfungstabellenname ------
				#if($VKN_TABLE AND $VKN_FIELD){
					#$sqlquery1 = "DELETE FROM ".$VKN_TABLE." WHERE ".$VKN_FIELD." = $ID";
					$sqlquery1 = "DELETE FROM $md5tab WHERE VERKN_ID = $ID";
					$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
					if(!$rs1) {$commit = 1;}
				#}else{
				#	lmb_alert("no rights for table ID:$verkntabid ($md5tab)");
				#	$commit = 1;
				#}
				
				$bzm++;
			}
			
			# Tabellentyp LDMS_FILES - File löschen
			if($gtab["table"][$gtabid] == "LDMS_FILES"){
				require_once("extra/explorer/filestructure.lib");
				if(!del_document($ID)){return false;}
			}

			/* --- Datensatz löschen ------*/
			$sqlquery = "DELETE FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;return false;}
			/* --- ZUSATZ_DATEN löschen ------*/
			$sqlquery = "DELETE FROM LMB_GTAB_GROUPDAT WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			/* --- ZUSATZ_SPALTEN löschen ------*/
			$sqlquery = "DELETE FROM LMB_REMINDER WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			/* --- MSELECT-Daten löschen ------*/
			$sqlquery = "DELETE FROM LMB_SELECT_D WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			/* --- ATTRIBUTE-Daten löschen ------*/
			$sqlquery = "DELETE FROM LMB_ATTRIBUTE_D WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			/* --- Inidize-Daten löschen ------*/
			$sqlquery = "DELETE FROM LMB_INDIZE_D WHERE REF = $ID AND TABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$sqlquery = "DELETE FROM LMB_INDIZE_DS WHERE REF = $ID AND TABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$sqlquery = "DELETE FROM LMB_RULES_DATASET WHERE DATID = $ID AND TABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$sqlquery = "DELETE FROM LMB_WFL_INST WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$sqlquery = "DELETE FROM LMB_WFL_HISTORY WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			
			# ---------- Zusätze ----------
			if(!$commit){
				# Feldtyp Upload - Datei löschen
				$sqlquery = "SELECT ID FROM LDMS_FILES WHERE DATID = $ID AND TABID = $gtabid AND TYP = 3";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
				$bzm = 1;
				while(odbc_fetch_row($rs, $bzm)) {
					del_file(odbc_result($rs, "ID"),0,1,0);
					$bzm++;
				}
			}

			/* --- History-Eintrag (LMB_HISTORY_ACTION) ---------------------------------------- */
			history_action($gtabid,$ID,11,1);
		}else{$commit = 1;}
	}else{$commit = 1;}

	if(!$commit){
		# trigger after delete record
		if($gtab["trigger"][$gtabid]){
			if(execute_trigger("DELETE","AFTER",$gtabid,0,$gtab["trigger"][$gtabid],$ID) === false){return false;}
		}
		return true;
	}else{
		return false;
	}
}

# --- Datensatz verstecken ------
function hide_record($gtabid,$ID,$typ){
	global $db;
	global $umgvar;
	global $gtab;
	global $session;

	global $deletecount;


	# --- Verknüpfte-Datensätze verstecken ------
	if(check_refint_del($gtabid,$ID,$typ)){
		if($typ == "hide"){
			# ------ Datensatz verstecken ------
			$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET DEL = ".LMB_DBDEF_TRUE.", EDITUSER = ".$session["user_id"].", EDITDATUM = ".LMB_DBDEF_TIMESTAMP." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}

			# --- Upload_Datei verstecken -----------------------------------
			unset($tmp);
			$sqlquery = "SELECT ID FROM LDMS_FILES WHERE DATID = $ID AND TABID = $gtabid AND TYP = 3";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$bzm = 1;
			while(odbc_fetch_row($rs, $bzm)) {
				del_file(odbc_result($rs, "ID"),0,2,0);
				$bzm++;
			}

			# --- Inidize-Daten löschen ------
			$sqlquery = "DELETE FROM LMB_INDIZE_D WHERE REF = $ID AND TABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			$sqlquery = "DELETE FROM LMB_INDIZE_DS WHERE REF = $ID AND TABID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			# --- ZUSATZ_DATEN löschen ------
			$sqlquery = "DELETE FROM LMB_GTAB_GROUPDAT WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			# --- ZUSATZ_SPALTEN löschen ------
			$sqlquery = "DELETE FROM LMB_REMINDER WHERE DAT_ID = $ID AND TAB_ID = ".$gtabid;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}else{
				/* --- History-Eintrag (LMB_HISTORY_ACTION) ---------------------------------------- */
				history_action($gtabid,$ID,164,1);
			}

		}elseif($typ == "unhide"){
			# ------ Datensatz verstecken ------
			$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET DEL = ".LMB_DBDEF_FALSE.", EDITUSER = ".$session["user_id"].", EDITDATUM = ".LMB_DBDEF_TIMESTAMP." WHERE ID = $ID";
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs) {$commit = 1;}
			# --- Upload_Datei wiederherstellen -----------------------------------
			$sqlquery1 = "UPDATE LDMS_FILES SET DEL = ".LMB_DBDEF_FALSE." WHERE DATID = $ID AND TABID = $gtabid AND TYP = 1";
			$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
			if(!$rs1) {$commit = 1;}else{
				/* --- History-Eintrag (LMB_HISTORY_ACTION) ---------------------------------------- */
				history_action($gtabid,$ID,166,1);
			}
		}

	}

	if(!$commit){return true;}else{return false;}
}



# ------------------ ANLEGEN -----------------------------

# Integritätsverletzung prüfen
function check_refint_add($md5tab,$v_id,$verknpf){
	global $db;
	global $gtab;
	global $lang;

	$sqlquery = "SELECT KEYID FROM $md5tab WHERE VERKN_ID = $v_id";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if(odbc_fetch_row($rs, 1)){
		$commit = 1;
		lmb_alert($lang[1574]);
	}

	if(!$commit){return true;}else{$GLOBALS["commit"] = 1;return false;}
}

# --- Datensatz anlegen ---------------------------------------
function insert_newdata($gtabid,$ID,$copyid,$version){
	global $db;
	global $gtab;
	global $gfield;
	global $session;
	global $umgvar;

	$isVerkn = false;

	# --- Defaultwerte --------------------------------------
	if($gfield[$gtabid]["id"] AND !$copyid AND !$version){
		foreach($gfield[$gtabid]["id"] as $key => $value){
			$fres = null;
			$def1 = array();
			$def2 = array();

			if($gfield[$gtabid]["field_type"][$key] == 11){
				$isVerkn = true;
			}
			# ---- defaultwert ----
			if($gfield[$gtabid]["deflt"][$key]){
				$def1[0] = eval("return ".$gfield[$gtabid]["deflt"][$key].";");
				$def2[0] = null;
			# Select oder Attribut Wert
			}elseif($gfield[$gtabid]["field_type"][$key] == 4 OR $gfield[$gtabid]["field_type"][$key] == 19 AND $gfield[$gtabid]["select_pool"][$key]){
				
				// multilang
				$sql_s = array();
            			$sql_s[] = 'WERT';
				foreach($umgvar['multi_language'] as $lkey => $lval){
                                    $sql_s[] = 'LANG'.$lval.'_WERT';
                                 }
            	
				if($gfield[$gtabid]["field_type"][$key] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}
				$sqlquery = "SELECT ID,".implode(',',$sql_s)." FROM ".$tabtyp."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$key]." AND DEF = ".LMB_DBDEF_TRUE;

                                $rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				while(odbc_fetch_row($rs)){
					foreach($sql_s as $lkey => $lval){
                                            $def1[] = odbc_result($rs, $lval);
                                            $def2[] = odbc_result($rs, "ID");
					}
				}
			}

			# ---- Select einfach ----
			if($gfield[$gtabid]["data_type"][$key] == 12 OR $gfield[$gtabid]["data_type"][$key] == 14){
				if($def1[0]){
					$dflt_i[] = $gfield[$gtabid]["field_name"][$key];
					$dflt_v[] = "'".$def1[0]."'";
				}
			# ---- Select multible ----
			}elseif($gfield[$gtabid]["data_type"][$key] == 19 OR $gfield[$gtabid]["data_type"][$key] == 18 OR $gfield[$gtabid]["data_type"][$key] == 31 OR $gfield[$gtabid]["data_type"][$key] == 46 OR $gfield[$gtabid]["data_type"][$key] == 32){
				
				$bzm = 0;
				foreach ($def2 as $def_key => $def_val){
					if(!$def2[$def_key] AND $def1[$def_key]){
						$sqlquery1 = "SELECT ID FROM ".$tabtyp."_W WHERE POOL = ".$gfield[$gtabid]["select_pool"][$key]." AND WERT = '".parse_db_string($def1[$def_key],160)."'";
						$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
						$def_val = odbc_result($rs1,"ID");
					}
					if($def2){
						$fres[] = "a".$def_val;
					}
					$bzm++;
				}

				$dflt_i[] = $gfield[$gtabid]["field_name"][$key];
				$dflt_v[] = $bzm;

				if($fres){
					$require = "gtab/sql/add_select.dao";require_once($require);
					select_select($gtabid,$key,$ID,$fres);
				}
				
			# ---- Standard ----
			}elseif($gfield[$gtabid]["deflt"][$key]){
				$dflt_i[] = $gfield[$gtabid]["field_name"][$key];
				if($gfield[$gtabid]["field_type"][$key] == 5 OR $gfield[$gtabid]["field_type"][$key] == 14){
					$dflt_v[] = parse_db_int($def1[0],$gfield[$gtabid]["size"][$key]);
				}elseif($gfield[$gtabid]["field_type"][$key] == 10){
					$dflt_v[] = parse_db_bool($def1[0]);
				}else{
					$dflt_v[] = "'".parse_db_string($def1[0],$gfield[$gtabid]["size"][$key])."'";
				}
			}

		}
	}

	# Versionierung default
	if($gtab["versioning"][$gtabid]){
		$dflt_i[] = "VPID";
		$dflt_v[] = $ID;
	}

	if($dflt_v AND $dflt_i){
		$dflti = ",".implode(",",$dflt_i);
		$dfltv = ",".implode(",",$dflt_v);
	}
	
	# trigger before insert record
	if($gtab["trigger"][$gtabid]){
		if(execute_trigger("INSERT","BEFORE",$gtabid,null,$gtab["trigger"][$gtabid],$ID) === false){return false;}
	}
	
	# --- Datensatz hinzufügen --------------------------------------
	$sqlquery = "INSERT INTO ".$gtab["table"][$gtabid]." (ID,ERSTUSER,ERSTDATUM,EDITDATUM,INUSE_TIME $dflti) VALUES ($ID,".$session["user_id"].",".LMB_DBDEF_TIMESTAMP.",".LMB_DBDEF_TIMESTAMP.",".LMB_DBDEF_TIMESTAMP." $dfltv)";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}else{
		# --- History-Eintrag (LMB_HISTORY_ACTION) ----------------------------------------
		history_action($gtabid,$ID,1,1);
	}

	// insert auto verknüpfung
	if($isVerkn)
	setDefaultRelation($gtabid,$ID);

	if($commit){
		return false;
	}else{
		# trigger after insert record
		if($gtab["trigger"][$gtabid] AND $gtabid != $gtab["argresult_id"]["LDMS_FILES"]){
			if(execute_trigger("INSERT","AFTER",$gtabid,null,$gtab["trigger"][$gtabid],$ID) === false){return false;}
		}
		# set trigger off for comming update
		$GLOBALS["lmb_trigger_off"][$gtabid] = 1;
		return true;
	}
}

/**
 * Enter description here...
 *
 * @param integer $gtabid id of the table where
 * @param integer $ID ID of the record where to define the auto relation
 */
function setDefaultRelation($gtabid,$ID)
{
	global $db;
	global $gfield;
	global $session;
	global $gtab;

	$strsql = "select * from ". $gtab["table"][$gtabid] ." where ID=$ID";
	$rs = odbc_exec($db,$strsql) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

	if(odbc_fetch_row($rs))
	{
		foreach($gfield[$gtabid]["id"] as $key => $value)
		{
			if($gfield[$gtabid]["field_type"][$key] == 11)
			{
				if(odbc_result($rs,$gfield[$gtabid]["field_name"][$key]))
				{
					//$verkn = set_verknpf($gfield[$gtabid]["verkntabid"][$key],$key,$ID,odbc_result($rs,$gfield[$gtabid]["field_name"][$key]),0,0,1);
					$verkn = set_verknpf($gtabid,$key,$ID,odbc_result($rs,$gfield[$gtabid]["field_name"][$key]),0,0,1);
					$histFields[$gtabid.",4,$ID"]=0;
					update_data($histFields,3,$verkn);
					set_joins($gtabid,$verkn);
				}
			}

		}
	}
}


# --- create new dataset ---------------------------------------
function create_newdata($gtabid,$verkn,$verknpf,$copyid,$ID,$version=null,$norelation=null){
	global $db;
	global $gtab;
	global $gfield;
	global $session;

	# --- Verknüpfung zuweisen -----------------------------------
	if($verknpf AND $verkn AND !$version){
		# --- 1:n Verknüpfungen auf Integritätsverletzung prüfen ------
		if($verkn["typ"] == 27){$check = check_refint_add($verkn["md5tab"],$ID,$verknpf);}else{$check = 1;}
		if($check){
			# --- Insert Statement ----
			if(insert_newdata($gtabid,$ID,$copyid,$version)){
				
				# Verknüpfung eintragen
				$verkn["add_id"] = $ID;
				set_joins($gtabid,$verkn);
				
				# --- Datensatz kopieren -----
				if($copyid){
					if(!copy_record($gtabid,$copyid,$ID,$version,$norelation)){$commit = 1;}
				}
				
			}else{$commit = 1;}
		}
	}else{
		# --- Insert Statement ----
		if(insert_newdata($gtabid,$ID,$copyid,$version)){
			# --- Datensatz kopieren -----
			if($copyid){
				if(copy_record($gtabid,$copyid,$ID,$version,$norelation)){
					# Datensatz Versionieren
					if($version AND !$commit AND $gtab["versioning"][$gtabid]){
						if(!version_record($gtabid,$copyid,$ID,1)){$commit = 1;}
					}
				}else{$commit = 1;}
			}

		}else{$commit = 1;}
	}

	if(!$commit){return true;}else{$GLOBALS["commit"] = 1;return false;}
}

/**
 * alias to new_record
 *
 * @param unknown_type $gtabid
 * @param unknown_type $relation
 * @param unknown_type $copyid
 * @param unknown_type $version
 * @param unknown_type $forceNewID
 * @return unknown
 */
function new_data($gtabid,$relation=null,$copyid=null,$version=null,$forceNewID=null){
	return new_record($gtabid,null,$relation[0],$relation[1],$relation[2],$copyid,$version,$forceNewID);
}

/* --- neuer Datensatz 1:1 Verknüpfungs Schleife --------------------------------------- */
function new_record($gtabid,$verknpf=null,$verkn_fieldid=null,$verkn_tabid=null,$verkn_ID=null,$copyid=null,$version=null,$forceNewID=null,$norelation=null){
	global $db;
	global $gtab;
	global $gfield;
	global $session;
	
	# --- Grundrechte Prüfen --------------------------------------
	if(!$gtab["add"][$gtabid] OR !$gtabid OR !$GLOBALS["LINK"][1]){
		lmb_error_log("limbas: new_record # table ".$gtab['table'][$gtabid]." - no permisson");
		return false;
	}

	# --- Verknpf-Zusatz --------------------------------------
	if($verkn_fieldid AND $verkn_tabid AND $verkn_ID){
		$verknpf = 1;
		$verkn = set_verknpf($verkn_tabid,$verkn_fieldid,$verkn_ID,0,0,0,$verknpf);
	}

	$ID = 0;
	# -------- ID vorgeben --------------
	if(is_numeric($forceNewID) AND $forceNewID > 0){
		$forceNewID = parse_db_int($forceNewID,18);
		$sqlquery = "SELECT ID FROM ".$gtab["table"][$gtabid]." WHERE ID = $forceNewID";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		if(!odbc_fetch_row($rs)){
			#del_data($gtabid,$forceNewID,"delete");
			$ID = $forceNewID;
		}else{
			lmb_alert("dublicate ID [$forceNewID]");
			return false;
		}
	}else{
		# -------- neue ID --------------
		# --- für alle 1:1 Verknüpfungen ----
		if($gtab["raverkn"][$gtab["verkn"][$gtabid]]){
			foreach ($gtab["raverkn"][$gtab["verkn"][$gtabid]] as $key => $value){
				if($gtab["add"][$value]){
					$newid[] = next_db_id($gtab["table"][$value],"ID",1);
				}
			}
			rsort($newid);
			$ID = $newid[0];
		}
	}

	# --- Datensatz anlegen -------------
	# --- für alle 1:1 Verknüpfungen ----
	if($ID && $gtab["raverkn"][$gtab["verkn"][$gtabid]]){
		$raverkn = $gtab["raverkn"][$gtab["verkn"][$gtabid]];
		#krsort($raverkn); # ist richtig .. ansonsten foreign keys neu erstellen lassen
		foreach ($raverkn as $key => $value){
			if($gtabid == $value){$verknpf_ = $verknpf;}else{$verknpf_ = 0;}
			# check for last version
			if($version AND $gtab["versioning"][$gtabid]){
				if(!check_version($copyid,$gtab["table"][$value])){
					return $copyid;
				}
			}
			# create data
			if(create_newdata($value,$verkn,$verknpf_,$copyid,$ID,$version,$norelation)){
				# --- Spezifische Userrechte hinzufügen --------------------------------------
				if($gtab["has_userrules"][$gtabid]){
					#$userpara = $session["user_id"]."_u_v__1";
					$userpara = array($session["user_id"],"u","v",null,1);
					if(!add_GtabUserRules($value,array($ID),$userpara,1)){
						lmb_error_log("limbas: new_record # table ".$gtab['table'][$gtabid]."/".$gtab['table'][$value].", ID $ID - add_GtabUserRules return false");
						$commit = 1;
					}
				}
			}else{
				lmb_error_log("limbas: new_record # table ".$gtab['table'][$gtabid]."/".$gtab['table'][$value].", ID $ID - create_newdata return false");
				$commit = 1;
			}
		}
	}else{
		lmb_error_log("limbas: new_record # table ".$gtab['table'][$value].", ID $ID - no ID or raverkn");
		$commit = 1;
	}

	if(!$commit){return $ID;}else{return false;}
}


function check_version($ID,$table){
	global $db;

	$sqlquery = "SELECT ID FROM $table WHERE VPID = (SELECT VPID FROM $table WHERE ID = $ID) AND VID = (SELECT MAX(VID) FROM $table WHERE VPID = (SELECT VPID FROM $table WHERE ID = $ID))";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if(odbc_result($rs,"ID") != $ID){
		return false;
	}

	return true;
}


# -------- Datensatz vererben --------------
function inherit_record($gtabid,$ID,$source_ID){
	global $db;
	global $gtab;
	global $gfield;
	global $session;

	foreach($gfield[$gtabid]["id"] as $key => $value){
		$inherit_tab = $gfield[$gtabid]["inherit_tab"][$key];
		$inherit_field = $gfield[$gtabid]["inherit_field"][$key];

		if($inherit_tab AND $inherit_field){

			# --- Verknüpfung 1:n / n:m ---
			if($gfield[$gtabid]["field_type"][$key] == 11){


			# --- Auswahlfeld mehrfach ---
			}elseif($gfield[$gtabid]["data_type"][$key] == 18 OR $gfield[$gtabid]["data_type"][$key] == 31 OR $gfield[$gtabid]["data_type"][$key] == 32 OR $gfield[$gtabid]["data_type"][$key] == 46){


			}elseif($gfield[$gtabid]["field_type"][$key] != 9 AND $gfield[$gtabid]["field_type"][$key] != 19 AND $gfield[$gtabid]["field_type"][$key] != 6 AND $gfield[$gtabid]["data_type"][$key] != 47){
				$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$key]." = (SELECT ".$gfield[$inherit_tab]["field_name"][$inherit_field]." FROM ".$gtab["table"][$inherit_tab]." WHERE ID = $source_ID) WHERE ID = $ID";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}
			}

		}
	}
}

# -------- Datensatz kopieren --------------
function copy_record($gtabid,$copyid,$ID,$version=null,$norelation=null){
	global $db;
	global $gtab;
	global $gfield;
	global $session;
	global $umgvar;

	if($gfield[$gtabid]["copy"]){
		#$sqlquery3 = "SELECT * FROM ".$gtab["table"][$gtabid]." WHERE ID = $ID";
		#$rs3 = odbc_exec($db,$sqlquery3) or errorhandle(odbc_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
		#if(!$rs3) {$commit = 1;}

		$sqlquery = "SELECT * FROM ".$gtab["table"][$gtabid]." WHERE ID = $copyid";
		$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}elseif(odbc_fetch_row($rs,1)){
			foreach($gfield[$gtabid]["id"] as $key => $value){
				$val = null;
				# nur leere Felder überschreiben && Versiondescription nicht kopieren
				#if(!odbc_result($rs3, $gfield[$gtabid]["field_name"][$key]) AND $gfield[$gtabid]["argument_typ"][$key] != 43){

				# Versiondescription nicht kopieren
				if($gfield[$gtabid]["copy"][$key] AND $gfield[$gtabid]["data_type"][$key] != 43 AND $gfield[$gtabid]["data_type"][$key] != 22 AND $gfield[$gtabid]["field_type"][$key] != 14 AND $gfield[$gtabid]["field_type"][$key] != 15){
					# --- Verknüpfung 1:n / n:m ---
					if($gfield[$gtabid]["field_type"][$key] == 11){
						#if($gfield[$gtabid]["verkntabletype"][$key] == 1){

							# recursive view relation tab
                        	if($gfield[$gtabid]["verkntabletype"][$key] == 2){
                        		$ID_FIELD = "VERKN_ID";
                        		$VKN_FIELD = "ID";
                        		$VKN_TABLE = $gfield[$gfield[$gtabid]["verkntabid"][$key]]["md5tab"][$gfield[$gtabid]["hasrecverkn"][$key]];
                        		$md5tab_fields = $gfield[$gfield[$gtabid]["verkntabid"][$key]]["md5tab_fields"][$gfield[$gtabid]["hasrecverkn"][$key]];
                        	# default relation tab
                        	}else{
                        		$ID_FIELD = "ID";
                        		$VKN_FIELD = "VERKN_ID";
                        		$VKN_TABLE = $gfield[$gtabid]["md5tab"][$key];
                        		$md5tab_fields = $gfield[$gtabid]["md5tab_fields"][$key];
                        	}
						    
							$sqlquery1 = "SELECT * FROM $VKN_TABLE WHERE $ID_FIELD = $copyid";
							$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
							
							if(!$rs1) {$commit = 1;}
							$bzm1 = 1;
							while(odbc_fetch_row($rs1, $bzm1)) {
								# new dataset
								$nextid = next_db_id($VKN_TABLE,"KEYID",1);
								$VSORT = parse_db_int(odbc_result($rs1,"SORT"));
								$keyid = odbc_result($rs1,"KEYID");
								$VERKN_ID = odbc_result($rs1, $VKN_FIELD);

								# Zusatzfelder der md5 verkn-Tabelle
								$sql_i = array();
								$sql_v = array();
								if($md5tab_fields){
									foreach ($md5tab_fields as $key1 => $value1){
										$sql_i[] = $value1;
										$sql_v[] = "(SELECT $value1 FROM $VKN_TABLE WHERE KEYID = $keyid)";
									}
								}
								if($sql_i[0]){
									$sql_i = ",".implode(",",$sql_i);
									$sql_v = ",".implode(",",$sql_v);
								}else{
									$sql_i = "";$sql_v = "";
								}
								
								# 1:n
								if($gfield[$gtabid]["data_type"][$key] == 27){
									# sets versioning typ to "fix"
									$GLOBALS["ltmp_isRecursivVersion"] = 1;
									# copy
									$VERKN_ID = new_record($gfield[$gtabid]["verkntabid"][$key],0,0,0,0,$VERKN_ID,$version,null,$VKN_TABLE);
									# reset versioning typ
									$GLOBALS["ltmp_isRecursivVersion"] = 0;
									$sqlquery2 = "INSERT INTO $VKN_TABLE (KEYID,ERSTUSER,ERSTDATUM,$ID_FIELD,$VKN_FIELD,SORT $sql_i) VALUES($nextid,".$session["user_id"].",".LMB_DBDEF_TIMESTAMP.",$ID,".$VERKN_ID.",".$VSORT." $sql_v)";
								# n:m
								}elseif($gfield[$gtabid]["data_type"][$key] == 24){
									$sqlquery2 = "INSERT INTO $VKN_TABLE (KEYID,ERSTUSER,ERSTDATUM,$ID_FIELD,$VKN_FIELD,SORT $sql_i) VALUES($nextid,".$session["user_id"].",".LMB_DBDEF_TIMESTAMP.",$ID,".$VERKN_ID.",".$VSORT." $sql_v)";
								}
								// protect relation endless loop
								if($norelation != $VKN_TABLE){
    								$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
    								if(!$rs2) {$commit = 1;}
								}
								$bzm1++;
							}
						#}
					# --- Auswahlfeld mehrfach ---
					}elseif($gfield[$gtabid]["data_type"][$key] == 18 OR $gfield[$gtabid]["data_type"][$key] == 31 OR $gfield[$gtabid]["data_type"][$key] == 32 OR $gfield[$gtabid]["data_type"][$key] == 46){
						# SELECT / ATTRIBUTE
						if($gfield[$gtabid]["field_type"][$key] == 19){$tabtyp = "LMB_ATTRIBUTE";}else{$tabtyp = "LMB_SELECT";}
						$sqlquery1 = "SELECT * FROM ".$tabtyp."_D WHERE TAB_ID = $gtabid AND FIELD_ID = $key AND DAT_ID = $copyid";
						$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
						if(!$rs1) {$commit = 1;}
						$bzm1 = 1;
						while(odbc_fetch_row($rs1, $bzm1)) {
							$insname = "";
							$insvalue = "";
							if($gfield[$gtabid]["field_type"][$key] == 19){
								$insname = ",VALUE_NUM,VALUE_STRING";
								$insvalue = ",".parse_db_int(odbc_result($rs1, "VALUE_NUM"),16).",'".parse_db_string(odbc_result($rs1, "VALUE_STRING"),250)."'";
							}
							$nextid = next_db_id("".$tabtyp."_D","ID");
							$sqlquery2 = "INSERT INTO ".$tabtyp."_D (ID,ERSTUSER,TAB_ID,FIELD_ID,DAT_ID,W_ID".$insname.") VALUES($nextid,".$session["user_id"].",".parse_db_int(odbc_result($rs1, "TAB_ID")).",".parse_db_int(odbc_result($rs1, "FIELD_ID")).",".parse_db_int($ID).",".parse_db_int(odbc_result($rs1, "W_ID")).$insvalue.")";
							$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
							if(!$rs2) {$commit = 1;}
							$bzm1++;
						}

						if($bzm1 > 1){$cpy[] = $gfield[$gtabid]["field_name"][$key]." = ".parse_db_int(($bzm1-1));}
						# --- Dateien ---
					}elseif($gfield[$gtabid]["field_type"][$key] == 6){
						$sqlquery1 = "SELECT ID,LEVEL FROM LDMS_FILES WHERE TABID = $gtabid AND FIELDID = $key AND DATID = $copyid AND TYP = 3";
						$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
						if(!$rs1) {$commit = 1;}
						$bzm1 = 1;
						while(odbc_fetch_row($rs1, $bzm1)) {
							$copy_file = odbc_result($rs1, "ID");
							$level = $gfield[$gtabid]["file_level"][$key];
							$tabrelation = array("datid" => $ID, "gtabid" => $gtabid, "fieldid" => $key);
							if($nfid = copy_file(array($copy_file),$level,null,$tabrelation)){
								$sqlquery2 = "UPDATE LDMS_FILES SET DATID = $ID WHERE ID = $nfid";
								$rs2 = odbc_exec($db,$sqlquery2) or errorhandle(odbc_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
								if(!$rs2) {$commit = 1;}
							}
							$bzm1++;
						}
						# --- Währung ---
					}elseif($gfield[$gtabid]["data_type"][$key] == 30){
						$val = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]);
						$val2 = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]."_C");
						if($val){
							$cpy[] = $gfield[$gtabid]["field_name"][$key]." = ".parse_db_float($val,$gfield[$gtabid]["size"][$key]).",".$gfield[$gtabid]["field_name"][$key]."_C = '".parse_db_string($val2,10)."'";
						}
						# --- Long ---
					}elseif($gfield[$gtabid]["data_type"][$key] == 39){
						$sqlquery0 = "SELECT ".$gfield[$gtabid]["field_name"][$key]." FROM ".$gtab["table"][$gtabid]." WHERE ID = $copyid";
						$rs0 = odbc_exec($db,$sqlquery0) or errorhandle(odbc_errormsg($db),$sqlquery0,$GLOBALS['action'],__FILE__,__LINE__);
						$val = odbc_result($rs0, $gfield[$gtabid]["field_name"][$key]);
						if($val){
							$prepare_string = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$key]." = ? WHERE ID = $ID";
							if(!lmb_PrepareSQL($prepare_string,array(parse_db_blob($val)),__FILE__,__LINE__)){$commit = 1;}
						}
						# --- Boolean ---
					}elseif($gfield[$gtabid]["field_type"][$key] == 10){
						$val = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]);
						$cpy[] = $gfield[$gtabid]["field_name"][$key]." = ".parse_db_bool($val);
						# --- Integer ---
					}elseif($gfield[$gtabid]["parse_type"][$key] == 1){
						$val = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]);
						if($val OR $val == 0){
							$cpy[] = $gfield[$gtabid]["field_name"][$key]." = ".parse_db_int($val,$gfield[$gtabid]["size"][$key]);
						}
						# --- Float ---
					}elseif($gfield[$gtabid]["parse_type"][$key] == 6){
						$val = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]);
						if($val OR $val == 0){
							$cpy[] = $gfield[$gtabid]["field_name"][$key]." = ".parse_db_float($val,$gfield[$gtabid]["size"][$key]);
						}
						# --- Varchar ---
					}else{
						$val = odbc_result($rs, $gfield[$gtabid]["field_name"][$key]);
						if($val){
							$cpy[] = $gfield[$gtabid]["field_name"][$key]." = '".parse_db_string($val)."'";
						}
					}
					
					// multilang
					if($gfield[$gtabid]['multilang'][$key] AND $umgvar['multi_language']){
                		foreach($umgvar['multi_language'] as $lkey => $lval){
                		    $lfieldname = "LANG".$lval."_".$prefix.$gfield[$gtabid]["rawfield_name"][$key];
                	        $cpy[] = $lfieldname." = '".parse_db_string(odbc_result($rs, $lfieldname))."'";
                	    }
					}
				}
			}

			# --- Datensatz ändern --------------------------------------
			if($cpy){
				$cpy = implode(",",$cpy);
				$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET $cpy WHERE ID = $ID";
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(!$rs) {$commit = 1;}else{
					/* --- History-Eintrag (LMB_HISTORY_ACTION) ---------------------------------------- */
					history_action($gtabid,$ID,201,1);
					$GLOBALS["ltmp"]["history_action"] = 1;
				}
			}
		}
	}
	if(!$commit){return true;}else{return false;}
}

# --- check for dublicates -----------------------------------
function lmb_gtabIfIsUnique($gtabid,$result){
	global $db;
	global $gtab;
	
	$sqlquery = "SELECT ID FROM ".$gtab["table"][$gtabid]." WHERE $result";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	if(odbc_result($rs,"ID")){
		return true;
	}
	return false;
}


/**
 * update data
 *
 * @param array or string $history_fields
 * @param string $typ
 * @param array $verkn
 * @return unknown
 */
function update_data($history_fields,$typ=null,$verkn=null,$nometa=null,$decode=null){
	global $db;
	global $session;
	global $umgvar;
	global $gtab;
	global $gfield;
	global $LINK;
	global $action;
	global $lmcurrency;
	global $lang;
	$newdataid = null;
    $query_result = null;
    
	if(!$history_fields){return false;}
	
	require_once("gtab/gtab_type_update.lib");
	
	# make array if is not
	if(!is_array($history_fields)){
		$history_fields = explode(";",$history_fields);
		$history_fields = array_unique($history_fields);
	}
	
	$forbidenfields = array("ID","ERSTUSER","EDITUSER","ERSTDATUM","EDITDATUM","DEL");
	$ID = true;
	
	foreach($history_fields as $key => $value){
		
		# key is number, value is fieldef, form is value
		if(is_numeric($key)){
			if(!$value){continue;}
			$history = explode(",",$value);
		# key is fieldef, value is value
		}else{
			if(!$key){continue;}
			$history = explode(",",$key);
			$typ = 3;
		}
		
		$gtab_id = $history[0];
		$gtabid = $gtab_id;
		$field_id = $history[1];
		$data_id = $history[2];

		# create new dataset
		if($gtab_id AND $field_id AND $data_id == '0' AND $LINK[1] AND $gtab["add"][$gtab_id]){
			if(!$newdataid[$gtab_id]){
				$data_id = new_record($gtab_id,$verkn["verknpf"],$verkn["fieldid"],$verkn["tabid"],$verkn["id"],0,0);
				$newdataid[$gtab_id] = $data_id;
			}else{
				$data_id = $newdataid[$gtab_id];
			}
		}
		$ID = $data_id;
		
		# ignore Field ID
		if(in_array($gfield[$gtab_id]["field_name"][$field_id],$forbidenfields)){continue;}
		
		# doppelte Eingabe / Grundrechte prüfen
		if($query_result[$gtab_id][$data_id][$field_id] OR !$gfield[$gtab_id]["perm_edit"][$field_id]){continue;}
		
		# check plausibility
		if($data_id < 0 OR !is_numeric($data_id) OR !$data_id){lmb_alert("DAT-ID is no number! ($data_id)");continue;}
		if(!is_numeric($field_id)){lmb_alert("FIELD-ID is no number! ($field_id)");continue;}
		if(!is_numeric($gtab_id)){lmb_alert( "TABLE-ID is no number! ($gtab_id)");continue;}
		

		if($typ == 3){
			$change_value = $value;
		}elseif(isset($_REQUEST[$gfield[$gtab_id]["form_name"][$field_id]])){
			$change_value = $_REQUEST[$gfield[$gtab_id]["form_name"][$field_id]];
		}elseif(isset($_REQUEST[$gfield[$gtab_id]["form_name"][$field_id]."_".$history[2]])){
			$change_value = $_REQUEST[$gfield[$gtab_id]["form_name"][$field_id]."_".$history[2]];
		}
		
		if($decode AND is_string($change_value)){
			$change_value = lmb_utf8_decode($change_value);
		}

		# check version
		if($gfield[$gtab_id]["ver"][$field_id]){
			$query_ver[$gtab_id][$data_id] = $gfield[$gtab_id]["ver"][$field_id];
		}

		# ---- name of update function -----
		if(function_exists("uftyp_".$gfield[$gtab_id]["funcid"][$field_id])){
			$fname = "uftyp_".$gfield[$gtab_id]["funcid"][$field_id];
		}else{
			$fname = "uftyp_2";
		}
		# ---- name of extended update function -----
		if($gfield[$gtab_id]["ext_type"][$field_id]){
			if(function_exists("lmbu_".$gfield[$gtab_id]["ext_type"][$field_id])){
				$fname = "lmbu_".$gfield[$gtab_id]["ext_type"][$field_id];
			}
		}

		# call update function
		$result = $fname($gtab_id,$field_id,$data_id,$change_value);
		if($result){
			# if be unique
			if($gfield[$gtab_id]["unique"][$field_id]){
				if(lmb_gtabIfIsUnique($gtab_id,$result)){lmb_alert($gfield[$gtab_id]["spelling"][$field_id]." ".$lang[2605]);continue;}
			}

			$query_result[$gtab_id][$data_id][$field_id] = $result;
			$query_value[$gtab_id][$data_id][$field_id] = $change_value;
			$query_dataid[$gtab_id][$data_id] = $data_id;
			$query_gtabid[$gtab_id] = $gtab_id;
		}
	}

	# --- Datensatz Update / History-Eintrag ----
	if($query_gtabid AND $query_dataid AND $query_result){
		# Tabellen
		foreach($query_gtabid as $gtabid => $value0){
			if($gtab["edit"][$gtabid]){

				# Datensätze
				foreach($query_dataid[$gtabid] as $dataid => $value1){
					
					# --- old value ----
					if($gtab["trigger"][$gtabid] OR $gtab["editrule"][$gtabid] OR $gfield[$gtab_id]["editrule"] OR $gfield[$gtabid]["trigger"] OR $gtab["logging"][$gtabid] OR $gtab["versioning"][$gtabid]){
						$triggerResult = null;
						$old_gresult = get_gresult($gtabid,1,null,null,null,null,$dataid);
					}

					# ----------- Edit Permission from Table-Rule -----------
					if($gtab["editrule"][$gtabid]){
						#$rownr = 0;
						if(check_GtabRules($dataid,$gtabid,null,$gtab["editrule"][$gtabid],0,$old_gresult)){
							lmb_alert($GLOBALS["lang"][114]." (edit:tablerule $gtabid)");
							continue;
						}
					}
					
					# --- Spezifische Userrechte Prüfen --------------------------------------
					if($gtab["has_userrules"][$gtabid] AND !$gtab["edit_userrules"][$gtabid]){
						if(!check_GtabUserRules($gtabid,$dataid,$session["user_id"],"edit")){
							lmb_alert($GLOBALS["lang"][114]." (edit:datasetrule $gtabid)");
							continue;
						}
					}
					
					# --- Edit Permission from Field-Rule ----
					if($gfield[$gtab_id]["editrule"]){
						foreach($query_value[$gtabid][$dataid] as $fieldid => $value){
							if($gfield[$gtab_id]["editrule"][$field_id]){
								# ----------- Edit Permission from Field-Rule -----------
								if(check_GtabRules($dataid,$gtabid,$fieldid,$gfield[$gtabid]["editrule"][$fieldid],0,$old_gresult)){
									lmb_alert($GLOBALS["lang"][114]." (edit:fieldrule $gtabid/$fieldid)");
									continue;
								}
							}
						}
					}

					# ----- Datensatz Update ------
					if(is_array($query_result[$gtabid][$dataid])){
						$sqlquery = implode(",",$query_result[$gtabid][$dataid]);
						if($sqlquery){$sqlquery .= ",";}
					}

					# autom. Versionierung
					if($gtab["ver"][$gtabid] == 2 AND $query_ver[$gtabid][$dataid]){
						if($newid = new_record($gtabid,0,0,0,0,$dataid,1)){
							$dataid = $newid;
							if($action == "gtab_change"){$GLOBALS["ID"] = $dataid;}
						}
					}
					
				    // Versionierung prüfen
                    if ($gtab["versioning"][$gtabid] and !$old_gresult[$gtabid][VACT][0]) {
                        lmb_alert($lang[2147]);
                        $commit = 1;
                        continue;
                    }

					$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET $sqlquery";
					$sqlquery .= "EDITDATUM = ".LMB_DBDEF_TIMESTAMP.",";
					$sqlquery .= "EDITUSER = ".$session["user_id"];
					$sqlquery .= " WHERE ".$gtab["keyfield"][$gtabid]." = ".$dataid;
					#echo $sqlquery;
					#error_log(print_r($sqlquery,1));

					# --- trigger before update field ----
					if($gfield[$gtabid]["trigger"]){
						foreach($query_value[$gtabid][$dataid] as $fieldid => $value){
							if($gfield[$gtabid]["trigger"][$fieldid]){
								$triggerResult = execute_trigger("UPDATE","BEFORE",$gtabid,$fieldid,$gfield[$gtabid]["trigger"][$fieldid],$dataid,$value,$old_gresult);
								if($triggerResult === false){return false;}
							}
						}
					}
					
					# --- trigger before update table ----
					if($gtab["trigger"][$gtabid]){
						$triggerResult = execute_trigger("UPDATE","BEFORE",$gtabid,null,$gtab["trigger"][$gtabid],$dataid,$history_fields,$old_gresult);
						if($triggerResult === false){return false;}
					}
					
					########### UPDATE QUERY ##############
					$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
					#######################################
					
					if(!$rs){$commit = 1;}else{
						# --- trigger after update table ----
						if($gtab["trigger"][$gtabid]){
							if(execute_trigger("UPDATE","AFTER",$gtabid,null,$gtab["trigger"][$gtabid],$dataid,$history_fields,$old_gresult,$triggerResult) === false){return false;}
						}
						# --- History-Eintrag (history_action) ---------
						if($session["logging"]){$actionid = history_action($gtabid,$dataid,3,1);}
						# check if logging
						if($actionid AND $gtab["logging"][$gtabid] AND $session["logging"] AND $query_value[$gtabid][$dataid]){$logging=1;}else{$logging=0;}
						if($logging OR $gfield[$gtabid]["trigger"]){
							foreach($query_value[$gtabid][$dataid] as $fieldid => $value){
								# --- History-Eintrag (history_update) ---------
								if($logging){
									$com = history_update($gtabid,$fieldid,$dataid,$actionid,$value,$old_gresult[$gtabid][$fieldid][0]);
								}
								# --- trigger after update field ----
								if($gfield[$gtabid]["trigger"][$fieldid]){
									if(execute_trigger("UPDATE","AFTER",$gtabid,$fieldid,$gfield[$gtabid]["trigger"][$fieldid],$dataid,$value,$old_gresult,$triggerResult) === false){return false;}
								}
							}
						}
						# ---  LDMS_FILES & LDMS_META Zusatz ---------
						if($gtab["typ"][$gtabid] == 3 AND $gtab["table"][$gtabid] != "LDMS_FILES" AND !$nometa){
							$require = "extra/explorer/metadata.lib";
							require_once($require);
							refreshmeta_to_db($dataid);
						}
					}
				}
			}
		}
	}

	if($commit){return false;}elseif($newdataid){return $ID;}else{return true;}
}

# ------- Zellen/Reihen-Farben ------
function gfield_colors($td_color){
	global $db;
	global $gtab;
	global $session;
	global $gfield;
	
	lmb_StartTransaction();

	$cells = explode(";",$td_color);
	$NEXTID = next_db_id("LMB_GTAB_GROUPDAT");
	$bzm = 0;
	while($cells[$bzm]){
		$cellval = explode("_",$cells[$bzm]);
		if($cellval[0] == 'elrow'){
			if($cellval[3] == 'transparent'){$cellval[3] = '';}
			$gtabid = $cellval[2];
			if($cellval[3]){
				$sqlquery = "SELECT ID FROM LMB_GTAB_GROUPDAT WHERE GROUP_ID = ".$session["user_id"]." AND DAT_ID = ".$cellval[1]." AND TAB_ID = ".$gtabid;
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				if(odbc_fetch_row($rs,1)){
					$sqlquery = "UPDATE LMB_GTAB_GROUPDAT SET COLOR = '$cellval[3]' WHERE GROUP_ID = ".$session["user_id"]." AND DAT_ID = $cellval[1] AND TAB_ID = ".$gtabid;
					$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
				}else{
					$sqlquery = "INSERT INTO LMB_GTAB_GROUPDAT (ID,GROUP_ID,TAB_ID,DAT_ID,COLOR) VALUES ($NEXTID,$session[group_id],".$gtab[tab_id][$gtabid].",$cellval[1],'$cellval[3]')";
					$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
					if(!$rs) {$commit = 1;}
				}
			}else{
				$sqlquery = "DELETE FROM LMB_GTAB_GROUPDAT WHERE GROUP_ID = ".$session["group_id"]." AND DAT_ID = $cellval[1] AND TAB_ID = ".$gtabid;
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			}
		}elseif($cellval[0] == 'td'){
			$gtabid = $cellval[2];
			if($cellval[3] == 'transparent'){$cellval[3] = '';}
			$sqlquery = "UPDATE LMB_RULES_FIELDS SET COLOR = '$cellval[3]' WHERE TAB_ID = ".$gtabid." AND GROUP_ID = ".$session["group_id"]." AND FIELD_ID = $cellval[1] AND EDIT = ".LMB_DBDEF_TRUE;
			$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			$gfield[$gtabid][color][$cellval[1]] = $cellval[3];
		}
	$bzm++;
	}
	
	lmb_EndTransaction(!$commit);
}


/**
 * sql where generator per field
 *
$gsr[tabid][filedid][count] ...
["txt"] = 1 : %$%
["txt"] = 2 : ==
["txt"] = 3 : $%
["txt"] = 4 : Metaphone
["txt"] = 5 : %$
["txt"] = 7 : #NULL
["txt"] = 8 : #NOTNULL

["num"] = 1 : =
["num"] = 2 : >
["num"] = 3 : <
["num"] = 4 : <=
["num"] = 5 : >=
["num"] = 6 : !=
["num"] = 7 : #NULL
["num"] = 8 : #NOTNULL

["cs"] = 0 : lower()
["cs"] = 1 : ==

[andor] = 1 : and
[andor] = 2 : or

[string] = 1: whole sentance (index serach)

[neg] = 1: negotiation

 */
function get_where($key,$gtabid,$gsr,$vquery = null){

	global $gtab;
	global $gfield;
	global $umgvar;
	global $session;
	global $case_sens_e;
	global $style_sens_e;
	global $lang;
	global $msel_count;
	static $quwac;
	
	$tab = $gtab["table"][$gtabid];
	if($vquery["child_alias"] == "LIMBAS_CHILD"){$tab = $LIMBAS_CHILD;}
	$query["from_"] = array();
	$bzm2 = 0;
	
	if(!is_array($gsr[$gtabid][$key])){return $query;}
	foreach ($gsr[$gtabid][$key] as $key1 => $value1){

		# workaround - have to change
		if(!is_numeric($key1) OR !$gfield[$gtabid]["id"][$key]){continue;}
		
		# default settings
		$case_sens_b = "%";
		$case_sens_e = "%";
		$style_sens_b = "lower(";
		$style_sens_e = ")";
		$like_sens_b = "=";
		
		unset($whr);
		$gsrres = $gsr[$gtabid][$key][$key1];				# searchvalue
		$gsstxt = $gsr[$gtabid][$key]["txt"][$key1];		# text sensitive		
		$gssnum = $gsr[$gtabid][$key]["num"][$key1];		# numeric
		$gsscs = $gsr[$gtabid][$key]["cs"][$key1];			# case sensitive
		$gsandor = $gsr[$gtabid][$key]["andor"][$key1]; 	# and or
		$gsstring = $gsr[$gtabid][$key]["string"][$key1];	# find all words
		$gsneg = $gsr[$gtabid][$key]["neg"][$key1];			# negation
		
		if($gsr[$gtabid][$key]["txt"][$key1] == 7){$gsrres = "#NULL#";$gsstxt == 0;}
		elseif($gsr[$gtabid][$key]["txt"][$key1] == 8){$gsrres = "#NOTNULL#";$gsstxt == 0;}
		elseif($gsr[$gtabid][$key]["num"][$key1] == 7){$gsrres = "#NULL#";$gssnum == 0;}
		elseif($gsr[$gtabid][$key]["num"][$key1] == 8){$gsrres = "#NOTNULL#";$gssnum == 0;}
		
		# Schnellsuche in Zahlen & Datum
		if($gsrres AND !$vquery AND ($gfield[$gtabid]["parse_type"][$key] == 1 OR $gfield[$gtabid]["parse_type"][$key] == 4 OR $gfield[$gtabid]["parse_type"][$key] == 5 OR $gfield[$gtabid]["parse_type"][$key] == 6)){
			$gsrres = preg_replace("/>=|<=|!=|>|<|=|!/","\\0 ",$gsrres); # Leerzeichen hinter Sonderzeichen setzen (für explode)
			$splitgs = explode(" ",$gsrres);
			if($splitgs[0] == "!=" OR $splitgs[0] == "!"){
				$gsneg = 1;
				$gsrres = trim(implode(" ",array_slice($splitgs, 1)));
			}elseif($splitgs[0] == ">" OR $splitgs[0] == "<" OR $splitgs[0] == "<=" OR $splitgs[0] == ">=" OR $splitgs[0] == "="){
				$like_sens_b = $splitgs[0];
				$gsrres = trim(implode(" ",array_slice($splitgs, 1)));
			}
		}elseif($gsrres AND !$vquery){
			$gsrres = preg_replace("/^!=/","\\0 ",$gsrres); # Leerzeichen hinter Sonderzeichen setzen (für explode)
			$splitgs = explode(" ",$gsrres);
			if($splitgs[0] == '!=' OR $splitgs[0] == '!'){
				$gsneg = 1;
				$gsrres = trim(implode(" ",array_slice($splitgs, 1)));
			}
		}

		# Filter anwenden
		if(!$gsandor) {$gsandor = 1;}
		if($gsstxt == 1){$case_sens_b = "%";$case_sens_e = "%";}elseif($gsstxt == 3){$case_sens_b = "";$case_sens_e = "%";}elseif($gsstxt == 2){$case_sens_b = "";$case_sens_e = "";}elseif($gsstxt == 5){$case_sens_b = "%";$case_sens_e = "";}
		if($gssnum == 2){$like_sens_b = ">";}elseif($gssnum == 3){$like_sens_b = "<";}elseif($gssnum == 4){$like_sens_b = "<=";}elseif($gssnum == 5){$like_sens_b = ">=";}elseif($gssnum == 6){$like_sens_b = "!=";}elseif(!$like_sens_b){$like_sens_b = "=";}
		if($gsscs){$style_sens_b = "";$style_sens_e = "";}
		if($gsneg){$like_neg = "NOT";}else{$like_neg = "";}
		if($gsrres == "IS NULL" OR $gsrres == "IS NOT NULL" OR $gsrres == "#NULL#" OR $gsrres == "#NULL#" OR $gsrres == "#NOTNULL#" OR $gsrres == "#NOT#"){$like_sens_b = "";$like_sens_e = "";$case_sens_b="";$case_sens_e="";$style_sens_b="";$style_sens_e="";$noeregi = 1;}

		if($gsrres OR $gsrres == '0') {
			if(preg_match("/".$gfield[$gtabid]["regel"][$key]."/",$gsrres) OR $noeregi){
			# --- SQL Argument -----
			if($gfield[$gtabid]["argument_typ"][$key] == 47){
				# number int
				if($gfield[$gtabid]["parse_type"][$key] == 1){
					$whr[] = $gfield[$gtabid]["argument"][$key]." = ".parse_db_int($gsrres,$gfield[$gtabid]["size"][$key]);
				# number float
				}elseif($gfield[$gtabid]["parse_type"][$key] == 6){
					$whr[] = $gfield[$gtabid]["argument"][$key]." = ".parse_db_float($gsrres,$gfield[$gtabid]["size"][$key]);
				# string
				}elseif($gfield[$gtabid]["parse_type"][$key] == 2){
					$whr[] = $style_sens_b.$gfield[$gtabid]["argument"][$key].$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".ltrim(parse_db_string($gsrres,250))."$case_sens_e'$style_sens_e ";
				# date
				}elseif($gfield[$gtabid]["parse_type"][$key] == 4){
					if($gfield[$gtabid]["data_type"][$key] == 40){$onlydate = 1;}else{$onlydate = 0;}
					$whr[] = $gfield[$gtabid]["argument"][$key]." $like_sens_b '".convert_date($gsrres,$onlydate)."' ";
				}
			# --- DATUM --
			}elseif($gfield[$gtabid]["parse_type"][$key] == 4){
				if($gfield[$gtabid]["data_type"][$key] == 40){$onlydate = 1;}else{$onlydate = 0;}
				
				# NULL value
				if($gsrres=="#NULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NULL";
				# NOT NULL value
				}elseif($gsrres=="#NOTNULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NOT NULL";
				# Kalenderwoche
				}elseif(preg_match("/^[CKWckw]{2}.?[0-9]{1,2}.?[0-9]{0,4}$/",$gsrres)){
					$gsrres_ = trim(preg_replace("/^[CKWckw]{2}[^\d]?/","",$gsrres));
					$gsrres_ = preg_replace("/[^\d]/","-",$gsrres_);
					$gsrres_ = explode("-",$gsrres_);
					if(lmb_strlen($gsrres_[1]) == 2){$gsrres_[1] = "20".$gsrres_[1];}
					if(!$gsrres_[1]){$gsrres_[1] = date("Y");}
					$gsrres_stamp = get_mondaykw($gsrres_[0],$gsrres_[1]);
					$gsrres_m = convert_stamp($gsrres_stamp,$onlydate);
					$gsrres_s = convert_stamp($gsrres_stamp+604800,$onlydate); #518400
					if($like_sens_b == ">" OR $like_sens_b == "<="){
						$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '$gsrres_s'";
					}elseif($like_sens_b == "<" OR $like_sens_b == ">="){
						$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '$gsrres_m'";
					}else{
						$whr[] = $like_neg." (".$tab.".".$gfield[$gtabid]["field_name"][$key]." >= '$gsrres_m' AND ".$tab.".".$gfield[$gtabid]["field_name"][$key]." < '$gsrres_s')";
					}
				# falls nur Jahr eingegeben wurde
				}elseif(preg_match("/^[12]{0,1}[90]{0,1}[0-9]{0,1}[0-9]{1}$/",$gsrres)){
					$whr[] = $like_neg." ".LMB_DBFUNC_YEAR.$tab.".".$gfield[$gtabid]["field_name"][$key].") $like_sens_b $gsrres";
				# falls nur Jahr mit Monat
				}elseif(preg_match("/^[0-3]{0,1}[0-9]{1}.?[12]{0,1}[90]{0,1}[0-9]{0,1}[0-9]{1}$/",$gsrres)){
					if($gfield[$gtabid]["data_type"][$key] == 11 OR $gfield[$gtabid]["field_type"][$key] == 15){$t = 0;}else{$t = 1;}
					$gsrres_ = preg_replace("/[^\d]/","-",$gsrres);
					$gsrres_ = explode("-",$gsrres_);
					$gsrres_m = convert_stamp(mktime(0,0,0,$gsrres_[0],1,$gsrres_[1]),$t);
					$gsrres_s = convert_stamp(mktime(23,59,59,$gsrres_[0]+1,0,$gsrres_[1]),$t);
					if($like_sens_b == ">" OR $like_sens_b == "<="){
						$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '".$gsrres_s."' ";
					}elseif($like_sens_b == "<" OR $like_sens_b == ">="){
						$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '".$gsrres_m."' ";
					}else{
						$whr[] = $like_neg." (".$tab.".".$gfield[$gtabid]["field_name"][$key]." >= '".$gsrres_m."' AND ".$tab.".".$gfield[$gtabid]["field_name"][$key]." <= '".$gsrres_s."') ";
					}
				# falls ganzes Datum mit Zeit
				}elseif($gfield[$gtabid]["datetime"][$key] != 1 AND lmb_substr(convert_date($gsrres,$onlydate),11,8) != '00:00:00'){
					$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '".convert_date($gsrres,$onlydate)."' ";
				# falls ganzes Datum ohne Zeit
				}else{
					$whr[] = $like_neg." ".LMB_DBFUNC_DATE.$tab.".".$gfield[$gtabid]["field_name"][$key].") $like_sens_b '".convert_date($gsrres,1)."' ";
				}
			# --- Zeit --
			}elseif($gfield[$gtabid]["field_type"][$key] == 7){
				if($gsrres=="#NULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NULL";
				}elseif($gsrres=="#NOTNULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NOT NULL";
				}else{
					$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b '$gsrres' ";
				}
			# --- Zahlen --
			}elseif($gfield[$gtabid]["field_type"][$key] == 5 OR $gfield[$gtabid]["field_type"][$key] == 12){
				# --- Filesize --
				if($gfield[$gtabid]["data_type"][$key] == 44){
					$gsrres = file_size_convert($gsrres);
				}

				# --- Number --
				if($gsrres=="#NULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NULL";
				}elseif($gsrres=="#NOTNULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NOT NULL";
				}else{
					$whr[] = $like_neg." ".$tab.".".$gfield[$gtabid]["field_name"][$key]." $like_sens_b ".parse_db_float($gsrres)." ";
				}
			# ------- BOOLEAN -------
			}elseif($gfield[$gtabid]["field_type"][$key] == 10){
				if(is_null($gsrres) OR $gsrres == "0" OR lmb_strtoupper($gsrres) === "FALSE"){$gsrres = LMB_DBDEF_FALSE;}
				else{$gsrres = LMB_DBDEF_TRUE;}
				if($gsrres=="#NULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NULL";
				}elseif($gsrres=="#NOTNULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NOT NULL";
				}else{
					$whr[] = $tab.".".$gfield[$gtabid]["field_name"][$key]." = ".$gsrres." ";
				}
			# --- Mimetype --
			}elseif($gfield[$gtabid]["data_type"][$key] == 45){
				$whr[] = $tab.".".$gfield[$gtabid]["field_name"][$key]." = LMB_MIMETYPES.ID AND ".$style_sens_b."LMB_MIMETYPES.MIMETYPE".$style_sens_e." LIKE $style_sens_b'$case_sens_b".ltrim(parse_db_string($gsrres,$gfield[$gtabid]["size"][$key]))."$case_sens_e'$style_sens_e ";
				$query["from_"][] = "LMB_MIMETYPES";
			# --- Verknüpfung --
			}elseif($gfield[$gtabid]["field_type"][$key] == 11){

				if($key1 > 0){break;}

				unset($vwhr);
				$hassearch = 0;
				# --- falls zu durchsuchende Verknüpfungsfelder -----
				if($gfield[$gtabid]["verknsearch"][$key]){

					$verk_tabid = $gfield[$gtabid]["verkntabid"][$key];

					if($gtab["sverkn"][$gtabid]){
						$query["from_"][] = $gtab["table"][$verk_tabid]." LIMBAS_CHILD";
						$LIMBAS_CHILD = "LIMBAS_CHILD";
					}else{
						$LIMBAS_CHILD = $gtab["table"][$verk_tabid];
					}

					$vquery["child_alias"] = $LIMBAS_CHILD;
					$vquery["aval"][] = $tab.".ID = ".$gfield[$gtabid]["md5tab"][$key].".ID AND ".$gfield[$gtabid]["md5tab"][$key].".VERKN_ID = ".$LIMBAS_CHILD.".ID";

					# --- Liste aller zu durchsuchenden Verknüpfungsfelder ---
					foreach($gfield[$gtabid]["verknsearch"][$key] as $vkey => $verk_fieldid){
						if($gfield[$verk_tabid]["sort"][$verk_fieldid]){
						if($gsrres=="#NOTNULL#"){
							$vwhr[] = $LIMBAS_CHILD.".".$gfield[$verk_tab]["field_name"][$verk_field]." IS NOT NULL";
						}elseif($gsrres=="#NULL#"){
						}else{
							$gsr_[$verk_tabid][$verk_fieldid] = $gsr[$gtabid][$key];
							$gsr_[$verk_tabid][$verk_fieldid]["neg"] = null;
							$vwhr = get_where($verk_fieldid,$verk_tabid,$gsr_,$vquery);
							$query["from_"] = array_merge($query["from_"],$vwhr["from_"]);
							if(!$vwhr["aval"]){$vwhr["aval"] = array();}
							$query["aval"] = array_merge($vquery["aval"],$vwhr["aval"]);
							$query["vwhere"] = $vwhr["vwhere"];
							if($vwhr["where"][0]){
								$vvalue[] = $vwhr["where"][0];
							}
						}
						}
					}

					if($gsrres=="#NULL#"){
						$whr[] = "(".$tab.".ID not in (select ID from ".$gfield[$gtabid]["md5tab"][$key]."))";
						$hassearch = 1;
					}elseif($vwhr){
						if($gsrres=="#NOTNULL#"){
							$whr[] = "(".$tab.".ID = ".$gfield[$gtabid]["md5tab"][$key].".ID
								AND ".$gfield[$gtabid]["md5tab"][$key].".VERKN_ID = ".$LIMBAS_CHILD.".ID)";
						}else{
							if($vvalue){$query["vwhere"][] = "( $like_neg (".implode(" OR ",$vvalue)."))";}
						}
						$hassearch = 1;
					}

					if($hassearch){
						$query["from_"][] = $gtab["table"][$verk_tabid];
						$query["from_"][] = $tab;
						$query["from_"][] = $gfield[$gtabid]["md5tab"][$key];
						$query["distinct"] = 1;
					}
				}
			# --- M-Select/Attribute -----
			}elseif($gfield[$gtabid]["data_type"][$key] == 31 OR $gfield[$gtabid]["data_type"][$key] == 32 OR $gfield[$gtabid]["data_type"][$key] == 18 OR $gfield[$gtabid]["data_type"][$key] == 46){
				// SELECT / ATTRIBUTE
				if($gfield[$gtabid]["field_type"][$key] == 19){$tb = "LMB_ATTRIBUTE";}else{$tb = "LMB_SELECT";}
				
				// multilang
            	$field_name = 'WERT';
            	if($gfield[$gtabid]['multilang'][$key] == 2){
            	    $field_name = 'LANG'.$session['language'].'_WERT';
            	}
				
				$msel_count++;
				$msw = "LMB_MSEL_W".$msel_count;
				$msd = "LMB_MSEL_D".$msel_count;
				
				$query["from_"][] = $tb."_W AS $msw";
				$query["from_"][] = $tb."_D AS $msd";
				
				$query["where_glob"][] = "$msd.FIELD_ID = $key";
				$query["where_glob"][] = "$msd.TAB_ID=$gtabid";
				$query["where_glob"][] = "$tab.ID = $msd.DAT_ID";
				$query["where_glob"][] = "$msd.W_ID = $msw.ID";

				$query["distinct"] = 1;
				
				$whr[] = $style_sens_b.$msw.".".$field_name.$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,160)."$case_sens_e'$style_sens_e";
				
				
				
				#if($gsandor == 2 OR $gsandor_next == 2){
					#$msel_orquery[] = $msel_where;
				# UND Abfrage
				#}elseif($gsandor == 1){
					#$msel_orquery[] = $msel_where;
				#}

				/*
				# ODER Abfrage
				if($gsandor == 2 OR $gsandor_next == 2){
					$msel_orquery[] = "($msel_search AND $msd.FIELD_ID = $key AND $msd.TAB_ID=$gtabid AND $tab.ID = $msd.DAT_ID AND $msd.w_id = $msw.id)";
				# UND Abfrage
				}elseif($gsandor == 1){
					$msel_orquery[] = "($msel_search AND $msd.FIELD_ID = $key AND $msd.TAB_ID=$gtabid AND $tab.ID = $msd.DAT_ID AND $msd.w_id = $msw.id)";
				}
				*/
				
				/*
				# next gsandorc
				$gsandor_next = $gsr[$gtabid][$key]["andor"][($key1+1)];
				$msel_query2 = $style_sens_b.$tb."_W.WERT".$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,160)."$case_sens_e'$style_sens_e";
				# ODER Abfrage
				if($gsandor == 2 OR $gsandor_next == 2){
					$msel_orquery[] = $msel_query2;
				# UND Abfrage
				}elseif($gsandor == 1){
					$msel_query[] = "SELECT DISTINCT ".$tb."_D.DAT_ID AS LMB_MSEL_REF_".$gfield[$gtabid]["form_name"][$key]." FROM ".$tb."_D,(SELECT ID AS LMB_MSEL_ID_".$gfield[$gtabid]["form_name"][$key]."  FROM ".$tb."_W WHERE ".$msel_query2.") AS QUWA".($quwac++)." WHERE LMB_MSEL_ID_".$gfield[$gtabid]["form_name"][$key]." = ".$tb."_D.W_ID AND TAB_ID = $gtabid AND FIELD_ID = $key";
				}
				*/
			# --- Select -----
			}elseif($gfield[$gtabid]["field_type"][$key] == 4 AND $gfield[$gtabid]["artleiste"][$key]){
				$whr[] = $tab.".".$gfield[$gtabid]["field_name"][$key]." = '".parse_db_string($gsrres,160)."'";
			# --- User/Group List -----
			}elseif($gfield[$gtabid]["field_type"][$key] == 16){
				if(lmb_strpos($gsrres,"#") !== false){
					if(lmb_strtolower(lmb_substr($gsrres,0,3)) == "#u#"){$gsrres = trim(lmb_substr($gsrres,2,99));$onlyuser=1;}
					elseif(lmb_strtolower(lmb_substr($gsrres,0,3)) == "#g#"){$gsrres = trim(lmb_substr($gsrres,2,99));$onlygroup=1;}
				}
				
				if($onlygroup){
					$query["from_"][] = "LMB_GROUPS";
					$whr[] = $gtab["table"][$gtabid].".ID = LMB_UGLST.DATID";
					$whr[] = "LMB_UGLST.UGID = LMB_USERDB.USER_ID";
					$whr[] = "LMB_UGLST.TYP = 'g'";
					$whr[] = "$style_sens_b LMB_GROUPS.NAME $style_sens_e $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,80)."$case_sens_e'$style_sens_e";
				}elseif($onlyuser){
					$query["from_"][] = "LMB_USERDB";
					$whr[] = $gtab["table"][$gtabid].".ID = LMB_UGLST.DATID";
					$whr[] = "LMB_UGLST.UGID = LMB_USERDB.USER_ID";
					$whr[] = "LMB_UGLST.TYP = 'u'";
					$whr[] = "$style_sens_b LMB_USERDB.VORNAME".LMB_DBFUNC_CONCAT."' '".LMB_DBFUNC_CONCAT."LMB_USERDB.NAME $style_sens_e $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,80)."$case_sens_e'$style_sens_e";
				}else{
					$query["from_"][] = "LMB_GROUPS";
					$query["from_"][] = "LMB_USERDB";
					
					$whr[] = $gtab["table"][$gtabid].".ID = LMB_UGLST.DATID";
					$whr[] = "(
					".$gtab["table"][$gtabid].".ID = LMB_UGLST.DATID
					AND
					(
					($style_sens_b LMB_USERDB.VORNAME".LMB_DBFUNC_CONCAT."' '".LMB_DBFUNC_CONCAT."LMB_USERDB.NAME $style_sens_e $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,80)."$case_sens_e'$style_sens_e
					AND LMB_UGLST.TYP = 'u' AND LMB_UGLST.UGID = LMB_USERDB.USER_ID)
					OR
					($style_sens_b LMB_GROUPS.NAME $style_sens_e $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,80)."$case_sens_e'$style_sens_e
					AND LMB_UGLST.TYP = 'g' AND LMB_UGLST.UGID = LMB_GROUPS.GROUP_ID)
					)
					)
				";
				}
				$query["from_"][] = "LMB_UGLST";
				
			# --- Erst/Edit-User -----
			}elseif($gfield[$gtabid]["field_type"][$key] == 14){
				$field = $gfield[$gtabid]["field_name"][$key];
				if(is_numeric($gsrres)){
					if($gfield[$gtabid]["field_type"][$key] == 16){
						$whr[] = $tab.".".$gfield[$gtabid]["field_name"][$key]." = '".parse_db_int($gsrres,10)."' ";
					}else{
						$whr[] = $tab.".".$gfield[$gtabid]["field_name"][$key]." = ".parse_db_int($gsrres,10)." ";
					}
				}else{
					$whr_tmp1 = "(".$style_sens_b."LMB_USERDB.USERNAME".$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,50)."$case_sens_e'$style_sens_e ";
					$whr_tmp1 .= "OR ".$style_sens_b."LMB_USERDB.VORNAME".$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,50)."$case_sens_e'$style_sens_e ";
					$whr_tmp1 .= "OR ".$style_sens_b."LMB_USERDB.NAME".$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".parse_db_string($gsrres,50)."$case_sens_e'$style_sens_e )";
					$whr[] = $whr_tmp1;
					if($gfield[$gtabid]["field_type"][$key] == 16){
						$whr[] = "LMB_USERDB.USER_ID = NUM('0' & SUBSTR(".$tab.".".$field.",2,10))";
					}else{
						$whr[] = "LMB_USERDB.USER_ID = ".$tab.".".$field;
					}
					$query["from_"][] = "LMB_USERDB";
				}
			# --- Memo /File Index -----
			}elseif(($gfield[$gtabid]["data_type"][$key] == 39 AND !$gfield[$gtabid]["longhandle"][$key]) OR $gfield[$gtabid]["field_type"][$key] == 6 OR $gfield[$gtabid]["field_type"][$key] == 20){
				if($gfield[$gtabid]["field_type"][$key] == 6){
					$df = "F";
					$rf = "FID";
					$tb = "LDMS_FILES";
					$query["from_"][] = "LDMS_FILES";
					$tr = " AND LDMS_FILES.TABID = $gtabid AND LDMS_FILES.FIELDID = $key AND $tab.ID = LDMS_FILES.DATID";
				}elseif ($gfield[$gtabid]["data_type"][$key] == 39){
					$df = "D";
					$rf = "REF";
					$tf = " AND TABID = $gtabid AND FIELDID = $key";
					$tb = $tab;
				}elseif ($gfield[$gtabid]["field_type"][$key] == 20){
					$df = "F";
					$rf = "FID";
					$tb = $tab;
				}

				# Wortliste
				$tmp = explode(" ",$gsrres);
				$tmp = array_slice ($tmp, 0, 4);
				$gsrres = implode(" ",$tmp);
				
				# as default search for whole word
				if(!$gsstxt){$case_sens_b = "";$case_sens_e="";}
				
				# ganzer Satz
				$s = "S";
				if($gsstring){
					$s = "";
				}

				# next gsandor
				$gsandor_next = $gsr[$gtabid][$key]["andor"][($key1+1)];

				# Index Level
				if($umgvar["indize_level"] == 1){$s = "S";}

				foreach($tmp as $key2 => $value2){

					$val = parse_db_string($value2,40);
					# Metaphone
					if($gsstxt == 4){
						$mf = "METAPHONE";$ffilter["content_ts"][$fid] = "checked";$ffilter["content_ts"][$fid] = "";$val = soundex($val);$ml = "=";$case_sens_b="";$case_sens_e="";				
					}
					# CaseSensitiv
					elseif($umgvar["indize_cs"]){
						if($gsscs){
							$mf = "VAL";
						}else{
							$mf = "UPPERVAL";$val = lmb_strtoupper($val);
						}
					}else{
						$mf = "VAL";$val = lmb_strtolower($val);
					}
					
					# Casesensitiv
					if($case_sens_b OR $case_sens_e){$ml = "LIKE";}else{$ml = "=";}

					$view_query2[$key2] = "LMB_INDIZE_W.".$mf." $like_neg $ml '".$case_sens_b.$val.$case_sens_e."'";
					# ODER Abfrage
					if($gsandor == 2 OR $gsandor_next == 2){
						$view_orquery[] = $view_query2[$key2];
					# UND Abfrage
					}elseif($gsandor == 1){
						$view_query[] = "SELECT DISTINCT LMB_INDIZE_$df$s.$rf AS LMB_INDIZE_REF_".$gfield[$gtabid]["form_name"][$key]." FROM LMB_INDIZE_$df$s,(SELECT ID AS LMB_INDIZE_ID_".$gfield[$gtabid]["form_name"][$key]."  FROM LMB_INDIZE_W WHERE ".$view_query2[$key2].") AS QUWA".($quwac++)." WHERE LMB_INDIZE_ID_".$gfield[$gtabid]["form_name"][$key]." = LMB_INDIZE_$df$s.WID $tf";
					}
				}
			# --- Default --
			}else{
				if($gsrres=="#NULL#"){
					$whr[] = "(".$gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NULL OR ".$gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " = '')";
				}elseif($gsrres=="#NOTNULL#"){
					$whr[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["field_name"][$key] . " IS NOT NULL";
				}else{
					$whr[] = $style_sens_b.$tab.".".$gfield[$gtabid]["field_name"][$key].$style_sens_e." $like_neg LIKE $style_sens_b'$case_sens_b".ltrim(parse_db_string($gsrres,250))."$case_sens_e'$style_sens_e ";
				}
			}
			$bzm2++;
		}
		}

		if($whr){
			$whr = array_unique($whr);
			if($gsandor == 1 AND $whr2){if(count($whr) > 1){$whr2 .= " AND (".implode(" AND ",$whr).")";}else{$whr2 .= " AND ".$whr[0];}}
			elseif($gsandor == 2 AND $whr2){if(count($whr) > 1){$whr2 .= " OR (".implode(" AND ",$whr).")";}else{$whr2 .= " OR ".$whr[0];}}
			else{if(count($whr) > 1){$whr2 .= "(".implode(" AND ",$whr).")";}else{$whr2 .= $whr[0];}}
		}
	}

	# ---  Memo /File Index -----
	if(($gfield[$gtabid]["data_type"][$key] == 39 AND !$gfield[$gtabid]["longhandle"][$key]) OR $gfield[$gtabid]["field_type"][$key] == 6 OR $gfield[$gtabid]["field_type"][$key] == 20){

		# ODER Abfrage
		if($view_orquery){
			$view_query[] = "SELECT DISTINCT LMB_INDIZE_$df$s.$rf AS LMB_INDIZE_REF_".$gfield[$gtabid]["form_name"][$key]." FROM LMB_INDIZE_$df$s ,(SELECT ID AS LMB_INDIZE_ID_".$gfield[$gtabid]["form_name"][$key]."  FROM LMB_INDIZE_W WHERE ".implode(" OR ",$view_orquery).") AS QUWB".($quwbc++)." WHERE LMB_INDIZE_ID_".$gfield[$gtabid]["form_name"][$key]."  = LMB_INDIZE_$df$s.WID $tf";
		}
		if($view_query){
			$query["from_"][] = "((".implode(") INTERSECT (",$view_query).")) AS QUWA".($quwac++);
			$query["where"][] = "(".$tb.".ID = LMB_INDIZE_REF_".$gfield[$gtabid]["form_name"][$key].$tr.")";
		}
	# --- M-Select/Attribute -----
	#}elseif($gfield[$gtabid]["data_type"][$key] == 31 OR $gfield[$gtabid]["data_type"][$key] == 32 OR $gfield[$gtabid]["data_type"][$key] == 18 OR $gfield[$gtabid]["data_type"][$key] == 46){

		# ODER Abfrage
		#if($msel_orquery){
		#	$query["where"][] = implode(" OR ",$msel_orquery);
		#}
		#if($msel_query){
		#	$query["where"][] = implode(" AND ",$msel_query);
		#}
		
		
		/*
		# ODER Abfrage
		if($msel_orquery){
			$msel_query[] = "SELECT DISTINCT ".$tb."_D.DAT_ID AS LMB_MSEL_REF_".$gfield[$gtabid]["form_name"][$key]." FROM ".$tb."_D,(SELECT ID AS LMB_MSEL_ID_".$gfield[$gtabid]["form_name"][$key]."  FROM ".$tb."_W WHERE ".implode(" OR ",$msel_orquery).") AS QUWA".($quwbc++)." WHERE LMB_MSEL_ID_".$gfield[$gtabid]["form_name"][$key]." = ".$tb."_D.W_ID AND TAB_ID = $gtabid AND FIELD_ID = $key";
		}
		if($msel_query){
			$query["from_"][] = "((".implode(") INTERSECT (",$msel_query).")) AS QUWA".($quwac++);
			$query["where"][] = "(".$tab.".ID = LMB_MSEL_REF_".$gfield[$gtabid]["form_name"][$key].")";
		}
		*/
	}elseif($whr2){
		$query["where"][] = "(".$whr2.")";
	}

	return $query;
}

# ------------ Gruppenfilter/Rechte------------
function get_queryrules($gtabid){
	global $gfield;
	global $gtab;
	global $session;

	$query["from"] = array();
	$query["where"] = array();
	$where1 = array();
	$where2 = array();
	$where3 = array();
	
	# ------------ list of active filters ------------
	foreach($gfield[$gtabid]["filter"] as $fieldid => $val){
		if($gfield[$gtabid]["data_type"][$fieldid] == 18 OR $gfield[$gtabid]["data_type"][$fieldid] == 31){$query["distinct"] = 1;}
		
		$where1 = array();
		foreach ($gfield[$gtabid]["filter"][$fieldid] as $fkey => $fval){
			# filter rule
			if($gfield[$gtabid]["filtertyp"][$fieldid][$fkey] == 1){
				$gsr[$gtabid][$fieldid] = unserialize($fval);
				$qu = get_where($fieldid,$gtabid,$gsr);
				if($qu['where_glob']){$query["where"] = array_merge($query["where"],$qu['where_glob']);}
				$query["from"] = array_merge($qu["from_"],$query["from"]);
				$where1[] = implode(" AND ",$qu["where"]);
			# manual filter
			}elseif($gfield[$gtabid]["filtertyp"][$fieldid][$fkey] == 2){
				# function based extension (return MyExt_)
				if(lmb_substr($fval,0,6) == 'return'){
					$qu = eval($fval);
					$where1 = $qu['where'];
					if($qu['from']){$query['from'] = array_merge($query['from'],$qu['from']);}
				# fieldbased extension (mytable.name = 'name')
				}else{
					eval("\$filter_2 = \"".$fval."\";");
					$query["from"][] = $gtab["table"][$gtabid];
					$where1[] = $filter_2;
				}
			}
		}

		if(count($where1) > 1){
			$where2[0] = "(".implode(") OR (",$where1).")";
			$distinct = "DISTINCT";
		}elseif(count($where1) == 1){
			$where2[0] = $where1[0];
		}

		$where3 = array_merge($where3,$where2);


	}
	# --- Gruppenfilter --------
	if(count($where3) > 1){
		$query["where"][] = "(".implode(" AND ",$where3).")";
	}elseif($where3){
		$query["where"][] = "(".$where3[0].")";
	}
	
	return $query;
}

/**
 * create sqlquery
 *
 * @param unknown_type $gtabid
 * @param unknown_type $utyp
 * @param unknown_type $filter
 * @param unknown_type $gsr
 * @param unknown_type $verkn
 * @param array $onlyfield	array[gtabid][array[filedid]]
 * @param unknown_type $single
 * @param unknown_type $extension
 * @return unknown
 */
function get_sqlquery($gtabid,$utyp,$filter,$gsr,$verkn,$onlyfield=null,$single=null,$extension=null,$pointer=null){

	unset($orderque);
	unset($where_over);

	global $gtab;
	global $gfield;
	global $session;
	global $umgvar;
	global $db;
	global $action;
	global $gform;
	global $LINK;
	
	# extension for relations use $gsr
	if($verkn["relext"] AND !$verkn["showonly"]){
		if($a = eval($verkn["relext"])){return $a;}
		$extselect = $select;
		$extfrom = $from;
		$extwhere = $where;
		$extojoin = $join;
		$extorder = $order;
	}
	
	# extension for snapshot
	if($filter["extension"][$gtabid]){
		$extension = $filter["extension"][$gtabid];
	}

	$query["where"] = array();
	$query["from"] = array();
	$query["select"] = array();
	$query["from_"] = array();
	$select = array();
	$from = array();
	$where = array();
	$tablist = array();
	$ojoin = array();
	if(!$gsr){$gsr = array();}

	# Tabellenliste bei 1:1 Verknüpfung auch ohne Rechte
	if($gtab["raverkn"][$gtab["verkn"][$gtabid]]){
	foreach($gtab["raverkn"][$gtab["verkn"][$gtabid]] as $key => $ragtabid){
		$tablist[] = $ragtabid;
	}}
	
	# Feldliste für definierte Felder
	if($onlyfield){
		if(is_array($onlyfield)){
			foreach($onlyfield as $fgtabid => $fieldarray){
				if(is_array($fieldarray)){
					foreach($fieldarray as $key => $fieldid){

						# only 1:1 relation | 1:x relation not supported here | 1:x only for reports | simulate 1:1 for relationparams
						if($fgtabid != $gtabid AND $gtab["verkn"][$fgtabid] != $gtab["verkn"][$gtabid] AND !$verkn['verknparams'] AND !$filter["report"][$gtabid]){continue;}
						if($gfield[$fgtabid]["id"][$fieldid]){
							# SQL Argument
							if($gfield[$fgtabid]["argument_typ"][$fieldid] == 47 AND !$gfield[$fgtabid]["argument_edit"][$fieldid]){
								if(!$gfield[$fgtabid]["argument"][$fieldid]){$arg = "''";}else{$arg = $gfield[$fgtabid]["argument"][$fieldid];}
								$select[] = $arg." AS ".$gfield[$fgtabid]["form_name"][$fieldid];
							# do not use long fiels in some databases with "distinct" / use allways for reports 
							}elseif($gfield[$fgtabid]["data_type"][$fieldid] != 39 OR $gfield[$fgtabid]["longhandle"][$fieldid] OR $filter["report"]){
								$select[] = $gtab["table"][$fgtabid].".".$gfield[$fgtabid]["field_name"][$fieldid]." AS ".$gfield[$fgtabid]["form_name"][$fieldid];
							}
							# Zusatz Währung
							if($gfield[$fgtabid]["data_type"][$fieldid] == 30){
								$select[] = $gtab["table"][$fgtabid].".".$gfield[$fgtabid]["field_name"][$fieldid]."_C AS ".$gfield[$fgtabid]["form_name"][$fieldid]."_C";
							}
							$query["from_"][] = $gtab["table"][$fgtabid];
						}
					}
				}
				# 1:1 Verknüpfung
				if($fgtabid != $gtabid AND $gtab["verkn"][$fgtabid] == $gtab["verkn"][$gtabid]){
					$where[] = $gtab["table"][$gtabid].".ID = ".$gtab["table"][$fgtabid].".ID";
					$query["from_"][] = $gtab["table"][$fgtabid];
				}
				
				# relation params
				if($fgtabid != $gtabid AND $verkn['verknparams']){
					$tablist[] = $fgtabid;
					$query["from_"][] = $gtab["table"][$fgtabid];
					$select[] = $gtab["table"][$fgtabid].".".$gtab["keyfield"][$fgtabid];
				}
			}
		}elseif ($onlyfield === $gtab["keyfield"][$gtabid]){
			
		}

	# alle Felder
	}elseif($gfield[$gtabid]["select"]){
		$select = $gfield[$gtabid]["select"];
	}

	# Tabellen-Array
	$tablist = array_unique($tablist);

	# --- Orderfeld extrahieren ----------
	if(is_array($filter["order"][$gtabid])){
		$orderset = $filter["order"][$gtabid];
	}elseif($filter["order"][$gtabid]){
		$orderset = explode("#",$filter["order"][$gtabid]);
		if(!is_array($orderset)){
			$orderset[0] = $filter["order"][$gtabid];
		}
	}else{
		$orderset = array();
	}

	# --- Spezifische Datensatzrechte -----------------------------------
	if($gtab["has_userrules"][$gtabid] AND !$gtab["edit_userrules"][$gtabid]){
		$query["from_"][] = "LMB_RULES_DATASET";
		$where[] = "(".$gtab["table"][$gtabid].".ID = LMB_RULES_DATASET.DATID AND LMB_RULES_DATASET.TABID = $gtabid AND (LMB_RULES_DATASET.USERID = ".$session["user_id"]." OR LMB_RULES_DATASET.GROUPID IN (".implode(",",$session["subgroup"]).")))";
		$distinct = "DISTINCT";
	}
	
	# Schleife über 1:1 Tabellen
	foreach($tablist as $key0 => $fgtabid){

		# --- Spezifische Datensatzrechte -----------------------------------
		#if($gtab["has_userrules"][$fgtabid] AND !$gtab["edit_userrules"][$fgtabid]){
		#	$query["from_"][] = "LMB_RULES_DATASET";
		#	$where[] = "(".$gtab["table"][$gtabid].".ID = LMB_RULES_DATASET.DATID AND LMB_RULES_DATASET.TABID = $fgtabid AND (LMB_RULES_DATASET.USERID = ".$session["user_id"]." OR LMB_RULES_DATASET.GROUPID IN (".implode(",",$session["subgroup"]).")))";
		#}
	
		$query["where2"] = array();
		$query["where1"] = array();
		
		# ------------ Suchkriterien ------------
		if($utyp AND $gsr[$fgtabid]){
			foreach($gsr[$fgtabid] as $key => $val){
				$qu = get_where($key,$fgtabid,$gsr);
				# falls Suchkriterium
				if(count($qu["where"])>0){
					# 1:1 Verknüpfungen einbinden
					if($fgtabid != $gtabid AND $gtab["verkn"][$fgtabid] == $gtab["verkn"][$gtabid]){
						$qu["where"][] = $gtab["table"][$gtabid].'.'.$gtab["keyfield"][$gtabid].' = '.$gtab["table"][$fgtabid].'.'.$gtab["keyfield"][$fgtabid];
						$qu["from_"][] = $gtab["table"][$fgtabid];
					}
				}
	
				$query["from_"] = array_merge($qu["from_"],$query["from_"]);
				
				# globale where in oberster Ebene
				if($qu['where_glob']){
					$where = array_merge($where,$qu['where_glob']);
				}
				
				if($qu["where"]){
					$query["where1"][] = implode(" AND ",$qu["where"]);
				}
				# Verknüpfungsbaum Unterabfragen
				if($qu["vwhere"]){
					$query["where1"][] = "(".implode(" OR ",$qu["vwhere"]).")";
				}
	
				# alle Verknüpfungsabfragen on top
				if($qu["aval"]){
					$where[] = "(".implode(" AND ",array_unique($qu["aval"])).")";
				}
	
				# Distinct auch für rowcount (maxdb workaround) ($umgvar["showcount"])
				# Bei Soap unbedingt $umgvar["showcount"] = 1 setzen !! (wegen LONG Feldern)
				#if($qu["distinct"] OR !$umgvar["showcount"]){$distinct = "DISTINCT";}
				if($qu["distinct"]){$distinct = "DISTINCT";}
			}
			# --- Suchkriterien --------
			if($gsr[$fgtabid]["andor"] == 2){$andor = "OR";}else{$andor = "AND";}
			if($query["where1"]){if(count($query["where1"]) > 1){$where[] = "(".implode(" $andor ",$query["where1"]).")";}else{$where[] = $query["where1"][0];}}
		}
		
		foreach($gfield[$fgtabid]["indize"] as $key => $val){
			if($gfield[$fgtabid]["indize"][$key] AND $single AND $gtabid == $fgtabid){ # AND $gtabid == $fgtabid
				$select[] = $gtab["table"][$fgtabid].".IND_$key,".$gtab["table"][$fgtabid].".INDD_$key";
			}
		}
		
		# ------------ Gruppenfilter/Rechte------------
		if(count($gfield[$fgtabid]["filter"]) > 0){
			$qrules = get_queryrules($fgtabid);
			$query["from_"] = array_merge($query["from_"],$qrules["from"]);
			$where = array_merge($where,$qrules["where"]);
			if($qrules["distinct"]){$distinct = "DISTINCT";}
		}
		

		#$select[] = $gtab["table"][$fgtabid].".".$gtab["keyfield"][$fgtabid];
		
		
		
	}

	$query["from_"][] = $gtab["table"][$gtabid];
	$from = $query["from_"];

	/*----------------- Select-Array -------------------*/
	# no view
	if($gtab["typ"][$gtabid] == 5 AND $gfield[$gtabid]["argresult_name"]["ID"]){
		$select[] = $gtab["table"][$gtabid].'.'.$gtab["keyfield"][$gtabid];
	}elseif($gtab["typ"][$gtabid] != 5){
		$select[] = $gtab["table"][$gtabid].".".$gtab["keyfield"][$gtabid];
		$select[] = $gtab["table"][$gtabid].".DEL";
		$select[] = $gtab["table"][$gtabid].".ERSTDATUM";
		$select[] = $gtab["table"][$gtabid].".EDITDATUM";
		$select[] = $gtab["table"][$gtabid].".EDITUSER";
		$select[] = $gtab["table"][$gtabid].".ERSTUSER";
		$select[] = $gtab["table"][$gtabid].".INUSE_TIME";
		$select[] = $gtab["table"][$gtabid].".INUSE_USER";

		/*----------------- versteckt -------------------*/
		if($filter["unhide"][$gtabid]){
			$where[] = $gtab["table"][$gtabid].".DEL = ".LMB_DBDEF_TRUE;
		}elseif(!$single AND !$extension["showdelete"]){
			$where[] = $gtab["table"][$gtabid].".DEL = ".LMB_DBDEF_FALSE;
		}

		/*----------------- Zusatz Wiedervorlage -------------------*/
		if($filter['reminder'][$gtabid]){ #AND !$onlyfield
			global $greminder;

			if(!$greminder[$gtabid]['name'][$filter['reminder'][$gtabid]]){
				$filter['reminder'][$gtabid] = 'true';
			}
			
			$reminderID = $filter['reminder'][$gtabid];

			# filter explizit nach GruppenID
			if($filter['reminder_group'][$reminderID]){
				$where[] = "LMB_REMINDER.GROUP_ID = ".parse_db_int($filter['reminder_group'][$reminderID]);
			# filter explizit nach UserID
			}elseif($filter['reminder_user'][$reminderID]){
				$where[] = "LMB_REMINDER.USER_ID = ".parse_db_int($filter['reminder_user'][$reminderID]);
			# filter nach Zugehörigkeit Gruppe&User
			}elseif($greminder[$gtabid]["groupbased"][$filter["reminder"][$gtabid]]){
				$where[] = "(LMB_REMINDER.GROUP_ID IN (".implode(",",$session["subgroup"]).") OR LMB_REMINDER.USER_ID = ".$session["user_id"].")";
			# filter nach Zugehörigkeit User
			}else{
				$where[] = "LMB_REMINDER.USER_ID = ".$session["user_id"];
			}
			
			############# in date ##########
			# after given date (gtab_erg)
			if($filter['reminder_from'][$reminderID] AND $d=convert_date($filter['reminder_from'][$reminderID])){
				$where[] = "LMB_REMINDER.FRIST >= '$d'";
			}
			
			# specific date
			if($filter['reminder_date'][$reminderID]){
				if(lmb_substr($filter['reminder_date'][$reminderID],0,1) == '<' OR lmb_substr($filter['reminder_date'][$reminderID],0,1) == '>'){
					$where[] = "LMB_REMINDER.FRIST ".lmb_substr($filter['reminder_date'][$reminderID],0,1)." '".trim(convert_date(substr($filter['reminder_date'][$reminderID],1)))."'";
				}else{
					$where[] = "LMB_REMINDER.FRIST = '".convert_date($filter['reminder_date'][$reminderID])."'";
				}
			# before given date (gtab_erg)
			}elseif($filter['reminder_to'][$reminderID] AND $d=convert_date($filter['reminder_to'][$reminderID])){
				$where[] = "LMB_REMINDER.FRIST <= '$d'";
			# default date before NOW
			}else{
				$where[] = "LMB_REMINDER.FRIST <= ".LMB_DBDEF_TIMESTAMP;
			}
			
			############# from user ##########
			# create from user NAME / ID
 			if($filter['reminder_create'][$reminderID]){
 				if(is_numeric($filter['reminder_create'][$reminderID])){
 					$where[] = "LMB_REMINDER.FROMUSER = ".parse_db_int($filter['reminder_create'][$reminderID]);
 				}else{
					$from[] = "LMB_USERDB";
					$where[] = "LMB_REMINDER.FROMUSER = LMB_USERDB.USER_ID";
					$where[] = "LOWER(LMB_USERDB.VORNAME".LMB_DBFUNC_CONCAT."' '".LMB_DBFUNC_CONCAT."LMB_USERDB.NAME) LIKE '%".lmb_strtolower(parse_db_string($filter['reminder_create'][$reminderID],30))."%'";
 				}
 			}
			
			# default order
			if(!count($orderset)){
				$extension["order"][] = 'LMB_REMINDER.FRIST';
			}

			$where[] = "LMB_REMINDER.TAB_ID = ".$gtabid;
			$where[] = "LMB_REMINDER.DAT_ID = ".$gtab["table"][$gtabid].".ID";
			$where[] = "LMB_REMINDER.CATEGORY = ".parse_db_int($filter["reminder"][$gtabid]);
			$from[] = "LMB_REMINDER";

			$select[] = "LMB_REMINDER.ID AS LMBREM_ID";
			$select[] = "LMB_REMINDER.FRIST AS LMBREM_FRIST";
			$select[] = "LMB_REMINDER.DESCRIPTION AS LMBREM_DESCR";
			$select[] = "LMB_REMINDER.FROMUSER AS LMBREM_USER";
			$select[] = "LMB_REMINDER.TAB_ID AS LMBREM_TABID";
			$select[] = "LMB_REMINDER.DAT_ID LMBREM_DATID";
			$select[] = "LMB_REMINDER.CONTENT AS LMBREM_CONTENT";
			$select[] = "LMB_REMINDER.WFL_INST AS LMBREM_WFLINST";
			$nosverkn = 1;
		}
	
		/*----------------- zeige gesperrte Datensätze -------------------*/
		if($filter["locked"][$gtabid]){
			$where[] = "(".$gtab["table"][$gtabid].".INUSE_TIME  > ".LMB_DBDEF_TIMESTAMP.")";
		}
		
		/*----------------- verstecke gesperrte Datensätze -------------------*/
		if($filter["hidelocked"][$gtabid]){
			$where[] = "(".$gtab["table"][$gtabid].".INUSE_TIME IS NULL OR ".$gtab["table"][$gtabid].".INUSE_TIME <= ".LMB_DBDEF_TIMESTAMP." OR INUSE_USER = ".$session["user_id"].")";
		}
		
		/*----------------- versionierte Datensätze -------------------*/
		if($gtab["versioning"][$gtabid]){
			$select[] = $gtab["table"][$gtabid].".VID,".$gtab["table"][$gtabid].".VPID,".$gtab["table"][$gtabid].".VACT,".$gtab["table"][$gtabid].".VDESC";
		}
	}

	# Nur für Detail
	if($single AND ($gtab["typ"][$fgtabid] != 5 OR $gfield[$gtabid]["argresult_name"]["ID"])){
		
		$where[] = $gtab["table"][$gtabid].'.'.$gtab["keyfield"][$gtabid].' = '.$single;

	################# Nur für Tabellenliste #######################
	}else{
		# no view
		if($gtab["typ"][$fgtabid] != 5){
			
			#if($filter["viewversion"][$gtabid] == 'false'){$filter["viewversion"][$gtabid] = false;}
			
			/*----------------- Farbhinterlegung -------------------*/
			if($LINK[140] AND $gtab["linecolor"][$gtabid] AND !$onlyfield){
				$ojoin[$gtab["table"][$gtabid]]["LMB_GTAB_GROUPDAT"][] = $gtab["table"][$gtabid].".ID = LMB_GTAB_GROUPDAT.DAT_ID AND LMB_GTAB_GROUPDAT.GROUP_ID = ".$session["group_id"]." AND LMB_GTAB_GROUPDAT.TAB_ID = ".$gtabid;
				$select[] = "LMB_GTAB_GROUPDAT.COLOR AS LMB_GCOLOR";
				$distinct = "DISTINCT";
			}
	
			/*----------------- Verküpfungsfilter -------------------*/
			# $verkn[verknpf] = 1 => normale Verknüpfung
			# $verkn[verknpf] = 2 => rückwertige Verknüpfung
	
			#--- Rückwertige Verknüpfung ---
			if($verkn["verknpf"] == 2 AND $verkn["md5tab"]){
				$select[] = $gtab["table"][$gtabid].".ID";
				$select[] = $verkn["md5tab"].".VERKN_ID AS VERKN_ID";
				$select[] = $verkn["md5tab"].".ID AS HERK_ID";
				$where[] = $gtab["table"][$gtabid].".ID = ".$verkn["md5tab"].".ID";
				$where[] = $verkn["md5tab"].".VERKN_ID = ".$verkn["id"];
				$from[] = $verkn["md5tab"];
				$orderbysort = 1;
				$distinct = "DISTINCT";
			# --- zeige nur verknüpfte Datensätze ---
			}elseif($verkn["showonly"]){
				$select[] = $gtab["table"][$gtabid].".ID";
				$select[] = $verkn["md5tab"].".VERKN_ID AS VERKN_ID";
				$select[] = $verkn["md5tab"].".ID AS HERK_ID";
				$where[] = $gtab["table"][$gtabid].".ID = ".$verkn["md5tab"].".VERKN_ID";
				$where[] = $verkn["md5tab"].".ID = ".$verkn["id"];
				$from[] = $verkn["md5tab"];
				#if($filter["viewversion"][$gtabid] !== false){$filter["viewversion"][$gtabid] = 1;}
				$orderbysort = 1;
				#$distinct = "DISTINCT";
			# --- zeige nur "nicht" verknüpfte Datensätze ---
			}elseif($verkn["verknpf"] AND !$gtab["sverkn"][$gtabid]){
				# --- 1:n | zeige nur "nicht" verknüpfte Datensätze ---
				if($verkn["typ"] == 27){
					$where[] = "NOT EXISTS(SELECT DISTINCT ".$verkn["md5tab"].".VERKN_ID FROM ".$verkn["md5tab"]." WHERE ".$gtab["table"][$gtabid].".ID = ".$verkn["md5tab"].".VERKN_ID)";
				# --- n:m | zeige alle Datensätze und verknüpfte markiert (nur bei nicht unique) ---
				}elseif($verkn["typ"] == 24 AND !$gfield[$verkn["tabid"]]["unique"][$verkn["fieldid"]]){
					$select[] = $gtab["table"][$gtabid].".ID";
					$select[] = $verkn["md5tab"].".VERKN_ID AS VERKN_ID";
					$select[] = $verkn["md5tab"].".ID AS HERK_ID";
					$ojoin[$gtab["table"][$gtabid]][$verkn["md5tab"]][] = $verkn["md5tab"].".VERKN_ID = ".$gtab["table"][$gtabid].".ID";
					$ojoin[$gtab["table"][$gtabid]][$verkn["md5tab"]][] = $verkn["md5tab"].".ID = ".$verkn["id"];
					$orderbysort = 1;
					$distinct = "DISTINCT";
				}
				
				# extension for relations
				if($verkn["relext"] AND !$verkn["showonly"]){
					if($extselect){$select = array_merge($select,$extselect);}
					if($extfrom){$from = array_merge($from,$extfrom);}
					if($extwhere){$where = array_merge($where,$extwhere);}
					if($extojoin){$where = array_merge($ojoin,$extojoin);}
					if($extorder){$orderque = $extorder;}
				}
				
			# --- Zeige nur "nicht" verknüpfte Datensätze bei Selbstverknüpfungen ---
			}elseif($verkn["verknpf"] AND $gtab["sverkn"][$gtabid] AND !$nosverkn AND !$filter["nosverkn"][$gtabid]){
				$where[] = "NOT EXISTS(SELECT DISTINCT ".$gtab["smd5tab"][$gtabid].".VERKN_ID FROM ".$gtab["smd5tab"][$gtabid]." WHERE ".$gtab["table"][$gtabid].".ID = ".$gtab["smd5tab"][$gtabid].".VERKN_ID)";
			}
	
			/*----------------- Versionsstatus Datensätze -------------------*/
			if($GLOBALS["view_version_status"] AND $gtab["viewver"][$gtabid]){
				$vdate = convert_date($GLOBALS["view_version_status"]);
				if($vdate){
					$where[] = "(" .  $gtab["table"][$gtabid] . ".ERSTDATUM < '" . $vdate . "' AND " .  $gtab["table"][$gtabid] . ".EDITDATUM > '" . $vdate . "' OR
					 " .  $gtab["table"][$gtabid] . ".EDITDATUM < '" . $vdate . "' AND VACT = ".LMB_DBDEF_TRUE.")";
				}else{$GLOBALS["view_version_status"] = "";}
			}
	
			# Sondertypen
			if($gsr[$gtabid]["ID"]){
				$where[] = $gtab["table"][$gtabid].".ID = ".$gsr[$gtabid]["ID"];
			}
		
		}

		# Typ Files
		#if($gtab["typ"][$gtabid] == 3){
			#$require = "extra/explorer/filestructure.lib";
			#require_once($require);
			#$subd = get_subdir(0,1);

			#if($gtab["table"][$gtabid] != "LDMS_FILES"){
			#	$from[] = "LDMS_FILES";
			#	$where[] = $gtab["table"][$gtabid].".ID = LDMS_FILES.ID";
			#}
			#$where[] = "LDMS_FILES.LEVEL IN (".implode(",",$subd).")";
		#}
		
		
		# Zeilenbeschränkung
		if(!$filter["nolimit"][$gtabid] AND LMB_DBFUNC_LIMIT){$limit = LMB_DBFUNC_LIMIT." ".$umgvar["resultspace"];}
		if(!$filter["nolimit"][$gtabid] AND LMB_DBFUNC_ROWNO){$where[] = LMB_DBFUNC_ROWNO." <= ".$umgvar["resultspace"];}
		
		
		/* --------------------------- Order ----------------------------------- */
		foreach($orderset as $okey => $order){
			if(!is_array($order) AND $order){
				$order = explode("&",$order);
			}
			if($order[0] AND $gfield[$order[0]]["sort"][$order[1]]){
				$order_type = $gfield[$order[0]]["parse_type"][$order[1]];
				if ($order_type != 2){        /*--- numeric ----*/
					$orderque[] = $gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]]." ".$order[2];
					$select[] = $gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]];
					$ordersel[] = $gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]];
				}else {                       /*---- sonstige -----*/
					$orderque[] = "lower(".$gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]].") ".$order[2];
					$select[] = "lower(".$gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]].")";
					$ordersel[] = "lower(".$gtab["table"][$order[0]].".".$gfield[$order[0]]["field_name"][$order[1]].")";
				}
			}
		}

		if(!$orderque AND !$extension["order"]){
			if($orderbysort){
				$orderque[] = $verkn["md5tab"].".SORT";
				$select[] = $verkn["md5tab"].".SORT";
			}else{
				if($gfield[$gtabid]["sortfield"]){
					$order_type = $gfield[$gtabid]["sortfield_type"];
					$order_asc = $gfield[$gtabid]["sortfield_asc"];
					if ($order_type != 2){        /*--- numeric ----*/
						$orderque[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"]." ".$order_asc;
						$select[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"];
						$ordersel[] = $gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"];
					}else {                             /*---- sonstige -----*/
						$orderque[] = "lower(".$gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"].") ".$order_asc;
						$select[] = "lower(".$gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"].")";
						$ordersel[] = "lower(".$gtab["table"][$gtabid].".".$gfield[$gtabid]["sortfield"].")";
					}
				}elseif($gtab["typ"][$fgtabid] != 5){
					$orderque[] = $gtab["table"][$gtabid].".ID";
				}
			}
		}
	
		# Versionierung Sortierung
		if($gtab["viewver"][$gtabid] AND $filter["viewversion"][$gtabid] AND $utyp != 2){
			$orderque = null;
			$orderque[] = $gtab["table"][$gtabid].".VPID,".$gtab["table"][$gtabid].".VID";
			$ordersel[] = $gtab["table"][$gtabid].".VPID";
			$ordersel[] = $gtab["table"][$gtabid].".VID";
		}
		
		# Versionierte Datensätze filtern
		if($gtab["versioning"][$gtabid] AND !$filter["viewversion"][$gtabid] AND !$GLOBALS["view_version_status"]){
			$where[] = $gtab["table"][$gtabid].".VACT = ".LMB_DBDEF_TRUE;
		}
		
	}
	
	################### für alle #####################

	# Extension
	if($extension){
		if ($extension["select"]) {$select = array_merge($extension["select"],$select);}
		if ($extension["where"]) {$where = array_merge($extension["where"],$where);}
		if ($extension["from"]) {$from = array_merge($extension["from"],$from);}
		if ($extension["order"]) {$orderque = $extension["order"];}
		if ($extension["ojoin"]) {$ojoin = array_merge($extension["ojoin"],$ojoin);}
	    if ($extension["distinct"]) {$distinct = $extension["distinct"];}
	}

	$from = array_unique($from);
	# set from unique for outer joins
	if($ojoin){
		$ojoin = array_unique($ojoin);
		foreach ($ojoin as $jkey => $jval){
			if(($joinkey = array_search(lmb_strtoupper($jkey),array_map('strtoupper',$from)))!==false){
				unset($from[$joinkey]);
			}
			$fromlj = array();
			foreach ($jval as $onjkey => $onjval){
				$fromlj[] = "LEFT JOIN $onjkey ON (".implode(" AND ",$onjval).")";
			}
			$from[] = $jkey." ".implode(" ",$fromlj);
		}
	}

	# set query unique
	$query["where"] = array_unique($where);
	$query["from"] = array_unique($from);
	$query["select"] = array_unique($select);
	$query["ordersel"] = $ordersel;
	$query["distinct"] = $distinct;

	if($select){$select = implode(",",$query["select"]);}
	if($from){$from = implode(",",$query["from"]);}
	if($orderque){
		$query["order"] = array_unique($orderque);
		$orderque  = " ORDER BY ".implode(",",$query["order"]);
	}
	if($where){$where  = " WHERE ".implode(" AND ",$query["where"]);}else{$where = "";}

	/*----------------- Where_over-Array (suche über alles) -------------------*/
	if($where_over AND $where){$where  = "$where AND (".implode(" OR ",array_unique($where_over)).")";}
	elseif($where_over AND !$where){$where = "WHERE ".implode(" OR ",array_unique($where_over)).")";}

	/* --- SQL-Query --------------------------------------------- */
	if(!$select OR !$from){
		if($GLOBALS["db"]){odbc_close($GLOBALS["db"]);}
		//return false;
		die("no select or from in query! in gtab.lib");
	}

	if(!$single){$reuse = LMB_DBFUNC_FOR_REUSE;}

	$query["sql"] = "SELECT $distinct $select FROM $from $where $orderque $limit $reuse";
	/* --- SQL-COUNT-Query --------------------------------------------- */
	if(LMB_DBFUNC_ROWNO){
		$where = explode("AND ROWNO",$where);
	}else{
		$where = explode("ORDER BY",$where);
	}
	$query["count"] = "SELECT COUNT(*) AS RESULT FROM $from ".$where[0];

	#error_log($query["sql"]);
	return $query;
}


/**
 * execute sqlquery
 *
 * @param unknown_type $gtabid
 * @param unknown_type $query
 * @param unknown_type $verkn
 * @param unknown_type $filter
 * @param unknown_type $onlyfield
 * @param unknown_type $single
 * @return unknown
 */
function get_sqlresult($gtabid,$query,$verkn,$filter=null,$onlyfield=null,$single=null,$pointer=null,$utyp=null){

	global $db;
	global $gtab;
	global $gfield;
	global $action;
	global $session;
	global $umgvar;
	global $LINK;
	global $exp_typ;
	
	$zeit_main = gettime();
	
	if(!$filter){$filter = array();}
	
	#echo $query["sql"]."<br><br>";
	#error_log($query["sql"]);
	# ." LIMIT 1,100"
	$rs = odbc_exec($db,$query["sql"]) or errorhandle(odbc_errormsg($db),$query["sql"],'result_query',__FILE__,__LINE__);
	
	# ---------------- Anzahl Reihen -------------
	$num_rows = lmb_num_rows($rs,$query["count"],$gtab["numrowcalc"][$gtabid]);
	$gresult[$gtabid]["res_count"] = $num_rows;
	
	# ---------------- Anzahl Ergebnisse -------------
	if($num_rows >= $umgvar["resultspace"] AND !$single){
		if($gtab["numrowcalc"][$gtabid] == 2){
			$gresult[$gtabid]["over_limit"] = 2;
		}elseif($filter["nolimit"][$gtabid]){
			$gresult[$gtabid]["over_limit"] = 0;
		}else{
			$gresult[$gtabid]["over_limit"] = 1;
		}
	}

	$zeit_now = gettime();
	$gresult[$gtabid]["need_time"] = round(($zeit_now - $zeit_main),3);

	# use pointer not ID
	if($single){
		$filter["anzahl"][$gtabid] = 1;
		# if view & view has no ID
		if($gtab["typ"][$gtabid] == 5 AND !$gfield[$gtabid]["argresult_name"]["ID"]){
			$bzm = $single;
			$pointer = $single;
		}else{
			$bzm = 1;
		}
	# Datensatzliste 
	}else{
		# Max. Anzahl Ergebnisse in resultcache;
		if($gresult[$gtabid]["res_count"] > $umgvar["resultspace"] AND !$filter["nolimit"][$gtabid]){
			$gresult[$gtabid]["max_count"] = $umgvar["resultspace"];
		}else{
			$gresult[$gtabid]["max_count"] = $gresult[$gtabid]["res_count"];
		}

		# ---- Max. Anzahl anzuzeigender Datensätze
		if(!$filter["anzahl"][$gtabid]){$filter["anzahl"][$gtabid] = $session["maxresult"];$filter["anzahl"][$gtabid] = $session["maxresult"];}
		elseif($exp_typ == 2 OR $filter["anzahl"][$gtabid] == "all"){$filter["anzahl"][$gtabid] = $gresult[$gtabid]["max_count"];}
		elseif($filter["anzahl"][$gtabid] > $gresult[$gtabid]["res_count"]){$filter["anzahl"][$gtabid] = $gresult[$gtabid]["res_count"];}

		# ---- anzuzeigende Seite / bei Verknüpfungsdarstellung ($utyp == 2) immer Seite 1
		if($filter["anzahl"][$gtabid] AND $utyp != 2){
			if (!$filter["page"][$gtabid] OR $filter["page"][$gtabid] < 1 OR $filter["page"][$gtabid] > (ceil($gresult[$gtabid]["max_count"]/$filter["anzahl"][$gtabid])) ){$filter["page"][$gtabid] = 1;$GLOBALS["filter"]["page"][$gtabid] = 1;}
		}
	    if(!$filter["page"][$gtabid]){$filter["page"][$gtabid] = 1;}

		# ---- Zählerbeginn
		$gresult[$gtabid]["res_next"] = ($filter["anzahl"][$gtabid] * $filter["page"][$gtabid] - $filter["anzahl"][$gtabid] + 1);
		$bzm = $gresult[$gtabid]["res_next"];

		# Ferknüpfung anzeigen
		if($verkn AND lmb_strpos($query["sql"],"VERKN_ID AS VERKN_ID")){
			$show_verkn = 1;
		}
	}
	
	# Feldliste
	if(is_array($onlyfield)){
		foreach($onlyfield as $fgtabid => $fieldarray){
			# only 1:1 relation | 1:x relation not supported here | simulate 1:1 for relationparams
			if($fgtabid != $gtabid AND $gtab["verkn"][$fgtabid] != $gtab["verkn"][$gtabid] AND !$verkn['verknparams']){continue;}
			if(is_array($fieldarray)){
				$tablist[] = $fgtabid;
				foreach($fieldarray as $key => $value){
					if($gfield[$fgtabid]["id"][$value]){
						$fieldlist[$fgtabid][] = $value;
					# extension fields
					}elseif (is_string($value)){
						$fieldlist[$fgtabid][] = $value;
					}
				}
			}
		}
	}elseif ($onlyfield === "ID"){
		$tablist[] = $gtabid;
		$fieldlist[$gtabid] = null;
	}else{
		$tablist[] = $gtabid;
		$fieldlist[$gtabid] = $gfield[$gtabid]["id"];
	}
	
	for($i=0; $i < $filter["anzahl"][$gtabid]; $i++) {
		if(odbc_fetch_row($rs, $bzm)) {
			if($tablist){
				foreach ($tablist as $key0 => $fgtabid){
					if($fieldlist[$fgtabid]){
						foreach ($fieldlist[$fgtabid] as $key => $value){
							# --- LONG --
							if($gfield[$fgtabid]["data_type"][$value] == 39 AND !$gfield[$fgtabid]["longhandle"][$value]){
								if($single OR $filter["getlongval"][$fgtabid]){
									$sqlquery1 = "SELECT ".$gfield[$fgtabid]["field_name"][$value]." AS LNG FROM ".$gtab["table"][$fgtabid]." WHERE ID = ".odbc_result($rs, "ID");
									$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
									$gresult[$fgtabid][$value][$i] = trim(odbc_result($rs1,"LNG")); # longtext handle
									if($single AND $gfield[$fgtabid]["indize"][$value] AND $gtabid == $fgtabid){
										$gfield[$fgtabid]["INDIZE_TIME"][$value] = get_date(odbc_result($rs, "INDD_$value"),2);
										$gfield[$fgtabid]["INDIZE"][$value] = odbc_result($rs, "IND_$value");
									}
								}else{
									$gresult[$fgtabid][$value][$i] = "...";
								}
							# currency
							}elseif($gfield[$fgtabid]["data_type"][$value] == 30) {
								$gresult[$fgtabid][$value][$i]['C'] = odbc_result($rs, $gfield[$fgtabid]["form_name"][$value]."_C");
								$gresult[$fgtabid][$value][$i]['V'] = convert_FloatRound(odbc_result($rs, $gfield[$fgtabid]["form_name"][$value]));
							# Float handling
							}elseif($gfield[$fgtabid]["parse_type"][$value] == 6) {
								$gresult[$fgtabid][$value][$i] = convert_FloatRound(odbc_result($rs, $gfield[$fgtabid]["form_name"][$value]));
							# get relation ID instead of count of relations
							}elseif($filter["relationval"][$gtabid] AND $gfield[$fgtabid]["field_type"][$value] == 11){
								$sqlquery1 = "SELECT VERKN_ID FROM ".$gfield[$fgtabid]["md5tab"][$value]." WHERE ID = ".odbc_result($rs, "ID");
								$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
								while(odbc_fetch_row($rs1)) {
									$gresult[$fgtabid][$value][$i][] = odbc_result($rs1,"VERKN_ID");
								}
							# all limbas fields
							}elseif($gfield[$fgtabid]["form_name"][$value] AND $gfield[$fgtabid]["field_type"][$value] != 14 AND $gfield[$fgtabid]["field_type"][$value] != 15) {
								$gresult[$fgtabid][$value][$i] = trim(odbc_result($rs, $gfield[$fgtabid]["form_name"][$value])); # longtext handle
							# extension fields
							}elseif(!is_numeric($value) AND $value){
								$gresult[$fgtabid][$value][$i] = odbc_result($rs,$value);
							}else{
								$gresult[$fgtabid][$value][$i] = 0;
							}
							
						}
					}
					/*----------------- system fields -------------------*/
					# only view
					if($gtab["typ"][$fgtabid] == 5){
						# check if view has ID
						if($gfield[$fgtabid]["argresult_name"]["ID"]){
							$id = odbc_result($rs, "ID");
						}else{
							$id = $bzm;
						}
					}else{
						$id = odbc_result($rs, $gtab["keyfield"][$fgtabid]);
						$gresult[$fgtabid]["ERSTDATUM"][$i] = get_date(odbc_result($rs, "ERSTDATUM"),2);
						$gresult[$fgtabid]["EDITDATUM"][$i] = get_date(odbc_result($rs, "EDITDATUM"),2);
						$gresult[$fgtabid]["EDITUSER"][$i] = odbc_result($rs, "EDITUSER");
						$gresult[$fgtabid]["ERSTUSER"][$i] = odbc_result($rs, "ERSTUSER");
						$gresult[$fgtabid]["DEL"][$i] = odbc_result($rs, "DEL");
						$gresult[$fgtabid]["INUSE_TIME"][$i] = odbc_result($rs, "INUSE_TIME");
						$gresult[$fgtabid]["INUSE_USER"][$i] = odbc_result($rs, "INUSE_USER");
						if(odbc_result($rs, "ERSTUSER") == $session["user_id"]){$gresult[$fgtabid]["IS_OWN_USER"][$i] = 1;}
					}

					#------------------- get primary keyfield -------------------------------- 
					$gresult[$fgtabid]["id"][$i] = $id;
					
					#------------------- Wiedervorlage --------------------------------
					if($LINK[109] AND $single){
						$gresult[$fgtabid]["REMINDER"][$i] = lmb_getReminder($fgtabid,$id);
					}
					
				}
			}

			if($show_verkn){
			    $gresult[$gtabid]["verkn_id"][$i] = odbc_result($rs, "VERKN_ID");
			    $gresult[$gtabid]["origin_id"][$i] = odbc_result($rs, "HERK_ID");
			}
			
			
			if($LINK[140] AND $gtab["linecolor"][$gtabid] AND !$onlyfield AND !$single){$gresult[$gtabid]["color"][$i] = odbc_result($rs, "LMB_GCOLOR");}

			# --- Datensatz Sperre -----------
			if($gtab["lockable"][$gtabid] AND ($action == "gtab_change" OR $action == "gtab_deterg" OR $filter["alter"][$gtabid])){    
				$commit = lock_data($gtabid,$id,$gresult);
			}
			
			# --- Versionierungs Infos -----------
			if($gtab["versioning"][$gtabid]){
				$gresult[$gtabid]["VID"][$i] = odbc_result($rs, "VID");
				$gresult[$gtabid]["VPID"][$i] = odbc_result($rs, "VPID");
				$gresult[$gtabid]["VACT"][$i] = odbc_result($rs, "VACT");
				$gresult[$gtabid]["VDESC"][$i] = odbc_result($rs, "VDESC");

    			if($gtab["viewver"][$gtabid]){
    				if($single){
    					$sqlquery1 = "SELECT ID,VID FROM ".$gtab["table"][$gtabid]." WHERE VPID = ".$gresult[$gtabid]["VPID"][$i]." ORDER BY VID";
    					$rs1 = odbc_exec($db,$sqlquery1) or errorhandle(odbc_errormsg($db),$sqlquery1,$GLOBALS['action'],__FILE__,__LINE__);
    					if(!$rs1) {$commit = 1;}
    
    					$bzm1=1;
    					while(odbc_fetch_row($rs1,$bzm1)){
    						$gresult[$gtabid]["V_ID"][odbc_result($rs1, "VID")] = odbc_result($rs1, "ID");
    						$bzm1++;
    					}
    					arsort($gresult[$gtabid]["V_ID"]);
    					odbc_free_result($rs1);
    				}
    			}
		    }

			# ------- indicator ------
			if($gtab["indicator"][$gtabid]){
				$indicator = eval($gtab["indicator"][$gtabid]);
				if(!$indicator){
					$i--;
				}else{
					$gresult[$gtabid]["res_viewcount"]++;
				}
			}else{
				$gresult[$gtabid]["res_viewcount"]++;
			}
			
			# ------- reminder ------
			if($filter["reminder"][$gtabid]){
				$gresult[$gtabid]["LMBREM_ID"][$i] = odbc_result($rs, "LMBREM_ID");
				$gresult[$gtabid]["LMBREM_FRIST"][$i] = odbc_result($rs, "LMBREM_FRIST");
				$gresult[$gtabid]["LMBREM_DESCR"][$i] = odbc_result($rs, "LMBREM_DESCR");
				$gresult[$gtabid]["LMBREM_USER"][$i] = odbc_result($rs, "LMBREM_USER");
				$gresult[$gtabid]["LMBREM_TABID"][$i] = odbc_result($rs, "LMBREM_TABID");
				$gresult[$gtabid]["LMBREM_DATID"][$i] = odbc_result($rs, "LMBREM_DATID");
				$gresult[$gtabid]["LMBREM_CONTENT"][$i] = odbc_result($rs, "LMBREM_CONTENT");
				$gresult[$gtabid]["LMBREM_WFLINST"][$i] = odbc_result($rs, "LMBREM_WFLINST");
			}
			
			
			$bzm++;
		}
	}
	
	if($rs){odbc_free_result($rs);}

	return $gresult;
}



/**
 * main tableresult function
 *
 * @param numeric $gtabid (table-id)
 * @param numeric $utyp
 * @param array $filter (filter params)
 * @param array $gsr (search params)
 * @param array $verkn
 * @param array $onlyfield ([gtabid][filedid])
 * @param numeric $single (ID)
 * @param array $extension
 * @return resultset
 */
function get_gresult($gtabid,$utyp=1,$filter=null,$gsr=null,$verkn=null,$onlyfield=null,$single=null,$extension=null,$pointer=null,$savequery=null){
	
	if($savequery){global $lmb_query;}
	
	$lmb_query = get_sqlquery($gtabid,$utyp,$filter,$gsr,$verkn,$onlyfield,$single,$extension,$pointer);
	$gresult = get_sqlresult($gtabid,$lmb_query,$verkn,$filter,$onlyfield,$single,$pointer,$utyp);
        
        return $gresult;
}


# ---------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------


/**
 * get relation md5tab name
 * 
 * @param unknown $tabId
 * @param unknown $fieldName
 * @return mixed
 */
function getRelation($tabId,$fieldName){
	global $db;
	global $action;

	$sqlquery = "select MD5TAB from LMB_CONF_FIELDS where LMB_CONF_FIELDS.TAB_ID = $tabId AND LMB_CONF_FIELDS.FIELD_NAME = '$fieldName'";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

	if(odbc_fetch_row($rs))
	{
		return odbc_result($rs,"MD5TAB");
	}
}


/**
 * get whole resultset as textblock
 * 
 * @param unknown $gtabid
 * @param unknown $gresult
 * @param string $separator
 * @return string
 */
function get_txtresult($gtabid,&$gresult,$separator=' ; ',$onlyfield=null){
    global $gfield;
    if (! $onlyfield) {
        $onlyfield = $gfield[$gtabid]["sort"];
    }
    
    if ($gresult[$gtabid]['id']) {
        foreach ($gresult[$gtabid]['id'] as $key => $value) {
            $line = array();
            
            foreach ($onlyfield as $fkey => $fvalue) {
                $fname = "cftyp_" . $gfield[$gtabid]['funcid'][$fvalue];
                if (function_exists($fname) and $gfield[$gtabid]['data_type'][$fvalue] != 22 and $gfield[$gtabid]['field_type'][$fvalue] != 14 and $gfield[$gtabid]['field_type'][$fvalue] != 15 and $gfield[$gtabid]['field_type'][$fvalue] < 100) {
                    $line[] = str_replace('\n', ' ', html_entity_decode($fname($key, $fvalue, $gtabid, 3, $gresult, 0), ENT_QUOTES, $GLOBALS["umgvar"]["charset"]));
                }
            }
            $row[] = implode($separator, $line);
        }
    }
    
    if($row){
        return implode("\n", $row);
    }
}


#------------------- Wiedervorlage --------------------------------

/**
* function adds a reminder (in table lmb_reminder)
*
* @param timestamp $gfrist field frist (date of the reminder)
* @param varchar $gfrist_desc field description
* @param int2 $gtabid field tabid
* @param numeric $ID field dat_id
* @param string $to Default null; _u if the reminder is of a user, _g if the reminder is of a group
* @param int2 $category Default 0; a reminder of a customer has the possibility to set a category: acquisition = 1 nothing = 0
* @param numeric $wfl_inst (workflow instance) Default null; if it is a reminder of a customer and the customer has an acquisition
*                this field is set when the first workflow item is set.
* @param string $fielddesc Default null; field content
* @return $out[] (USER_ID if you have a userlist or GROUP_ID if you have a grouplist)
*
*/ 
function lmb_addReminder($gfrist,$gfrist_desc,$gtabid,$ID,$to=null,$category=0,$wfl_inst=null,$fielddesc=null,$sendmail=null){
    global $db;
    global $session;
    global $userdat;
	global $gfield;
	global $greminder;
	global $lang;
	global $umgvar;
	
	# check if is category
	if($category){
		if(!$gtabid = $greminder["argresult_id"][$category]){return false;}
		if($greminder[$gtabid]["groupbased"][$category]){
			$groupbased = 1;
		}
	}
	
	if(is_array($to)){
		$touser = $to;
	}elseif($to){
		$touser = explode(";",$to);
	}else{
		$touser[] = $session["user_id"]."_u";
	}

	# Bezeichner
	if(!$fielddesc AND $gfield[$gtabid]["mainfield"]){
		$require = "gtab/gtab_type_erg.lib";
		require_once($require);
		$ffieldid = $gfield[$gtabid]["mainfield"];
		$gresult = get_gresult($gtabid,1,null,null,null,array($gtabid=>array($gtabid=>$ffieldid)),$ID);
		$fname = "cftyp_".$gfield[$gtabid]["funcid"][$ffieldid];
		$fielddesc = $fname(0,$ffieldid,$gtabid,3,$gresult,0);
	}

    foreach ($touser as $key => $to) {
    	if ($to) {
    		$to = explode("_",$to);
    		if($to[1] == "u" and is_numeric($to[0])){
				$userlist[] = $to[0];
				$maillist[] = $to[0];
    		}elseif($to[1] == "g" and is_numeric($to[0])){
    			foreach ($userdat["userid"] as $ukey => $uval){
    				$subgroup = explode(",",$userdat["subgroup"][$ukey]);
    				if(in_array($to[0],$subgroup)){
    					$maillist[] = $uval;
    				}
    			}
    			if($groupbased){
					$grouplist[] = $to[0];
    			}else{
    				$userlist = $maillist;
    			}
    		}
    	}
    }
    
    if($gfrist){$gfrist = convert_date($gfrist);}
    if(!$gfrist){$gfrist = convert_stamp(time());}
    
    if($userlist){
    foreach ($userlist as $lkey => $lval){
    	$NEXTID = next_db_id('LMB_REMINDER','ID',1);
    	$sqlquery = "INSERT INTO LMB_REMINDER (ID,USER_ID,TAB_ID,DAT_ID,FRIST,DESCRIPTION,FROMUSER,CONTENT,CATEGORY,WFL_INST) VALUES ($NEXTID,".$lval.",".$gtabid.",$ID,'".convert_date($gfrist)."','".parse_db_string($gfrist_desc,250)."',".parse_db_int($session["user_id"]).",'".parse_db_string($fielddesc,160)."',".parse_db_int($category).",".parse_db_int($wfl_inst).")";
    	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
    	$out[] = $lval;
    	$NEXTID++;
    	if(!$rs) {$commit = 1;}
    }}
    
    if($grouplist){
    foreach ($grouplist as $lkey => $lval){
    	$NEXTID = next_db_id('LMB_REMINDER','ID',1);
    	$sqlquery = "INSERT INTO LMB_REMINDER (ID,GROUP_ID,TAB_ID,DAT_ID,FRIST,DESCRIPTION,FROMUSER,CONTENT,CATEGORY,WFL_INST) VALUES ($NEXTID,".$lval.",".$gtabid.",$ID,'".convert_date($gfrist)."','".parse_db_string($gfrist_desc,250)."',".parse_db_int($session["user_id"]).",'".parse_db_string($fielddesc,160)."',".parse_db_int($category).",".parse_db_int($wfl_inst).")";
    	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
    	$out[] = $lval;
    	$NEXTID++;
    	if(!$rs) {$commit = 1;}
    }}

    # send mail to userlist
    if($sendmail AND $maillist){
    	
    	if($category){
    		$header = $greminder[$gtabid]['name'][$category];
    	}else{
    		$header = $gtab['desc'][$gtabid];
    		$category = 0;
    	}

    	foreach ($maillist as $mkey => $userid){
    		if($userdat["email"][$userid]){
    			
    			if($greminder[$gtabid]["message"][$category]){
    				$fnc = $greminder[$gtabid]['message'][0];
    				$message = $fnc($userid,$gtabid,$ID,$category,$gfrist,$gfrist_desc,$fielddesc,$wfl_inst);
    			}else{
    			
		    	$message ="
		    		<br><br>
		    		
		    		hallo ".$userdat["bezeichnung"][$userid]."<br><br>
		    		".$session['vorname']." ".$session['name']." send you a $header - reminder for:<br>
		    		<i><b><a href=\"".$umgvar['url']."/main.php?action=\"> $fielddesc </a></b></i><br><br><br>";
		    		
		    		if($gfrist_desc){
		    			$message .= "$gfrist_desc<br><br>";
		    		}
		
		    		$message .="
		    		-------------------------------------------------------------------------------------<br>
		    		This is an automatically generated email, please do not reply!<br>
		    		-------------------------------------------------------------------------------------<br><br><br>
		    		";
    			}
    			
    			lmb_sendMail($userdat["email"][$userid],$session["email"],"Limbas - $lang[425] für $fielddesc ".$greminder[$gtabid]['name'][$category],$message);
    		}
    	}
    }
    
	/* --- Transaktion ENDE -------------------------------------- */
	if($commit){
		return false;
	} else {
		return $out;
	}
    
}

/**
* function drops a reminder (in table lmb_reminder)
*
* @param numeric $rem_id ID of the table lmb_reminder
* @param int2 $gtabid field tabid
* @param int2 $category Default 0; a reminder of a customer has the possibility to set a category: acquisition = 1 nothing = 0
* @param numeric $ID field dat_id
* @param numeric $wfl_inst (workflow instance) Default null; if it is a reminder of a customer and the customer has an acquisition
*                this field is set when the first workflow item is set.
* @param unknown_type $active Default null; if active is not null a where clause is set in which FRIST < timestamp
* @param string $extension Default null; if extenstion is not null a where clause with this extension is set else a where clause with the active user_id or the active subgroup is set
* @return true if the reminder is deleted, false if there is an error.
*
*/ 
function lmb_dropReminder($rem_id,$gtabid=null,$category=null,$ID=null,$wfl_inst=null,$active=null,$extension=null){
    global $db;
    global $session;
    global $gtab;
    global $greminder;

	if($active){$where[] = "FRIST < ".LMB_DBDEF_TIMESTAMP;}
    if($category){$where[] = "CATEGORY = ".parse_db_int($category);}
    if($wfl_inst){$where[] .= "WFL_INST = ".parse_db_int($wfl_inst);}
    if($ID){$where[] = "DAT_ID = ".parse_db_int($ID);}
    if($gtabid){$where[] = "TAB_ID = ".parse_db_int($gtabid);}
    if($rem_id){$where[] = "ID = ".parse_db_int($rem_id);}

    if($extension){$where[] = $extension;}else{
    	$where[] = "(LMB_REMINDER.USER_ID = ".$session["user_id"]." OR LMB_REMINDER.GROUP_ID IN (".implode(',',$session["subgroup"])."))";
    }

    $where = implode(" AND ",$where);
    #$sqlquery = "DELETE FROM LMB_REMINDER WHERE USER_ID = ".$session["user_id"]." AND DAT_ID = ".parse_db_int($ID)." AND TAB_ID = ".parse_db_int($gtabid)." AND ID = ".parse_db_int($id);
    $sqlquery = "DELETE FROM LMB_REMINDER WHERE ".$where;
    $rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
    if(!$rs) {return false;}else{return true;}
}

/**
* function changes datetime and description of a reminder (in table lmb_reminder)
*
* @param numeric $rem_id ID of the table lmb_reminder
* @param timestamp $gfrist field frist (date of the reminder)
* @param varchar $gfrist_desc field description
* @return true if the reminder is changed, false if there is an error.
*
*/ 
function lmb_changeReminder($rem_id, $gfrist,$gfrist_desc){
    global $db;
    
    if($gfrist){$gfrist = convert_date($gfrist);}
    if(!$gfrist){$gfrist = convert_stamp(time());}

    $sqlquery = "
            UPDATE
                LMB_REMINDER
            SET 
                FRIST = '".convert_date($gfrist)."',
                DESCRIPTION = '".parse_db_string($gfrist_desc,250)."'
            WHERE 
                ID = ".parse_db_int($rem_id);

    $rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
    if(!$rs) {return false;}else{return true;}    
}

/**
* getter function for the active reminder
* @param int2 $gtabid field tabid
* @param numeric $ID field dat_id
* @return $gresult resultset
*/ 
function lmb_getReminderAktive($gtabid,$ID){
	global $db;
	global $session;
	global $greminder;
	
	$sqlquery = "SELECT * FROM LMB_REMINDER WHERE
		USER_ID = " . $session["user_id"] . " 
		AND FRIST < ".LMB_DBDEF_TIMESTAMP." 
		AND CATEGORY = ".parse_db_int($category)." 
		ORDER BY TAB_ID,FRIST";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	
	if(!$rs) {$commit = 1;}
	while(odbc_fetch_row($rs)){
		$gresult["LMBREM_ID"][] = odbc_result($rs, "ID");
		$gresult["LMBREM_DESCR"][] = odbc_result($rs, "DESCRIPTION");
		$gresult["LMBREM_USER"][] = odbc_result($rs, "FROMUSER");
		$gresult["LMBREM_TABID"][] = odbc_result($rs, "TAB_ID");
		$gresult["LMBREM_DATID"][] = odbc_result($rs, "DAT_ID");
		$gresult["LMBREM_FRIST"][] = odbc_result($rs, "FRIST");
		$gresult["LMBREM_CONTENT"][] = odbc_result($rs, "CONTENT");
		$gresult["LMBREM_WFLINST"][] = odbc_result($rs, "WFL_INST");
	}
	return $gresult;
}

/**
* getter function for a reminder
*
* @param int2 $gtabid field tabid
* @param numeric $ID field dat_id
* @param int2 $category Default 0; a reminder of a customer has the possibility to set a category: acquisition = 1 nothing = 0
* @param numeric $wfl_inst (workflow instance) Default null; if it is a reminder of a customer and the customer has an acquisition
*                this field is set when the first workflow item is set.
* @param unknown_type $active Default null; if active is not null a where clause is set in which FRIST < timestamp
* @param string $extension Default null; if extenstion is not null a where clause with this extension is set else a where clause with the active user_id or the active subgroup is set
* @return $gresult resultset or false
*/ 
function lmb_getReminder($gtabid,$ID,$category=null,$wfl_inst=null,$active=null,$extension=null){
	global $db;
	global $session;
	global $greminder;

	if($extension){$where[] = $extension;}else{
		$where[] = "(LMB_REMINDER.USER_ID = ".$session["user_id"]." OR LMB_REMINDER.GROUP_ID IN (".implode(',',$session["subgroup"])."))";
	}

	if($category AND $greminder[$greminder["argresult_id"][$category]]["name"][$category]){
		$where[] = " LMB_REMINDER.CATEGORY = ".parse_db_int($category);
	    if($wfl_inst){
	    	$where[] = "LMB_REMINDER.WFL_INST = ".parse_db_int($wfl_inst);
	    }
	}elseif($gtabid){
		$where[] = "LMB_REMINDER.TAB_ID = ".parse_db_int($gtabid);
	}
	
	if($ID){
		$where[] = "LMB_REMINDER.DAT_ID = ".parse_db_int($ID);
	}
	if($active){
		$where[] = "FRIST < ".LMB_DBDEF_TIMESTAMP;
	}

	$where = implode(" AND ",$where);

	$sqlquery = "SELECT LMB_REMINDER.ID,LMB_REMINDER.FRIST,LMB_REMINDER.DESCRIPTION,LMB_REMINDER.FROMUSER,LMB_REMINDER.CONTENT,LMB_REMINDER.TAB_ID,LMB_REMINDER.DAT_ID,LMB_REMINDER.WFL_INST,LMB_REMINDER_LIST.NAME
		FROM LMB_REMINDER LEFT OUTER JOIN LMB_REMINDER_LIST ON(LMB_REMINDER_LIST.ID = LMB_REMINDER.CATEGORY)
		WHERE $where ORDER BY FRIST";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(odbc_fetch_row($rs)){
		$id = odbc_result($rs, "ID");
		$reminder["id"][$id] = odbc_result($rs, "ID");
		$reminder["datum"][$id] = get_date(odbc_result($rs, "FRIST"),2);
		$reminder["name"][$id] = odbc_result($rs, "NAME");
		$reminder["desc"][$id] = odbc_result($rs, "DESCRIPTION");
		$reminder["content"][$id] = odbc_result($rs, "CONTENT");
		$reminder["tab_id"][$id] = odbc_result($rs, "TAB_ID");
		$reminder["dat_id"][$id] = odbc_result($rs, "DAT_ID");
		$reminder["wfl_inst"][$id] = odbc_result($rs, "WFL_INST");
	}
	if($reminder){
		return $reminder;
	}else{
		return false;
	}
}





#------------------- Views --------------------------------

function lmb_appendView($source,$dest,$pid=array()){
	global $db;
	global $gtab;
	global $DBA;
	global $session;
	
	
	require_once("lib/db/db_".$DBA["DB"]."_admin.lib");
	
	$vfields = dbf_5(array($DBA["DBSCHEMA"],$source));
	if(!$vfields){return false;}
	#$fields = implode(",",$vfields["columnname"]);
	
	# is limbas table
	if(LMB_DBFUNC_SEQUENCE AND $gtab["argresult_id"][lmb_strtoupper($dest)]){
		$pid["s"][] = "ID";
		$pid["s"][] = "ERSTUSER";
		$pid["d"][] = "NEXTVAL('".dbf_4("seq_".$dest."_id'").")";
		$pid["d"][] = $session["user_id"]." AS ERSTUSER";
	}elseif($gtab["argresult_id"][lmb_strtoupper($dest)]){
		$pid["s"][] = "ERSTUSER";
		$pid["s"][] = "ERSTDATUM";
		$pid["d"][] = $session["user_id"]." AS ERSTUSER";
		$pid["d"][] = "'".convert_stamp(local_stamp(1))."' AS ERSTDATUM";
	}
	
	if($pid["s"]){$pid_s = array_merge($pid["s"],$vfields["columnname"]);$pid_s = implode(",",$pid_s);}
	if($pid["d"]){$pid_d = array_merge($pid["d"],$vfields["columnname"]);$pid_d = implode(",",$pid_d);}

	$sqlquery = "INSERT INTO $dest ($pid_s $fields) SELECT $pid_d $fields FROM $source";
	$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	if($rs){return true;}
	return false;
}

function lmb_addView($source,$dest){
	global $db;
	global $gtab;
	global $DBA;
	

	return false;
}


function lmb_deleteView($source,$dest){
	global $db;
	global $gtab;
	global $DBA;
	

	return false;
}






#------------------- global ftyp functions --------------------------------

# PHP Argument
function ftyp_13($ID,&$gresult,$fieldid,$gtabid,$class,$style,$pos,$typ,$bzm=0) {
	global $session;
	global $userdat;
	global $gtab;
	global $gfield;
	global $db;
	

	if(!$ID){return;}
	if($style){$style = "STYLE=\"".$pos.$style."\"";}
	
	if($gfield[$gtabid]["argument"][$fieldid]){
		$arg = explode("#", $gfield[$gtabid]["argument"][$fieldid]);
		foreach($arg as $key => $value){
			if(lmb_substr($arg[$key],0,1) == '*'){
				$arg_fieldid = lmb_substr($value,1,30);
				# --- currency ----
				if($gfield[$gtabid]["data_type"][$arg_fieldid] == 30){
					$arg[$key] = str_replace("\"","\\\"",$gresult[$gtabid][$arg_fieldid][$bzm]["V"]." ".$gresult[$gtabid][$arg_fieldid][$bzm]["C"]);
				# --- date ----
				}elseif($gfield[$gtabid]["field_type"][$arg_fieldid] == 2){
					$notime = $gfield[$gtabid]["datetime"][$arg_fieldid];
					if($gfield[$gtabid]["data_type"][$arg_fieldid] == 40){$notime = 1;}
					$arg[$key] = get_date($gresult[$gtabid][$arg_fieldid][$bzm],$notime);
				# --- Systemfields Date ----
				}elseif($gfield[$gtabid]["field_type"][$arg_fieldid] == 15){
					$arg[$key] = get_date($gresult[$gtabid][$gfield[$gtabid]["field_name"][$arg_fieldid]][$bzm],1);
				}else{
					$arg[$key] = str_replace("\"","\\\"",$gresult[$gtabid][$arg_fieldid][$bzm]);
				}
				if(!$arg[$key] AND ($gfield[$gtabid]["field_type"][$arg_fieldid] == 5 OR $gfield[$gtabid]["field_type"][$arg_fieldid] == 17)){$arg[$key] = 0;}
			}
			$arg["result"] .= $arg[$key];
		}
		
		$arg["result"] = trim($arg["result"]);
		if($arg["result"] OR $arg["result"] == "0"){
			$arg_result = eval($arg["result"].";");
			$arg_result = trim($arg_result);
			/* ------- export ------- */
			if($csvexp){$csvexp_zeile .= str_replace("\n"," ",str_replace("\t"," ",$arg_result));}
		}
		
		/* ------- Eintrag in DB bei Änderung ------- */
		if(!$gresult[$gtabid][$fieldid][$bzm] OR ($arg_result != $gresult[$gtabid][$fieldid][$bzm] AND !$gfield[$gtabid]["argument_edit"][$fieldid])){
			$gresult[$gtabid][$fieldid][$bzm] = $arg_result;
			
			# date
			if($gfield[$gtabid]["parse_type"][$fieldid] == 4){
				$arg_result = "'".convert_date($arg_result)."'";
			# integer
			}elseif($gfield[$gtabid]["parse_type"][$fieldid] == 1){
				$arg_result = parse_db_int($arg_result,$gfield[$gtabid]["size"][$fieldid]);
			# float
			}elseif($gfield[$gtabid]["parse_type"][$fieldid] == 6){
				$arg_result = parse_db_float($arg_result,$gfield[$gtabid]["size"][$fieldid]);
			# boolean
			}elseif($gfield[$gtabid]["parse_bool"][$fieldid] == 3){
				$arg_result = parse_db_bool($arg_result);
			# string
			}else{
				$arg_result = "'".parse_db_string($arg_result,$gfield[$gtabid]["size"][$fieldid])."'";
			}
			
			if($arg_result OR $arg_result == "0"){
				$sqlquery = "UPDATE ".$gtab["table"][$gtabid]." SET ".$gfield[$gtabid]["field_name"][$fieldid]." = $arg_result WHERE ID = ".$ID;
				$rs = odbc_exec($db,$sqlquery) or errorhandle(odbc_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
			}
			
			if($gfield[$gtabid]["nformat"][$fieldid]){
				$gresult[$gtabid][$fieldid][$bzm] = convert_NumberFormat($gresult[$gtabid][$fieldid][$bzm],$gfield[$gtabid]["nformat"][$fieldid]);
			}
		}
	}
	
	return $gresult[$gtabid][$fieldid][$bzm];

}


?>
