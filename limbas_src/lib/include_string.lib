<?php

//strlen
function lmb_strlen($str){
    return strlen($str);
}

//strpos
function lmb_strpos($haystack, $needle, $offset=null){
    return strpos($haystack, $needle, $offset);
}

//strrpos
function lmb_strrpos($haystack, $needle, $offset=null){
    return strrpos($haystack, $needle, $offset);
}

//substr
function lmb_substr($string, $start, $length=null){
    return ($length ? substr($string, $start, $length) : substr($string, $start));
}

//lmb_strtolower
function lmb_strtolower($string){
    return strtolower($string);
}

//strtoupper
function lmb_strtoupper($string){
    return strtoupper($string);
}

//stripos
function lmb_stripos($haystack, $needle, $offset=null){
    return stripos($haystack, $needle, $offset);
}

//strripos
function lmb_strripos($haystack, $needle, $offset=null){
    return strripos($haystack, $needle, $offset);
}

//strstr
function lmb_strstr($haystack, $needle, $before_needle=null){
    return strstr($haystack, $needle, $before_needle);
}

//stristr
function lmb_stristr($haystack, $needle, $before_needle=null){
    return stristr($haystack, $needle, $before_needle);
}

//strrchr
function lmb_strrchr($haystack, $needle){
    return strrchr($haystack, $needle);
}

//substr_count
function lmb_substr_count($haystack, $needle, $offset=null, $length=null){
    if($length){
        return substr_count($haystack, $needle, $offset, $length);
    } else {
        return substr_count($haystack, $needle, $offset);
    }    
}

//ereg
function lmb_ereg($pattern, $string){
    return preg_match("/{$pattern}/", $string);
}

//eregi
function lmb_eregi($pattern, $string){
    return preg_match("/{$pattern}/i", $string);
}

//ereg_replace
function lmb_ereg_replace($pattern, $replacement, $string){
    return preg_replace("/{$pattern}/", $replacement, $string);
}

// eregi_replace
function lmb_eregi_replace($pattern, $replacement, $string){
    return preg_replace("/{$pattern}/i", $replacement, $string);
}

// split
function lmb_split($pattern, $string, $limit=null){
    return preg_split("/{$pattern}/", $string, $limit);
}

// strrev
function lmb_strrev($string) {
    return strrev($string);
}

// str_pad
function lmb_str_pad ($input, $pad_length, $pad_string = " " , $pad_type = STR_PAD_RIGHT) {
    return str_pad($input, $pad_length, $pad_string, $pad_type);
}
?>