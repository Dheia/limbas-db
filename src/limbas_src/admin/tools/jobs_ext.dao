<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */



ob_implicit_flush(true);
ob_end_flush();

if(!$GLOBALS["cronjob"]){
    echo "<div id=\"indcontainer\"  class=\"lmbContextMenu\" style=\"z-index:99;left:60px;top:60px;width:250px;display:none;\">";
    pop_closetop('indcontainer');
    pop_left();
}

$jobdir = read_dir(COREPATH . "admin/tools/jobs",0);

if (!isset($kategorie) or !$kategorie) {
    $anyKey = key($jobdir['name']);
    $kategorie = $jobdir['name'][$anyKey];
}

foreach ($jobdir["name"] as $key => $value){
	$kat = explode(".",$jobdir["name"][$key]);
	$kat = lmb_strtoupper($kat[0]);
	if($kategorie == $jobdir["name"][$key]){$req = $jobdir["path"][$key].$jobdir["name"][$key];$kategoriedesc = $kat;}
}

if($kategorie AND $req){
	require_once($req);
}


# -------- Interaktiver Job --------
if($run_job){
	$job = $run_job;
	$sqlquery = "SELECT ID,VAL FROM LMB_CRONTAB WHERE ID = $run_job";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if($cronval = lmbdb_result($rs,"VAL")){
		lmb_loghandle(lmb_strtolower($kategoriedesc).".log","starting job \t(".lmbdb_result($rs,"ID").")");
		periodic_job($cronval);
		lmb_loghandle(lmb_strtolower($kategoriedesc).".log","ending job \t(".lmbdb_result($rs,"ID").")");
	}
}

# -------- Umgebungvaiablen auslesen --------
if(!$umgvar){
	$sqlquery = "SELECT FORM_NAME,NORM FROM LMB_UMGVAR";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(lmbdb_fetch_row($rs)) {
		$umgvar[lmbdb_result($rs,"FORM_NAME")] = lmbdb_result($rs,"NORM");
	}
}




# -------- Eigene globale Variablen auslesen --------
if(!$custvar) {
    $custvar = array();
    $sqlquery3 = 'SELECT CKEY, CVALUE FROM LMB_CUSTVAR WHERE ACTIVE = ' . LMB_DBDEF_TRUE;
    $rs3 = lmbdb_exec($db, $sqlquery3) or errorhandle(lmbdb_errormsg($db), $sqlquery3, $action, __FILE__, __LINE__);
    if (!$rs3) {
        $commit = 1;
    }
    while (lmbdb_fetch_row($rs3)) {
        $custvar[lmbdb_result($rs3, "CKEY")] = lmbdb_result($rs3, "CVALUE");
    }


    /* --- load custom variables depend ------------------- */
    $sqlquery3 = 'SELECT LMB_CUSTVAR_DEPEND.CKEY, LMB_CUSTVAR_DEPEND.CVALUE FROM LMB_CUSTVAR_DEPEND LEFT JOIN LMB_CUSTVAR ON LMB_CUSTVAR_DEPEND.CKEY = LMB_CUSTVAR.CKEY WHERE LMB_CUSTVAR.OVERRIDABLE = ' . LMB_DBDEF_TRUE . ' AND LMB_CUSTVAR.ACTIVE = ' . LMB_DBDEF_TRUE . ' AND LMB_CUSTVAR_DEPEND.ACTIVE = ' . LMB_DBDEF_TRUE;
    $rs3 = lmbdb_exec($db, $sqlquery3) or errorhandle(lmbdb_errormsg($db), $sqlquery3, $action, __FILE__, __LINE__);
    if (!$rs3) {
        $commit = 1;
    }
    while (lmbdb_fetch_row($rs3)) {
        $custvar[lmbdb_result($rs3, "CKEY")] = lmbdb_result($rs3, "CVALUE");
    }
}


# -------- delete job action --------
if($del_index){
	$handle = explode("_",$del_index);
	delede_dir_job($handle,$subdir);
}

# --- refresh job -----
if($refresh_index){
	$handle = explode("_",$refresh_index);
	refresh_job($handle,$subdir);
}

# ---- Cron Job l√∂schen ----
if($del_job){
	$sqlquery = "DELETE FROM LMB_CRONTAB WHERE ID = $del_job AND KATEGORY = '$kategoriedesc'";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	#if(!update_crontab()){lmb_alert("no permission to /etc/crontab\\ncheck it manualy");};
}

# ---- Cron Job deactivate / activate ----
if($activate_job){
	$sqlquery = "SELECT ACTIV FROM LMB_CRONTAB WHERE ID = $activate_job AND KATEGORY = '$kategoriedesc'";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if(lmbdb_result($rs,"ACTIV")){$bool = LMB_DBDEF_FALSE;}else{$bool = LMB_DBDEF_TRUE;}
	$sqlquery = "UPDATE LMB_CRONTAB SET ACTIV = $bool WHERE ID = $activate_job AND KATEGORY = '$kategoriedesc'";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	#if(!update_crontab()){lmb_alert("no permission to /etc/crontab\\ncheck it manualy");};
}


if($add_job){add_job($kategoriedesc,$job_desc,$job_user,$job_template,$cron,$ifile,$subdir);}


if ($apply_jobs_crontab) {
    $commit = apply_cron_tab();
    if (!$commit) {
        $apply_jobs_crontab_success = true;
    }
}


if($commit){
	lmb_alert($lang[115]."\\n".$alert2);
} elseif($alert2) {
	lmb_alert($alert2);
}
unset($commit);

# close Logfile
if($error_logfile){fclose($error_logfile);}
if($logfile){fclose($logfile);}

if(!$GLOBALS["cronjob"]){
pop_right();
pop_bottom();
echo "</div>";
}

?>
