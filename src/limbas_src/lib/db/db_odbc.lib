<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */
function lmbdb_autocommit ($connection_id, $OnOff = false) {
    return odbc_autocommit($connection_id, $OnOff);
}

function lmbdb_binmode ($result_id, $mode) {
    return odbc_binmode ($result_id, $mode);
}

function lmbdb_close ($connection_id) {
    odbc_close($connection_id);
}

function lmbdb_close_all () {
    odbc_close_all();
}

function lmbdb_columns ($connection_id, $qualifier = null, $schema = null, $table_name = null, $column_name = null) {
    if ($column_name !== null) {
        return odbc_columns($connection_id, $qualifier, $schema, $table_name, $column_name);
    } else if ($table_name !== null) {
        return odbc_columns($connection_id, $qualifier, $schema, $table_name);
    } else if ($schema !== null) {
        return odbc_columns($connection_id, $qualifier, $schema);
    } else if ($qualifier !== null) {
        return odbc_columns($connection_id, $qualifier);
    }
    return odbc_columns($connection_id);
}

function lmbdb_commit ($connection_id) {
    return odbc_commit($connection_id);
}

function lmbdb_connect ($dsn, $user, $password, $cursor_type = null) {
    if ($cursor_type !== null) {
        return odbc_connect($dsn, $user, $password, $cursor_type);
    }
    return odbc_connect($dsn, $user, $password);
}

function lmbdb_cursor ($result_id) {
    return odbc_cursor($result_id);
}

function lmbdb_data_source ($connection_id, $fetch_type) {
    return odbc_data_source ($connection_id, $fetch_type);
}

function lmbdb_execute ($result_id, array $parameters_array = null) {
    if ($parameters_array !== null) {
        return odbc_execute($result_id, $parameters_array);
    }
    return odbc_execute ($result_id);
}

function lmbdb_error ($connection_id = null) {
    if ($connection_id !== null) {
        return odbc_error ($connection_id);
    }
    return odbc_error ();
}

function lmbdb_errormsg ($connection_id = null) {
    if ($connection_id !== null) {
        return odbc_errormsg ($connection_id);
    }
    return odbc_errormsg ();
}

function lmbdb_exec ($connection_id, $query_string, $flags = null) {
    if ($flags !== null) {
        return odbc_exec ($connection_id, $query_string, $flags);
    }
    return odbc_exec ($connection_id, $query_string);
}

function lmbdb_fetch_array ($result, $rownumber = null) {
    if ($rownumber !== null) {
        return odbc_fetch_array ($result, $rownumber);
    }
    return odbc_fetch_array ($result);
}

function lmbdb_fetch_object ($result, $rownumber = null) {
    if ($rownumber !== null) {
        return odbc_fetch_object ($result, $rownumber);
    }
    return odbc_fetch_object ($result);
}

function lmbdb_fetch_row ($result_id, $rownumber = null) {
    if ($rownumber !== null) {
        return odbc_fetch_row ($result_id, $rownumber);
    }
    return odbc_fetch_row ($result_id);
}

function lmbdb_fetch_into ($result_id, array &$result_array, $rownumber = null) {
    if ($rownumber !== null) {
        return odbc_fetch_into ($result_id, $result_array, $rownumber);
    }
    return odbc_fetch_into ($result_id, $result_array);
}

function lmbdb_field_len ($result_id, $field_number) {
    return odbc_field_len ($result_id, $field_number);
}

function lmbdb_field_scale ($result_id, $field_number) {
    return odbc_field_scale ($result_id, $field_number);
}

function lmbdb_field_name ($result_id, $field_number) {
    return odbc_field_name ($result_id, $field_number);
}

function lmbdb_field_type ($result_id, $field_number) {
    return odbc_field_type ($result_id, $field_number);
}

function lmbdb_field_num ($result_id, $field_name) {
    return odbc_field_num ($result_id, $field_name);
}

function lmbdb_free_result ($result_id) {
    return odbc_free_result ($result_id);
}

function lmbdb_gettypeinfo ($connection_id, $data_type = null) {
    if ($data_type !== null) {
        return odbc_gettypeinfo ($connection_id, $data_type);
    }
    return odbc_gettypeinfo ($connection_id);
}

function lmbdb_longreadlen ($result_id, $length) {
    return odbc_longreadlen ($result_id, $length);
}

function lmbdb_next_result ($result_id) {
    return odbc_next_result ($result_id);
}

function lmbdb_num_fields ($result_id) {
    return odbc_num_fields ($result_id);
}

function lmbdb_num_rows ($result_id) {
    return odbc_num_rows ($result_id);
}

function lmbdb_pconnect ($dsn, $user, $password, $cursor_type = null) {
    if ($cursor_type !== null) {
        return odbc_pconnect ($dsn, $user, $password, $cursor_type);
    }
    return odbc_pconnect ($dsn, $user, $password);
}

function lmbdb_prepare ($connection_id, $query_string) {
    return odbc_prepare ($connection_id, $query_string);
}

function lmbdb_result ($result_id, $field) {
    return odbc_result ($result_id, $field);
}

function lmbdb_rollback ($connection_id) {
    return odbc_rollback ($connection_id);
}

function lmbdb_setoption ($id, $function, $option, $param) {
    return odbc_setoption ($id, $function, $option, $param);
}

function lmbdb_specialcolumns ($connection_id, $type, $qualifier, $owner, $table, $scope, $nullable) {
    return odbc_specialcolumns ($connection_id, $type, $qualifier, $owner, $table, $scope, $nullable);
}

function lmbdb_statistics ($connection_id, $qualifier, $owner, $table_name, $unique, $accuracy) {
    return odbc_statistics ($connection_id, $qualifier, $owner, $table_name, $unique, $accuracy);
}

function lmbdb_tables ($connection_id, $qualifier = null, $owner = null, $name = null, $types = null) {
    if ($types !== null) {
        return odbc_tables ($connection_id, $qualifier, $owner, $name, $types);
    } else if ($name !== null) {
        return odbc_tables ($connection_id, $qualifier, $owner, $name);
    } else if ($owner !== null) {
        return odbc_tables ($connection_id, $qualifier, $owner);
    } else if ($qualifier !== null) {
        return odbc_tables ($connection_id, $qualifier);
    }
    return odbc_tables ($connection_id);
}

function lmbdb_primarykeys ($connection_id, $qualifier, $owner, $table) {
    return odbc_primarykeys ($connection_id, $qualifier, $owner, $table);
}

function lmbdb_columnprivileges ($connection_id, $qualifier, $owner, $table_name, $column_name) {
    return odbc_columnprivileges ($connection_id, $qualifier, $owner, $table_name, $column_name);
}

function lmbdb_tableprivileges ($connection_id, $qualifier, $owner, $name) {
    return odbc_tableprivileges ($connection_id, $qualifier, $owner, $name);
}

function lmbdb_foreignkeys ($connection_id, $pk_qualifier, $pk_owner, $pk_table, $fk_qualifier, $fk_owner, $fk_table) {
    return odbc_foreignkeys ($connection_id, $pk_qualifier, $pk_owner, $pk_table, $fk_qualifier, $fk_owner, $fk_table);
}

function lmbdb_procedures ($connection_id) {
    return odbc_procedures ($connection_id);
}

function lmbdb_procedurecolumns ($connection_id) {
    return odbc_procedurecolumns ($connection_id);
}

function lmbdb_do ($connection_id, $query, $flags) {
    odbc_do ($connection_id, $query, $flags);
}

function lmbdb_field_precision ($result_id, $field_number) {
    odbc_field_precision ($result_id, $field_number);
}

